{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "accordion/accordion-content.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Web component accordion content to be used inside an accordion\n\n```typescript\nimport '@cds/core/accordion/register.js';\n```\n\n```html\n<cds-accordion>\n  <cds-accordion-panel expanded>\n    <cds-accordion-header>Item 1</cds-accordion-header>\n    <cds-accordion-content>Content 1</cds-accordion-content>\n  </cds-accordion-panel>\n  <cds-accordion-panel>\n    <cds-accordion-header>Item 2</cds-accordion-header>\n    <cds-accordion-content>Content 2</cds-accordion-content>\n  </cds-accordion-panel>\n  <cds-accordion-panel disabled>\n    <cds-accordion-header>Item 3</cds-accordion-header>\n    <cds-accordion-content>Content 3</cds-accordion-content>\n  </cds-accordion-panel>\n</cds-accordion>\n```",
          "name": "CdsAccordionContent",
          "cssProperties": [
            {
              "name": "--color"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--font-weight"
            },
            {
              "name": "--background"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-accordion-content",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsAccordionContent",
          "declaration": {
            "name": "CdsAccordionContent",
            "module": "accordion/accordion-content.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "accordion/accordion-header.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Web component accordion to be used inside an accordion\n\n```typescript\nimport '@cds/core/accordion/register.js';\n```\n\n```html\n<cds-accordion>\n  <cds-accordion-panel expanded>\n    <cds-accordion-header>Item 1</cds-accordion-header>\n    <cds-accordion-content>Content 1</cds-accordion-content>\n  </cds-accordion-panel>\n  <cds-accordion-panel>\n    <cds-accordion-header>Item 2</cds-accordion-header>\n    <cds-accordion-content>Content 2</cds-accordion-content>\n  </cds-accordion-panel>\n  <cds-accordion-panel disabled>\n    <cds-accordion-header>Item 3</cds-accordion-header>\n    <cds-accordion-content>Content 3</cds-accordion-content>\n  </cds-accordion-panel>\n</cds-accordion>\n```",
          "name": "CdsAccordionHeader",
          "cssProperties": [
            {
              "name": "--color"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--font-weight"
            },
            {
              "name": "--background"
            },
            {
              "name": "--icon-color"
            },
            {
              "name": "--icon-transform"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-accordion-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsAccordionHeader",
          "declaration": {
            "name": "CdsAccordionHeader",
            "module": "accordion/accordion-header.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "accordion/accordion-panel.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Web component accordion panel to be used inside an accordion\n\n```typescript\nimport '@cds/core/accordion/register.js';\n```\n\n```html\n<cds-accordion>\n  <cds-accordion-panel expanded>\n    <cds-accordion-header>Item 1</cds-accordion-header>\n    <cds-accordion-content>Content 1</cds-accordion-content>\n  </cds-accordion-panel>\n  <cds-accordion-panel>\n    <cds-accordion-header>Item 2</cds-accordion-header>\n    <cds-accordion-content>Content 2</cds-accordion-content>\n  </cds-accordion-panel>\n  <cds-accordion-panel disabled>\n    <cds-accordion-header>Item 3</cds-accordion-header>\n    <cds-accordion-content>Content 3</cds-accordion-content>\n  </cds-accordion-panel>\n</cds-accordion>\n```",
          "name": "CdsAccordionPanel",
          "cssProperties": [
            {
              "name": "--animation-duration"
            },
            {
              "name": "--animation-easing"
            }
          ],
          "slots": [
            {},
            {
              "name": "cds-accordion-header"
            },
            {
              "name": "cds-accordion-content"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "cdsMotion",
              "type": {
                "text": "string"
              },
              "default": "'on'",
              "attribute": "cdsMotion"
            },
            {
              "kind": "field",
              "name": "cdsMotionChange",
              "type": {
                "text": "EventEmitter<string>"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expanded"
            },
            {
              "kind": "field",
              "name": "header",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "expandedChange",
              "type": {
                "text": "EventEmitter<boolean>"
              }
            },
            {
              "kind": "method",
              "name": "toggle",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "notify when the user has clicked the panel header",
              "name": "expandedChange"
            }
          ],
          "attributes": [
            {
              "name": "cdsMotion",
              "type": {
                "text": "string"
              },
              "default": "'on'",
              "fieldName": "cdsMotion"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expanded"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-accordion-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsAccordionPanel",
          "declaration": {
            "name": "CdsAccordionPanel",
            "module": "accordion/accordion-panel.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "accordion/accordion.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Web component accordion\n\n```typescript\nimport '@cds/core/accordion/register.js';\n```\n\n```html\n<cds-accordion>\n  <cds-accordion-panel expanded>\n    <cds-accordion-header>Item 1</cds-accordion-header>\n    <cds-accordion-content>Content 1</cds-accordion-content>\n  </cds-accordion-panel>\n  <cds-accordion-panel>\n    <cds-accordion-header>Item 2</cds-accordion-header>\n    <cds-accordion-content>Content 2</cds-accordion-content>\n  </cds-accordion-panel>\n  <cds-accordion-panel disabled>\n    <cds-accordion-header>Item 3</cds-accordion-header>\n    <cds-accordion-content>Content 3</cds-accordion-content>\n  </cds-accordion-panel>\n</cds-accordion>\n```",
          "name": "CdsAccordion",
          "cssProperties": [
            {
              "name": "--border-color"
            },
            {
              "name": "--border-width"
            },
            {
              "name": "--border-radius"
            }
          ],
          "slots": [
            {
              "description": "Content slot for inside the accordion",
              "name": ""
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-accordion",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsAccordion",
          "declaration": {
            "name": "CdsAccordion",
            "module": "accordion/accordion.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "accordion/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./accordion.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./accordion-panel.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./accordion-content.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./accordion-header.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "accordion/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "alert/alert-actions.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Web component alert actions to be used inside default and banner alerts.\n\n```typescript\nimport '@cds/core/alert/register.js';\n```\n\n```html\n<cds-alert>\n  Lorem ipsum dolor sit amet\n  <cds-alert-actions>\n    <cds-button>Fix</cds-button>\n  </cds-alert-actions>\n</cds-alert>\n```",
          "name": "CdsAlertActions",
          "cssProperties": [
            {
              "name": "--action-text-color"
            },
            {
              "name": "--action-hover-text-color"
            },
            {
              "name": "--action-font-size"
            }
          ],
          "slots": [
            {}
          ],
          "members": [
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "default | banner | light"
              },
              "default": "'light'",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "buttons",
              "type": {
                "text": "NodeListOf<CdsButton>"
              },
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-alert-actions",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsAlertActions",
          "declaration": {
            "name": "CdsAlertActions",
            "module": "alert/alert-actions.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "alert/alert-group.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Alert groups are containers for a set of alerts. Alert groups can hold one or many alerts\ninside of them with the expectation that all alerts will be of the same type. The exception\nto this rule is the `loading` alert type, which will be displayed regardless of the type\nof alert group containing it.\n\n```typescript\nimport '@cds/core/alert/register.js';\n```\n\n```html\n  <cds-alert-group type=\"danger\">\n    <cds-alert closable=\"true\">\n      Single alert\n      <cds-alert-actions>\n        buttons, links\n      </cds-alert-actions>\n    </cds-alert>\n    <cds-alert type=\"loading\">\n      Single Alert\n    </cds-alert>\n    <cds-alert closable=\"true\">\n      Another alert\n      <cds-alert-actions>\n        buttons, links\n      </cds-alert-actions>\n    </cds-alert>\n  </cds-alert-group>\n```",
          "name": "CdsAlertGroup",
          "cssProperties": [
            {
              "name": "--color"
            },
            {
              "name": "--icon-color"
            },
            {
              "name": "--icon-size"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--font-weight"
            },
            {
              "name": "--letter-spacing"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--background"
            },
            {
              "name": "--border-color"
            },
            {
              "name": "--border-width"
            },
            {
              "name": "--border-radius"
            }
          ],
          "slots": [
            {
              "description": "Content slot for the alerts",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "default | sm"
              },
              "default": "'default'",
              "description": "Sets the overall height and width of the alerts inside the alert group",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "default | banner | light"
              },
              "default": "'default'",
              "description": "Passed down into the alerts inside the alert-group",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | info | success | warning | danger | alt | loading"
              },
              "default": "'neutral'",
              "description": "Sets the status of the alerts inside the alert group",
              "attribute": "status"
            },
            {
              "kind": "field",
              "name": "alerts",
              "type": {
                "text": "NodeListOf<CdsAlert>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "pager",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "alertSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setupAlertsUpdate",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "syncAlerts",
              "privacy": "private",
              "parameters": [
                {
                  "name": "propsToSync",
                  "type": {
                    "text": "{ status: boolean; type: boolean; size: boolean }"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "size",
              "type": {
                "text": "default | sm"
              },
              "default": "'default'",
              "description": "Sets the overall height and width of the alerts inside the alert group",
              "fieldName": "size"
            },
            {
              "name": "type",
              "type": {
                "text": "default | banner | light"
              },
              "default": "'default'",
              "description": "Passed down into the alerts inside the alert-group",
              "fieldName": "type"
            },
            {
              "name": "status",
              "type": {
                "text": "neutral | info | success | warning | danger | alt | loading"
              },
              "default": "'neutral'",
              "description": "Sets the status of the alerts inside the alert group",
              "fieldName": "status"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-alert-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsAlertGroup",
          "declaration": {
            "name": "CdsAlertGroup",
            "module": "alert/alert-group.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "alert/alert.element.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getIconStatusTuple",
          "return": {
            "type": {
              "text": "[string, string]"
            }
          },
          "parameters": [
            {
              "name": "status",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "iconShapeIsAlertStatusType",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "shape",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getIconStatusLabel",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "status",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getIconStatusShape",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "status",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAlertContentLayout",
          "parameters": [
            {
              "name": "containerType",
              "type": {
                "text": "'wrapper' | 'content' | 'actions'"
              }
            },
            {
              "name": "alertGroupType",
              "type": {
                "text": "AlertGroupTypes"
              }
            },
            {
              "name": "alertGroupHasPager",
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "Alerts are banners that communicate a message with a severity attached to it.\nThey grab the user’s attention to provide critical information needed in context.\n\nAlerts outside of a cds-alert-group or cds-app-alert-group component will be\ndisplayed as a \"lightweight alert\". Lightweight alerts, by default, provide no\nclose button component and they inherit no status (a.k.a. success, danger, etc.).\n\nAlerts inside a cds-alert-group component inherit their status from the containing\nalert group.\n\nAlerts inside a cds-app-alert-group component inherit their status as a default from\nthe containing app-alert group, although it can be overridden on individual alerts.\n\n```typescript\nimport '@cds/core/alert/register.js';\n```\n\n```html\n  <cds-alert>\n    Single Alert\n    <cds-alert-actions>\n      buttons, links\n    </cds-alert-actions>\n  </cds-alert>\n```",
          "name": "CdsAlert",
          "cssProperties": [
            {
              "name": "--color"
            },
            {
              "name": "--background"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--border-color"
            },
            {
              "name": "--icon-color"
            },
            {
              "name": "--close-icon-color"
            },
            {
              "name": "--close-icon-color-hover"
            }
          ],
          "slots": [
            {
              "description": "Content slot for inside the alert",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "closeChange",
              "type": {
                "text": "EventEmitter<boolean>"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "default | sm"
              },
              "default": "'default'",
              "description": "Sets the overall height and width of the alert and icon based on value",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "AlertGroupTypes"
              },
              "default": "'light'",
              "description": "Sets up the buttons, layouts, close-button and other properties based on the alert group container\nInternal Use Only",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "idForAriaDescriber",
              "type": {
                "text": "string"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "If false, the alert will not render the close button.\n\nLightweight alerts do not display close buttons",
              "attribute": "closable"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | info | success | warning | danger | alt | loading"
              },
              "default": "'neutral'",
              "description": "Sets the color of the alert from a predefined list of statuses",
              "attribute": "status"
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "alertActions",
              "type": {
                "text": "CdsAlertActions"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "alertIcons",
              "type": {
                "text": "NodeListOf<CdsIcon>"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "closeButton",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "parentGroupHasPager",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "closeAlert",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "notify when the user has clicked the dismiss button",
              "name": "closeChange"
            }
          ],
          "attributes": [
            {
              "name": "size",
              "type": {
                "text": "default | sm"
              },
              "default": "'default'",
              "description": "Sets the overall height and width of the alert and icon based on value",
              "fieldName": "size"
            },
            {
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "If false, the alert will not render the close button.\n\nLightweight alerts do not display close buttons",
              "fieldName": "closable"
            },
            {
              "name": "status",
              "type": {
                "text": "neutral | info | success | warning | danger | alt | loading"
              },
              "default": "'neutral'",
              "description": "Sets the color of the alert from a predefined list of statuses",
              "fieldName": "status"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-alert",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getIconStatusTuple",
          "declaration": {
            "name": "getIconStatusTuple",
            "module": "alert/alert.element.js"
          }
        },
        {
          "kind": "js",
          "name": "iconShapeIsAlertStatusType",
          "declaration": {
            "name": "iconShapeIsAlertStatusType",
            "module": "alert/alert.element.js"
          }
        },
        {
          "kind": "js",
          "name": "getIconStatusLabel",
          "declaration": {
            "name": "getIconStatusLabel",
            "module": "alert/alert.element.js"
          }
        },
        {
          "kind": "js",
          "name": "getIconStatusShape",
          "declaration": {
            "name": "getIconStatusShape",
            "module": "alert/alert.element.js"
          }
        },
        {
          "kind": "js",
          "name": "getAlertContentLayout",
          "declaration": {
            "name": "getAlertContentLayout",
            "module": "alert/alert.element.js"
          }
        },
        {
          "kind": "js",
          "name": "CdsAlert",
          "declaration": {
            "name": "CdsAlert",
            "module": "alert/alert.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "alert/alert.interfaces.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "alert/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./alert-actions.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./alert.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./alert-group.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./alert.interfaces.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "alert/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "badge/badge.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Badges provide a method to highlight a count of an element either next to it\nor inside the element itself.\n\n```typescript\nimport '@cds/core/badge/register.js';\n```\n\n```html\n<cds-badge status=\"info\">2<span cds-layout=\"display:screen-reader-only\"> items. Item text for screen-readers should be added to badges in elements that will only be read in a screen-reader.</span></cds-badge>\n```",
          "name": "CdsBadge",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--border-color"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--border-width"
            },
            {
              "name": "--color"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--font-weight"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--size"
            }
          ],
          "slots": [
            {
              "description": "Content slot for inside the badge",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "color",
              "type": {
                "text": "'default' | 'gray' | 'purple' | 'blue' | 'orange' | 'light-blue' | null"
              },
              "default": "null",
              "description": "Sets the color of the badge",
              "attribute": "color"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "'neutral' | 'info' | 'success' | 'warning' | 'danger'"
              },
              "default": "'neutral'",
              "description": "Sets the color of the badge",
              "attribute": "status"
            }
          ],
          "attributes": [
            {
              "name": "color",
              "type": {
                "text": "'default' | 'gray' | 'purple' | 'blue' | 'orange' | 'light-blue' | null"
              },
              "default": "null",
              "description": "Sets the color of the badge",
              "fieldName": "color"
            },
            {
              "name": "status",
              "type": {
                "text": "'neutral' | 'info' | 'success' | 'warning' | 'danger'"
              },
              "default": "'neutral'",
              "description": "Sets the color of the badge",
              "fieldName": "status"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-badge",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsBadge",
          "declaration": {
            "name": "CdsBadge",
            "module": "badge/badge.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "badge/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./badge.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "badge/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "breadcrumb/breadcrumb.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@cds/core/breadcrumb/register.js';\n```\n\n```html\n<cds-breadcrumb aria-label=\"breadcrumb\">\n  <a href=\"/home\" cds-text=\"link\">Home</a>\n  <a href=\"/parent\" cds-text=\"link\">Parent page</a>\n  <span aria-current=\"page\">Current page</span>\n</cds-breadcrumb>\n```",
          "name": "CdsBreadcrumb",
          "cssProperties": [
            {
              "name": "--font-size"
            },
            {
              "name": "--font-weight"
            },
            {
              "name": "--letter-spacing"
            },
            {
              "name": "--color"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "navItems",
              "type": {
                "text": "Element[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "customSeparator",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "separator",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "assignSlots",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "slotNames",
              "type": {
                "text": "string[]"
              },
              "privacy": "private",
              "readonly": true
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-breadcrumb",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsBreadcrumb",
          "declaration": {
            "name": "CdsBreadcrumb",
            "module": "breadcrumb/breadcrumb.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "breadcrumb/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./breadcrumb.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "breadcrumb/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "button/button.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Buttons allow an application to communicate action and direct user intent.\n\n```typescript\nimport '@cds/core/button/register.js';\n```\n\n```html\n<cds-button>submit</cds-button>\n```",
          "name": "CdsButton",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--border-color"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--border-width"
            },
            {
              "name": "--box-shadow-color"
            },
            {
              "name": "--color"
            },
            {
              "name": "--font-family"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--font-weight"
            },
            {
              "name": "--height"
            },
            {
              "name": "--letter-spacing"
            },
            {
              "name": "--min-width"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--text-decoration"
            },
            {
              "name": "--text-transform"
            }
          ],
          "slots": [
            {
              "description": "Content slot for inside the button",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "'solid' | 'outline' | 'flat' | 'flat-inline'"
              },
              "default": "'solid'",
              "description": "Define the type of action the button triggers\n\n- `solid`: buttons direct the user’s attention to the primary action the application is suggesting that the user take.\n- `outline`: buttons indicate secondary actions that compliments a primary action or reduces visual noise when there are many actions on the page.\n- `flat`: buttons are used as tertiary buttons. Can also be used inline because they are different from content in style and recognizable as buttons alongside content.",
              "attribute": "action"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "'primary' | 'success' | 'warning' | 'danger' | 'neutral' | 'inverse'"
              },
              "default": "'primary'",
              "description": "Sets the color of the button to match the following string statuses",
              "attribute": "status"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'sm' | 'md'"
              },
              "default": "'md'",
              "description": "Sets the overall height and width of the button based on the following string values:",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "block",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets if the button should be full width with display block",
              "attribute": "block"
            },
            {
              "kind": "field",
              "name": "loadingState",
              "type": {
                "text": "default | loading | success | error"
              },
              "description": "`default`: shows the content of the button\n- `loading`: disables the button and shows a spinner inside the button\n- `success`: disables the button and shows a check mark inside the button; auto-triggers to change back to DEFAULT state after 1000 ms\n- `error`: shows the content of the button (in the context of application, this state is usually entered from a LOADING state. the application should show appropriate error message)",
              "attribute": "loadingState"
            },
            {
              "kind": "field",
              "name": "_disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "isDefaultLoadingState",
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "disableButton",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "enableButton",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "readonly",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "attribute": "type",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "attribute": "name",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "attribute": "value",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "tabIndexAttr",
              "type": {
                "text": "number | null"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "isAnchor",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "badge",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "marker",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "explicitClick",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "markerSignificantProperties",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "['type', 'name', 'value', 'disabled']",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateActiveMouseDown",
              "privacy": "private",
              "description": "This mimics the mouse-click visual behavior for keyboard only users and screen readers.\nBrowsers do not apply the CSS psuedo-selector :active in those instances. So we need this\nfor our :active styles to show.\n\nMake sure to update a component's CSS to account for the presence of the [_active] attribute\nin all instance where :active is defined.",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateActiveMouseUp",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "setupNativeButtonBehavior",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "triggerNativeButtonBehavior",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "description": "We have to append a hidden button outside the web component in the light DOM\nThis allows us to trigger native submit events within a form element.",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "createMarker",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "markerAttached",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "hasMarkerSignificantProperty",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "props",
                  "type": {
                    "text": "PropertyValues<any>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateKeyBoardEventBehavior",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "updateButtonAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "addDefaultSubmitBehavior",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "action",
              "type": {
                "text": "'solid' | 'outline' | 'flat' | 'flat-inline'"
              },
              "default": "'solid'",
              "description": "Define the type of action the button triggers\n\n- `solid`: buttons direct the user’s attention to the primary action the application is suggesting that the user take.\n- `outline`: buttons indicate secondary actions that compliments a primary action or reduces visual noise when there are many actions on the page.\n- `flat`: buttons are used as tertiary buttons. Can also be used inline because they are different from content in style and recognizable as buttons alongside content.",
              "fieldName": "action"
            },
            {
              "name": "status",
              "type": {
                "text": "'primary' | 'success' | 'warning' | 'danger' | 'neutral' | 'inverse'"
              },
              "default": "'primary'",
              "description": "Sets the color of the button to match the following string statuses",
              "fieldName": "status"
            },
            {
              "name": "size",
              "type": {
                "text": "'sm' | 'md'"
              },
              "default": "'md'",
              "description": "Sets the overall height and width of the button based on the following string values:",
              "fieldName": "size"
            },
            {
              "name": "block",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets if the button should be full width with display block",
              "fieldName": "block"
            },
            {
              "name": "loadingState",
              "type": {
                "text": "default | loading | success | error"
              },
              "description": "`default`: shows the content of the button\n- `loading`: disables the button and shows a spinner inside the button\n- `success`: disables the button and shows a check mark inside the button; auto-triggers to change back to DEFAULT state after 1000 ms\n- `error`: shows the content of the button (in the context of application, this state is usually entered from a LOADING state. the application should show appropriate error message)",
              "fieldName": "loadingState"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "fieldName": "type",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "fieldName": "name",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "fieldName": "value",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsBaseButton",
            "package": "@cds/core/internal"
          },
          "tagName": "cds-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsButton",
          "declaration": {
            "name": "CdsButton",
            "module": "button/button.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "button/icon-button.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Icon buttons give applications a compact alternative to communicate action and direct user intent.\n\n```typescript\nimport '@cds/core/button/register.js';\n```\n\n```html\n<cds-icon-button><cds-icon shape=\"download\"></cds-icon></cds-icon-button>\n```",
          "name": "CdsIconButton",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--border-color"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--border-width"
            },
            {
              "name": "--box-shadow-color"
            },
            {
              "name": "--color"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--height"
            },
            {
              "name": "--padding"
            }
          ],
          "slots": [
            {
              "description": "Content slot for inside the button",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string"
              },
              "description": "The aria-label attribute is required for accessibility. The cds-icon-button\nwill warn if used without the aria-label being set.\n\nIdeally, the aria-label will be specific to the button's purpose. Avoid sharing\ngeneric labels across multiple icon buttons on a page.",
              "attribute": "ariaLabel"
            },
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "'solid' | 'outline' | 'flat' | 'flat-inline'"
              },
              "default": "'solid'",
              "description": "Define the type of action the button triggers\n\n- `solid`: buttons direct the user’s attention to the primary action the application is suggesting that the user take.\n- `outline`: buttons indicate secondary actions that compliments a primary action or reduces visual noise when there are many actions on the page.\n- `flat`: buttons are used as tertiary buttons. Can also be used inline because they are different from content in style and recognizable as buttons alongside content.",
              "attribute": "action",
              "inheritedFrom": {
                "name": "CdsButton",
                "module": "button/button.element.js"
              }
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "'primary' | 'success' | 'warning' | 'danger' | 'neutral' | 'inverse'"
              },
              "default": "'primary'",
              "description": "Sets the color of the button to match the following string statuses",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsButton",
                "module": "button/button.element.js"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'sm' | 'md'"
              },
              "default": "'md'",
              "description": "Sets the overall height and width of the button based on the following string values:",
              "attribute": "size",
              "inheritedFrom": {
                "name": "CdsButton",
                "module": "button/button.element.js"
              }
            },
            {
              "kind": "field",
              "name": "block",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets if the button should be full width with display block",
              "attribute": "block",
              "inheritedFrom": {
                "name": "CdsButton",
                "module": "button/button.element.js"
              }
            },
            {
              "kind": "field",
              "name": "loadingState",
              "type": {
                "text": "default | loading | success | error"
              },
              "description": "`default`: shows the content of the button\n- `loading`: disables the button and shows a spinner inside the button\n- `success`: disables the button and shows a check mark inside the button; auto-triggers to change back to DEFAULT state after 1000 ms\n- `error`: shows the content of the button (in the context of application, this state is usually entered from a LOADING state. the application should show appropriate error message)",
              "attribute": "loadingState",
              "inheritedFrom": {
                "name": "CdsButton",
                "module": "button/button.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsButton",
                "module": "button/button.element.js"
              }
            },
            {
              "kind": "method",
              "name": "isDefaultLoadingState",
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsButton",
                "module": "button/button.element.js"
              }
            },
            {
              "kind": "method",
              "name": "disableButton",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsButton",
                "module": "button/button.element.js"
              }
            },
            {
              "kind": "method",
              "name": "enableButton",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsButton",
                "module": "button/button.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "readonly",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "attribute": "type",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "attribute": "name",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "attribute": "value",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "tabIndexAttr",
              "type": {
                "text": "number | null"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "isAnchor",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "badge",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "marker",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "explicitClick",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "markerSignificantProperties",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "['type', 'name', 'value', 'disabled']",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateActiveMouseDown",
              "privacy": "private",
              "description": "This mimics the mouse-click visual behavior for keyboard only users and screen readers.\nBrowsers do not apply the CSS psuedo-selector :active in those instances. So we need this\nfor our :active styles to show.\n\nMake sure to update a component's CSS to account for the presence of the [_active] attribute\nin all instance where :active is defined.",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateActiveMouseUp",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "setupNativeButtonBehavior",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "triggerNativeButtonBehavior",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "description": "We have to append a hidden button outside the web component in the light DOM\nThis allows us to trigger native submit events within a form element.",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "createMarker",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "markerAttached",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "hasMarkerSignificantProperty",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "props",
                  "type": {
                    "text": "PropertyValues<any>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateKeyBoardEventBehavior",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "updateButtonAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "addDefaultSubmitBehavior",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "ariaLabel",
              "type": {
                "text": "string"
              },
              "description": "The aria-label attribute is required for accessibility. The cds-icon-button\nwill warn if used without the aria-label being set.\n\nIdeally, the aria-label will be specific to the button's purpose. Avoid sharing\ngeneric labels across multiple icon buttons on a page.",
              "fieldName": "ariaLabel"
            },
            {
              "name": "action",
              "type": {
                "text": "'solid' | 'outline' | 'flat' | 'flat-inline'"
              },
              "default": "'solid'",
              "description": "Define the type of action the button triggers\n\n- `solid`: buttons direct the user’s attention to the primary action the application is suggesting that the user take.\n- `outline`: buttons indicate secondary actions that compliments a primary action or reduces visual noise when there are many actions on the page.\n- `flat`: buttons are used as tertiary buttons. Can also be used inline because they are different from content in style and recognizable as buttons alongside content.",
              "fieldName": "action",
              "inheritedFrom": {
                "name": "CdsButton",
                "module": "button/button.element.js"
              }
            },
            {
              "name": "status",
              "type": {
                "text": "'primary' | 'success' | 'warning' | 'danger' | 'neutral' | 'inverse'"
              },
              "default": "'primary'",
              "description": "Sets the color of the button to match the following string statuses",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsButton",
                "module": "button/button.element.js"
              }
            },
            {
              "name": "size",
              "type": {
                "text": "'sm' | 'md'"
              },
              "default": "'md'",
              "description": "Sets the overall height and width of the button based on the following string values:",
              "fieldName": "size",
              "inheritedFrom": {
                "name": "CdsButton",
                "module": "button/button.element.js"
              }
            },
            {
              "name": "block",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets if the button should be full width with display block",
              "fieldName": "block",
              "inheritedFrom": {
                "name": "CdsButton",
                "module": "button/button.element.js"
              }
            },
            {
              "name": "loadingState",
              "type": {
                "text": "default | loading | success | error"
              },
              "description": "`default`: shows the content of the button\n- `loading`: disables the button and shows a spinner inside the button\n- `success`: disables the button and shows a check mark inside the button; auto-triggers to change back to DEFAULT state after 1000 ms\n- `error`: shows the content of the button (in the context of application, this state is usually entered from a LOADING state. the application should show appropriate error message)",
              "fieldName": "loadingState",
              "inheritedFrom": {
                "name": "CdsButton",
                "module": "button/button.element.js"
              }
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "fieldName": "type",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "fieldName": "name",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "fieldName": "value",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsButton",
            "module": "/button/button.element.js"
          },
          "tagName": "cds-icon-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsIconButton",
          "declaration": {
            "name": "CdsIconButton",
            "module": "button/icon-button.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "button/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./button.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./icon-button.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./inline-button.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "button/inline-button.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Inline buttons are used inside and alongside textual content within Clarity components.\nThey give action buttons a less prominent, yet familiar, visual presence.\n\n```typescript\nimport '@cds/core/button/register.js';\n```\n\n```html\n<cds-inline-button>Button text goes here</cds-inline-button>\n```",
          "name": "CdsInlineButton",
          "cssProperties": [
            {
              "name": "--text-decoration"
            },
            {
              "name": "--color"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--line-height"
            },
            {
              "name": "--letter-spacing"
            }
          ],
          "slots": [
            {
              "description": "Content slot for inside the button",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "readonly",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "attribute": "type",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "attribute": "name",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "attribute": "value",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "tabIndexAttr",
              "type": {
                "text": "number | null"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "isAnchor",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "badge",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "marker",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "explicitClick",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "markerSignificantProperties",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "['type', 'name', 'value', 'disabled']",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateActiveMouseDown",
              "privacy": "private",
              "description": "This mimics the mouse-click visual behavior for keyboard only users and screen readers.\nBrowsers do not apply the CSS psuedo-selector :active in those instances. So we need this\nfor our :active styles to show.\n\nMake sure to update a component's CSS to account for the presence of the [_active] attribute\nin all instance where :active is defined.",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateActiveMouseUp",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "setupNativeButtonBehavior",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "triggerNativeButtonBehavior",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "description": "We have to append a hidden button outside the web component in the light DOM\nThis allows us to trigger native submit events within a form element.",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "createMarker",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "markerAttached",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "hasMarkerSignificantProperty",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "props",
                  "type": {
                    "text": "PropertyValues<any>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateKeyBoardEventBehavior",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "updateButtonAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "addDefaultSubmitBehavior",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsBaseButton",
            "package": "@cds/core/internal"
          },
          "tagName": "cds-inline-button",
          "customElement": true,
          "attributes": [
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "fieldName": "type",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "fieldName": "name",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "fieldName": "value",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsInlineButton",
          "declaration": {
            "name": "CdsInlineButton",
            "module": "button/inline-button.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "button/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "card/card.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Web component card.\n\n```typescript\nimport '@cds/core/card/register.js';\n```\n\n```html\n<cds-card aria-labelledby=\"{label your card}\">\n <div cds-layout=\"vertical gap:md\">\n   <h2 id=\"{label your card}\" cds-text=\"section\" cds-layout=\"p-y:sm\">\n     <!-- Card title -->\n   </h2>\n\n   <cds-divider cds-card-remove-margin></cds-divider>\n\n   <div cds-text=\"body light\" cds-layout=\"p-y:md\">\n     <!-- Card content -->\n   </div>\n\n   <cds-divider cds-card-remove-margin></cds-divider>\n\n   <div cds-layout=\"horizontal gap:sm p-y:sm align:vertical-center\">\n     <cds-button action=\"flat-inline\">View</cds-button>\n   </div>\n </div>\n</cds-card>\n```",
          "name": "CdsCard",
          "cssProperties": [
            {
              "name": "--width"
            },
            {
              "name": "--height"
            },
            {
              "name": "--color"
            },
            {
              "name": "--overflow"
            },
            {
              "name": "--overflow-x"
            },
            {
              "name": "--overflow-y"
            },
            {
              "name": "--background"
            },
            {
              "name": "--border"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--box-shadow"
            },
            {
              "name": "--cds-card-remove-margin"
            }
          ],
          "slots": [
            {
              "description": "For projecting card content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "globalStyles",
              "default": "css`\n    [cds-card-remove-margin] {\n      margin-left: calc(-1 * var(--card-remove-margin));\n      width: calc(100% + calc(var(--card-remove-margin) * 2));\n    }\n  `"
            }
          ],
          "superclass": {
            "name": "CdsInternalPanel",
            "package": "@cds/core/internal-components/panel"
          },
          "tagName": "cds-card",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsCard",
          "declaration": {
            "name": "CdsCard",
            "module": "card/card.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "card/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./card.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "card/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "checkbox/checkbox-group.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Checkbox Group\n\n```typescript\nimport '@cds/core/checkbox';\n```\n\n```html\n<cds-checkbox-group>\n  <label>Select an item</label>\n  <cds-checkbox>\n    <label>Test</label>\n    <input type=\"checkbox\" />\n  </cds-checkbox>\n\n  <cds-checkbox>\n    <label>Test</label>\n    <input type=\"checkbox\" />\n  </cds-checkbox>\n</cds-checkbox-group>\n```",
          "name": "CdsCheckboxGroup",
          "slots": [
            {
              "description": "For projecting checkbox controls",
              "name": ""
            }
          ],
          "superclass": {
            "name": "CdsInternalControlGroup",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-checkbox-group",
          "customElement": true,
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of control group validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "horizontal | horizontal"
              },
              "default": "defaultFormLayout",
              "description": "-inline | vertical | vertical-inline | compact}",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "fieldName": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disable all controls within a control group or omit and disable controls individually",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of control group validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "horizontal | horizontal"
              },
              "default": "defaultFormLayout",
              "description": "-inline | vertical | vertical-inline | compact}",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "attribute": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disable all controls within a control group or omit and disable controls individually",
              "attribute": "disabled",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controls",
              "type": {
                "text": "NodeListOf<CdsControl | CdsInternalControlInline>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "groupLabelId",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<FormLayout>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isInlineControlGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isControlGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlsTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inlineControlLayout",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelLayout",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlMessageLayout",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateLabelAndGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "method",
              "name": "updateControlMessages",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsCheckboxGroup",
          "declaration": {
            "name": "CdsCheckboxGroup",
            "module": "checkbox/checkbox-group.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "checkbox/checkbox.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Checkbox\n\n```typescript\nimport '@cds/core/checkbox/register.js';\n```\n\n```html\n<cds-checkbox>\n  <label>checkbox</label>\n  <input type=\"checkbox\" />\n  <cds-control-message>message text</cds-control-message>\n</cds-checkbox>\n```",
          "name": "CdsCheckbox",
          "cssProperties": [
            {
              "name": "--color"
            },
            {
              "name": "--check-color"
            },
            {
              "name": "--background"
            },
            {
              "name": "--border-radius"
            }
          ],
          "slots": [
            {
              "description": "For projecting checkbox",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "attribute": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isControlGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "checkedChange",
              "type": {
                "text": "EventEmitter<boolean>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "internalLabelTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "method",
              "name": "selectInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              },
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsInternalControlInline",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-checkbox",
          "customElement": true,
          "attributes": [
            {
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "fieldName": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsCheckbox",
          "declaration": {
            "name": "CdsCheckbox",
            "module": "checkbox/checkbox.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "checkbox/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./checkbox.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./checkbox-group.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "checkbox/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "datalist/datalist.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Datalist\n\n```typescript\nimport '@cds/core/datalist/register.js';\n```\n\n```html\n<cds-datalist>\n  <label>datalist</label>\n  <input type=\"text\" />\n  <datalist>\n    <option value=\"item 1\"></option>\n    <option value=\"item 2\"></option>\n    <option value=\"item 3\"></option>\n  </datalist>\n  <cds-control-message>message text</cds-control-message>\n</cds-datalist>\n```",
          "name": "CdsDatalist",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--background-size"
            },
            {
              "name": "--border"
            },
            {
              "name": "--border-bottom"
            },
            {
              "name": "--outline"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--color"
            },
            {
              "name": "--line-height"
            },
            {
              "name": "--transition"
            }
          ],
          "slots": [
            {
              "description": "For projecting input, datalist and label",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "globalStyles",
              "privacy": "protected",
              "default": "styles"
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              },
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsControl",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-datalist",
          "customElement": true,
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsDatalist",
          "declaration": {
            "name": "CdsDatalist",
            "module": "datalist/datalist.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "datalist/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./datalist.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "datalist/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "date/date.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Date\n\n```typescript\nimport '@cds/core/date/register.js';\n```\n\n```html\n<cds-date>\n  <label>Date</label>\n  <input type=\"date\" />\n  <cds-control-message>message text</cds-control-message>\n</cds-date>\n```",
          "name": "CdsDate",
          "slots": [
            {
              "description": "For projecting date input and label",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "globalStyles",
              "privacy": "protected",
              "default": "styles"
            },
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              },
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsControl",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-date",
          "customElement": true,
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsDate",
          "declaration": {
            "name": "CdsDate",
            "module": "date/date.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "date/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./date.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "date/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "divider/divider.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Dividers are a convenient way to place lined dividers or \"rules\"\nbetween blocks of content.\n\n```typescript\nimport '@cds/core/divider/register.js';\n```\n\n```html\n<cds-divider></cds-divider>\n```",
          "name": "CdsDivider",
          "cssProperties": [
            {
              "name": "--color"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--size"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "orientation",
              "type": {
                "text": "'horizontal' | 'vertical'"
              },
              "default": "'horizontal'",
              "attribute": "orientation"
            }
          ],
          "attributes": [
            {
              "name": "orientation",
              "type": {
                "text": "'horizontal' | 'vertical'"
              },
              "default": "'horizontal'",
              "fieldName": "orientation"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-divider",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsDivider",
          "declaration": {
            "name": "CdsDivider",
            "module": "divider/divider.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "divider/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./divider.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "divider/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "file/file.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Time Input\n\n```typescript\nimport '@cds/core/file/register.js';\n```\n\n```html\n<cds-file>\n  <label>file</label>\n  <input type=\"file\" />\n</cds-file>\n```",
          "name": "CdsFile",
          "slots": [
            {
              "description": "For projecting file input and label",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "buttonLabel",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "clearFilesControlTemplate",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "clearFiles",
              "parameters": [
                {
                  "name": "fireEvent",
                  "default": "true"
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateLabelAndFocus",
              "parameters": [
                {
                  "name": "files",
                  "optional": true,
                  "type": {
                    "text": "FileList"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              },
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsControl",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-file",
          "customElement": true,
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsFile",
          "declaration": {
            "name": "CdsFile",
            "module": "file/file.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "file/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./file.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "file/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "forms/control-action/control-action.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Control Action\n\n```typescript\nimport '@cds/core/forms/register.js';\n```\n\n```html\n<cds-control-action>\n\n</cds-control-action>\n```",
          "name": "CdsControlAction",
          "slots": [
            {
              "description": "For projecting text content or cds-icon",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "'label' | 'prefix' | 'suffix'"
              },
              "description": "Set the action type placement within the supporting input control",
              "attribute": "action"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "readonly",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "ariaLabel"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "syncAria",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setSlotLocation"
            },
            {
              "kind": "method",
              "name": "validateAriaLabel",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "attribute": "type",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "attribute": "name",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "attribute": "value",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "tabIndexAttr",
              "type": {
                "text": "number | null"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "isAnchor",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "badge",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "marker",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "explicitClick",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "markerSignificantProperties",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "['type', 'name', 'value', 'disabled']",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateActiveMouseDown",
              "privacy": "private",
              "description": "This mimics the mouse-click visual behavior for keyboard only users and screen readers.\nBrowsers do not apply the CSS psuedo-selector :active in those instances. So we need this\nfor our :active styles to show.\n\nMake sure to update a component's CSS to account for the presence of the [_active] attribute\nin all instance where :active is defined.",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateActiveMouseUp",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "setupNativeButtonBehavior",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "triggerNativeButtonBehavior",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "description": "We have to append a hidden button outside the web component in the light DOM\nThis allows us to trigger native submit events within a form element.",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "createMarker",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "markerAttached",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "hasMarkerSignificantProperty",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "props",
                  "type": {
                    "text": "PropertyValues<any>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateKeyBoardEventBehavior",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "updateButtonAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "addDefaultSubmitBehavior",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "action",
              "type": {
                "text": "'label' | 'prefix' | 'suffix'"
              },
              "description": "Set the action type placement within the supporting input control",
              "fieldName": "action"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "ariaLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "ariaLabel"
            },
            {
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "fieldName": "type",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "fieldName": "name",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "fieldName": "value",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsBaseButton",
            "package": "@cds/core/internal"
          },
          "tagName": "cds-control-action",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsControlAction",
          "declaration": {
            "name": "CdsControlAction",
            "module": "forms/control-action/control-action.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "forms/control-group/control-group.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Internal Control Group\n\n```typescript\nimport '@cds/core/forms/register.js';\n```\n\n```html\n<cds-internal-control-group>\n  <label>...</label>\n  <cds-control>\n    <label></label>\n    <input ... />\n  </cds-control>\n  <cds-control>\n    <label></label>\n    <input ... />\n  </cds-control>\n</cds-internal-control-group>\n```",
          "name": "CdsInternalControlGroup",
          "slots": [
            {
              "description": "For projecting control group",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of control group validation",
              "attribute": "status"
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "horizontal | horizontal"
              },
              "default": "defaultFormLayout",
              "description": "-inline | vertical | vertical-inline | compact}",
              "attribute": "layout"
            },
            {
              "kind": "field",
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "attribute": "controlAlign"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disable all controls within a control group or omit and disable controls individually",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth"
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "controls",
              "type": {
                "text": "NodeListOf<CdsControl | CdsInternalControlInline>"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "controlSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "groupLabelId",
              "type": {
                "text": "string"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<FormLayout>"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "isInlineControlGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "isControlGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "controlsTemplate",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "inlineControlLayout",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "primaryLabelLayout",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "controlMessageLayout",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "associateLabelAndGroup",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateControlMessages",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of control group validation",
              "fieldName": "status"
            },
            {
              "name": "layout",
              "type": {
                "text": "horizontal | horizontal"
              },
              "default": "defaultFormLayout",
              "description": "-inline | vertical | vertical-inline | compact}",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "layout"
            },
            {
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "fieldName": "controlAlign"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disable all controls within a control group or omit and disable controls individually",
              "fieldName": "disabled"
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth"
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-internal-control-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsInternalControlGroup",
          "declaration": {
            "name": "CdsInternalControlGroup",
            "module": "forms/control-group/control-group.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "forms/control-inline/control-inline.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Internal Control Inline (boolean types)\n\n```typescript\nimport '@cds/core/forms/register.js';\n```\n\n```html\n<cds-internal-control-inline>\n  <label>inline</label>\n  <input type=\"radio\" />\n</ds-internal-control-inline>\n```",
          "name": "CdsInternalControlInline",
          "slots": [
            {
              "description": "For projecting inline input and label",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "attribute": "controlAlign"
            },
            {
              "kind": "field",
              "name": "isControlGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "checkedChange",
              "type": {
                "text": "EventEmitter<boolean>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "internalLabelTemplate",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "selectInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              },
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "fieldName": "controlAlign"
            },
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsControl",
            "module": "/forms/control/control.element.js"
          },
          "tagName": "cds-internal-control-inline",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsInternalControlInline",
          "declaration": {
            "name": "CdsInternalControlInline",
            "module": "forms/control-inline/control-inline.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "forms/control-label/control-label.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Label\n\n```typescript\nimport '@cds/core/forms/register.js';\n```\n\n```html\n<cds-internal-control-label status=\"primary | secondary\">\n  <label>...</label>\n</cds-internal-control-label>\n```",
          "name": "CdsInternalControlLabel",
          "cssProperties": [
            {
              "name": "--label-width"
            }
          ],
          "slots": [
            {
              "description": "For projecting label text",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "'primary' | 'secondary'"
              },
              "default": "'primary'",
              "attribute": "action"
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "action",
              "type": {
                "text": "'primary' | 'secondary'"
              },
              "default": "'primary'",
              "fieldName": "action"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-internal-control-label",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsInternalControlLabel",
          "declaration": {
            "name": "CdsInternalControlLabel",
            "module": "forms/control-label/control-label.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "forms/control-message/control-message.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Control Message\n\n```typescript\nimport '@cds/core/forms/register.js';\n```\n\n```html\n<cds-control>\n  <label>Test</label>\n  <input type=\"text\" />\n  <cds-control-message>helper text</cds-control-message>\n</cds-control>\n```",
          "name": "CdsControlMessage",
          "cssProperties": [
            {
              "name": "--color"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--font-weight"
            },
            {
              "name": "--max-width"
            },
            {
              "name": "--min-width"
            }
          ],
          "slots": [
            {
              "description": "For projecting helper message text",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control message validation",
              "attribute": "status"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "ValidityStateKey"
              },
              "description": "Defines the HTML5 ValidityState message of given control\nhttps://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
              "attribute": "error"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            }
          ],
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control message validation",
              "fieldName": "status"
            },
            {
              "name": "error",
              "type": {
                "text": "ValidityStateKey"
              },
              "description": "Defines the HTML5 ValidityState message of given control\nhttps://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
              "fieldName": "error"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-control-message",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsControlMessage",
          "declaration": {
            "name": "CdsControlMessage",
            "module": "forms/control-message/control-message.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "forms/control/control.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Generic Control\n\n```typescript\nimport '@cds/core/forms/register.js';\n```\n\n```html\n<cds-control>\n  <label>control</label>\n  <input type=\"text\" />\n</cds-control>\n```",
          "name": "CdsControl",
          "cssProperties": [
            {
              "name": "--label-width"
            }
          ],
          "slots": [
            {
              "description": "For projecting input and label",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status"
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth"
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate"
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive"
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout"
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout"
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status"
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth"
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate"
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive"
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-control",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsControl",
          "declaration": {
            "name": "CdsControl",
            "module": "forms/control/control.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "forms/form-group/form-group.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Form\n\n```typescript\nimport '@cds/core/forms/register.js';\n```\n\n```html\n<cds-form-group layout=\"horizontal\">\n  <cds-input>\n    <label>Test</label>\n    <input type=\"text\" />\n  </cds-input>\n\n  <cds-input>\n    <label>Test</label>\n    <input type=\"text\" />\n  </cds-input>\n</cds-form-group>\n```",
          "name": "CdsFormGroup",
          "cssProperties": [
            {
              "name": "--label-width"
            }
          ],
          "slots": [
            {
              "description": "For projecting input controls",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "horizontal | horizontal"
              },
              "default": "defaultFormLayout",
              "description": "-inline | vertical | vertical-inline | compact}",
              "attribute": "layout"
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth"
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive"
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate"
            },
            {
              "kind": "field",
              "name": "controls",
              "type": {
                "text": "NodeListOf<CdsControl | CdsInternalControlInline>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "groups",
              "type": {
                "text": "NodeListOf<CdsInternalControlGroup>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "controlsAndGroups",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "overflowElement",
              "type": {
                "text": "CdsControl | null"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setControlLabelWidths",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "syncLayouts",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "collapseForm",
              "privacy": "private",
              "parameters": [
                {
                  "name": "control",
                  "type": {
                    "text": "CdsControl"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "expandForm",
              "privacy": "private",
              "parameters": [
                {
                  "name": "layout",
                  "type": {
                    "text": "FormLayout"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "layout",
              "type": {
                "text": "horizontal | horizontal"
              },
              "default": "defaultFormLayout",
              "description": "-inline | vertical | vertical-inline | compact}",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "layout"
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "description": "Adjust the control from the default full width or the browser default width",
              "fieldName": "controlWidth"
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive"
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-form-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsFormGroup",
          "declaration": {
            "name": "CdsFormGroup",
            "module": "forms/form-group/form-group.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "forms/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./control-message/control-message.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./control-action/control-action.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./control-group/control-group.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./control/control.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./form-group/form-group.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/interfaces.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./control-inline/control-inline.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./control-label/control-label.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "forms/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "forms/utils/index.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "formLayouts",
          "type": {
            "text": "FormLayout[]"
          },
          "default": "['vertical', 'vertical-inline', 'horizontal', 'horizontal-inline', 'compact']"
        },
        {
          "kind": "variable",
          "name": "defaultFormLayout",
          "type": {
            "text": "string"
          },
          "default": "'horizontal'"
        },
        {
          "kind": "variable",
          "name": "defaultControlWidth",
          "type": {
            "text": "string"
          },
          "default": "'stretch'"
        },
        {
          "kind": "function",
          "name": "associateInputAndLabel",
          "parameters": [
            {
              "name": "input",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "associateInputToDatalist",
          "parameters": [
            {
              "name": "input",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "name": "datalist",
              "type": {
                "text": "HTMLDataListElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "assignInputId",
          "parameters": [
            {
              "name": "input",
              "type": {
                "text": "HTMLInputElement"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "layoutGroupToControlMapper",
          "type": {
            "text": "{ [key: string]: ControlLayout }"
          },
          "default": "{\n  'horizontal-inline': 'horizontal',\n  'vertical-inline': 'vertical',\n  horizontal: 'horizontal',\n  vertical: 'vertical',\n  compact: 'compact',\n}"
        },
        {
          "kind": "function",
          "name": "getStatusIcon",
          "parameters": [
            {
              "name": "status",
              "type": {
                "text": "'error' | 'success' | 'neutral'"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getLargestPrimaryLabelWidth",
          "parameters": [
            {
              "name": "controls",
              "type": {
                "text": "(CdsControl | CdsInternalControlGroup)[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "controlIsWrapped",
          "parameters": [
            {
              "name": "input",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "FormLayout"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "inlineControlListIsWrapped",
          "parameters": [
            {
              "name": "inlineControls",
              "type": {
                "text": "CdsControl[]"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "FormLayout"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isVerticalLayout",
          "parameters": [
            {
              "name": "layout",
              "type": {
                "text": "FormLayout"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getCurrentMessageStatus",
          "parameters": [
            {
              "name": "messages",
              "type": {
                "text": "CdsControlMessage[]"
              }
            }
          ],
          "description": "Returns updated message status unless hidden then returns 'neutral'"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "formLayouts",
          "declaration": {
            "name": "formLayouts",
            "module": "forms/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "defaultFormLayout",
          "declaration": {
            "name": "defaultFormLayout",
            "module": "forms/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "defaultControlWidth",
          "declaration": {
            "name": "defaultControlWidth",
            "module": "forms/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "associateInputAndLabel",
          "declaration": {
            "name": "associateInputAndLabel",
            "module": "forms/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "associateInputToDatalist",
          "declaration": {
            "name": "associateInputToDatalist",
            "module": "forms/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "assignInputId",
          "declaration": {
            "name": "assignInputId",
            "module": "forms/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "layoutGroupToControlMapper",
          "declaration": {
            "name": "layoutGroupToControlMapper",
            "module": "forms/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "getStatusIcon",
          "declaration": {
            "name": "getStatusIcon",
            "module": "forms/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "getLargestPrimaryLabelWidth",
          "declaration": {
            "name": "getLargestPrimaryLabelWidth",
            "module": "forms/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "controlIsWrapped",
          "declaration": {
            "name": "controlIsWrapped",
            "module": "forms/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "inlineControlListIsWrapped",
          "declaration": {
            "name": "inlineControlListIsWrapped",
            "module": "forms/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "isVerticalLayout",
          "declaration": {
            "name": "isVerticalLayout",
            "module": "forms/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "getCurrentMessageStatus",
          "declaration": {
            "name": "getCurrentMessageStatus",
            "module": "forms/utils/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "forms/utils/interfaces.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "forms/utils/validate.js",
      "declarations": [
        {
          "kind": "function",
          "name": "syncHTML5Validation",
          "parameters": [
            {
              "name": "control",
              "type": {
                "text": "CdsControl"
              }
            },
            {
              "name": "messages",
              "type": {
                "text": "CdsControlMessage[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "syncHTML5Validation",
          "declaration": {
            "name": "syncHTML5Validation",
            "module": "forms/utils/validate.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/collections/chart.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "chartCollectionIcons",
          "type": {
            "text": "IconShapeTuple[]"
          },
          "default": "[\n  axisChartIcon,\n  barChartIcon,\n  bellCurveIcon,\n  boxPlotIcon,\n  bubbleChartIcon,\n  cloudChartIcon,\n  curveChartIcon,\n  gridChartIcon,\n  heatMapIcon,\n  lineChartIcon,\n  pieChartIcon,\n  scatterPlotIcon,\n  tickChartIcon,\n]"
        },
        {
          "kind": "variable",
          "name": "chartCollectionAliases",
          "type": {
            "text": "IconAlias[]"
          },
          "default": "[[lineChartIconName, ['analytics']]]"
        },
        {
          "kind": "function",
          "name": "loadChartIconSet",
          "description": "Function that can be called to load the core icon set.\n\n```typescript\nimport '@cds/core/icon/register.js';\nimport { loadChartIconSet } from '@cds/core/icon';\n\nloadChartIconSet();\n```"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "chartCollectionIcons",
          "declaration": {
            "name": "chartCollectionIcons",
            "module": "icon/collections/chart.js"
          }
        },
        {
          "kind": "js",
          "name": "chartCollectionAliases",
          "declaration": {
            "name": "chartCollectionAliases",
            "module": "icon/collections/chart.js"
          }
        },
        {
          "kind": "js",
          "name": "loadChartIconSet",
          "declaration": {
            "name": "loadChartIconSet",
            "module": "icon/collections/chart.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/collections/commerce.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "commerceCollectionIcons",
          "type": {
            "text": "IconShapeTuple[]"
          },
          "default": "[\n  bankIcon,\n  bitcoinIcon,\n  calculatorIcon,\n  creditCardIcon,\n  coinBagIcon,\n  dollarIcon,\n  dollarBillIcon,\n  eCheckIcon,\n  employeeGroupIcon,\n  employeeIcon,\n  euroIcon,\n  factoryIcon,\n  pesoIcon,\n  piggyBankIcon,\n  poundIcon,\n  rubleIcon,\n  rupeeIcon,\n  shoppingBagIcon,\n  shoppingCartIcon,\n  storeIcon,\n  walletIcon,\n  wonIcon,\n  yenIcon,\n]"
        },
        {
          "kind": "variable",
          "name": "commerceCollectionAliases",
          "type": {
            "text": "IconAlias[]"
          },
          "default": "[[piggyBankIconName, ['savings']]]"
        },
        {
          "kind": "function",
          "name": "loadCommerceIconSet",
          "description": "Function that can be called to load the core icon set.\n\n```typescript\nimport '@cds/core/icon/register.js';\nimport { loadCommerceIconSet } from '@cds/core/icon';\n\nloadCommerceIconSet();\n```"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "commerceCollectionIcons",
          "declaration": {
            "name": "commerceCollectionIcons",
            "module": "icon/collections/commerce.js"
          }
        },
        {
          "kind": "js",
          "name": "commerceCollectionAliases",
          "declaration": {
            "name": "commerceCollectionAliases",
            "module": "icon/collections/commerce.js"
          }
        },
        {
          "kind": "js",
          "name": "loadCommerceIconSet",
          "declaration": {
            "name": "loadCommerceIconSet",
            "module": "icon/collections/commerce.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/collections/core.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "coreCollectionIcons",
          "type": {
            "text": "IconShapeTuple[]"
          },
          "default": "[\n  angleIcon,\n  angleDoubleIcon,\n  arrowIcon,\n  barsIcon,\n  bellIcon,\n  calendarIcon,\n  checkIcon,\n  checkCircleIcon,\n  cloudIcon,\n  cogIcon,\n  ellipsisHorizontalIcon,\n  ellipsisVerticalIcon,\n  errorStandardIcon,\n  eventIcon,\n  exclamationCircleIcon,\n  exclamationTriangleIcon,\n  eyeIcon,\n  eyeHideIcon,\n  filterGridIcon,\n  filterGridCircleIcon,\n  folderIcon,\n  folderOpenIcon,\n  helpInfoIcon,\n  homeIcon,\n  imageIcon,\n  infoCircleIcon,\n  infoStandardIcon,\n  searchIcon,\n  stepForward2Icon,\n  successStandardIcon,\n  timesIcon,\n  unknownStatusIcon,\n  userIcon,\n  viewColumnsIcon,\n  vmBugIcon,\n  vmBugInverseIcon,\n  warningStandardIcon,\n]"
        },
        {
          "kind": "variable",
          "name": "coreCollectionAliases",
          "type": {
            "text": "IconAlias[]"
          },
          "default": "[\n  [homeIconName, ['house']],\n  [cogIconName, ['settings']],\n  [checkIconName, ['success']],\n  [timesIconName, ['close']],\n  [exclamationTriangleIconName, ['warning']],\n  [exclamationCircleIconName, ['error']],\n  [infoCircleIconName, ['info']],\n  [barsIconName, ['menu']],\n  [userIconName, ['avatar']],\n  [angleIconName, ['caret']],\n  [folderIconName, ['directory']],\n  [bellIconName, ['notification']],\n  [angleDoubleIconName, ['collapse']],\n]"
        },
        {
          "kind": "function",
          "name": "loadCoreIconSet",
          "description": "Function that can be called to load the core icon set.\n\n```typescript\nimport '@cds/core/icon/register.js';\nimport { loadCoreIconSet } from '@cds/core/icon';\n\nloadCoreIconSet();\n```"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "coreCollectionIcons",
          "declaration": {
            "name": "coreCollectionIcons",
            "module": "icon/collections/core.js"
          }
        },
        {
          "kind": "js",
          "name": "coreCollectionAliases",
          "declaration": {
            "name": "coreCollectionAliases",
            "module": "icon/collections/core.js"
          }
        },
        {
          "kind": "js",
          "name": "loadCoreIconSet",
          "declaration": {
            "name": "loadCoreIconSet",
            "module": "icon/collections/core.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/collections/essential.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "essentialCollectionIcons",
          "type": {
            "text": "IconShapeTuple[]"
          },
          "default": "[\n  accessibility1Icon,\n  accessibility2Icon,\n  addTextIcon,\n  alarmClockIcon,\n  alarmOffIcon,\n  announcementIcon,\n  asteriskIcon,\n  banIcon,\n  betaIcon,\n  birthdayCakeIcon,\n  boltIcon,\n  bookIcon,\n  briefcaseIcon,\n  bubbleExclamationIcon,\n  bugIcon,\n  bullseyeIcon,\n  childArrowIcon,\n  circleIcon,\n  circleArrowIcon,\n  clipboardIcon,\n  clockIcon,\n  cloneIcon,\n  collapseCardIcon,\n  colorPaletteIcon,\n  colorPickerIcon,\n  copyIcon,\n  copyToClipboardIcon,\n  crosshairsIcon,\n  cursorArrowIcon,\n  cursorHandIcon,\n  cursorHandClickIcon,\n  cursorHandGrabIcon,\n  cursorHandOpenIcon,\n  cursorMoveIcon,\n  detailsIcon,\n  dotCircleIcon,\n  downloadIcon,\n  dragHandleIcon,\n  dragHandleCornerIcon,\n  eraserIcon,\n  expandCardIcon,\n  fileGroupIcon,\n  fileIcon,\n  fileSettingsIcon,\n  fileZipIcon,\n  filterIcon,\n  filter2Icon,\n  filterOffIcon,\n  firewallIcon,\n  firstAidIcon,\n  fishIcon,\n  flameIcon,\n  formIcon,\n  fuelIcon,\n  gavelIcon,\n  gridViewIcon,\n  helpIcon,\n  historyIcon,\n  hourglassIcon,\n  idBadgeIcon,\n  keyIcon,\n  landscapeIcon,\n  libraryIcon,\n  lightbulbIcon,\n  listIcon,\n  lockIcon,\n  loginIcon,\n  logoutIcon,\n  minusIcon,\n  minusCircleIcon,\n  moonIcon,\n  newIcon,\n  noAccessIcon,\n  noteIcon,\n  objectsIcon,\n  organizationIcon,\n  paperclipIcon,\n  pasteIcon,\n  pencilIcon,\n  pinIcon,\n  pinboardIcon,\n  plusIcon,\n  plusCircleIcon,\n  popOutIcon,\n  portraitIcon,\n  printerIcon,\n  recycleIcon,\n  redoIcon,\n  refreshIcon,\n  repeatIcon,\n  resizeIcon,\n  scissorsIcon,\n  scrollIcon,\n  shrinkIcon,\n  sliderIcon,\n  snowflakeIcon,\n  sortByIcon,\n  sunIcon,\n  switchIcon,\n  syncIcon,\n  tableIcon,\n  tagIcon,\n  tagsIcon,\n  targetIcon,\n  thermometerIcon,\n  timesCircleIcon,\n  timelineIcon,\n  toolsIcon,\n  trashIcon,\n  treeIcon,\n  treeViewIcon,\n  twoWayArrowsIcon,\n  undoIcon,\n  unlockIcon,\n  uploadIcon,\n  usersIcon,\n  viewCardsIcon,\n  viewListIcon,\n  volumeIcon,\n  wandIcon,\n  windowCloseIcon,\n  windowMaxIcon,\n  windowMinIcon,\n  windowRestoreIcon,\n  worldIcon,\n  wrenchIcon,\n  zoomInIcon,\n  zoomOutIcon,\n]"
        },
        {
          "kind": "variable",
          "name": "essentialCollectionAliases",
          "type": {
            "text": "IconAlias[]"
          },
          "default": "[\n  [pencilIconName, ['edit']],\n  [noteIconName, ['note-edit']],\n  [usersIconName, ['group']],\n  [fileIconName, ['document']],\n  [plusIconName, ['add']],\n  [banIconName, ['cancel']],\n  [timesCircleIconName, ['remove']],\n  [loginIconName, ['sign-in']],\n  [logoutIconName, ['sign-out']],\n  [boltIconName, ['lightning']],\n  [organizationIconName, ['flow-chart']],\n  [bubbleExclamationIconName, ['alert']],\n  [pinboardIconName, ['pinned']],\n  [paperclipIconName, ['attachment']],\n  [shrinkIconName, ['resize-down']],\n  [resizeIconName, ['resize-up']],\n]"
        },
        {
          "kind": "function",
          "name": "loadEssentialIconSet",
          "description": "Function that can be called to load the core icon set.\n\n```typescript\nimport '@cds/core/icon/register.js';\nimport { loadEssentialIconSet } from '@cds/core/icon';\n\nloadEssentialIconSet();\n```"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "essentialCollectionIcons",
          "declaration": {
            "name": "essentialCollectionIcons",
            "module": "icon/collections/essential.js"
          }
        },
        {
          "kind": "js",
          "name": "essentialCollectionAliases",
          "declaration": {
            "name": "essentialCollectionAliases",
            "module": "icon/collections/essential.js"
          }
        },
        {
          "kind": "js",
          "name": "loadEssentialIconSet",
          "declaration": {
            "name": "loadEssentialIconSet",
            "module": "icon/collections/essential.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/collections/media.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "mediaCollectionIcons",
          "type": {
            "text": "IconShapeTuple[]"
          },
          "default": "[\n  cameraIcon,\n  fastForwardIcon,\n  filmStripIcon,\n  headphonesIcon,\n  imageGalleryIcon,\n  microphoneIcon,\n  microphoneMuteIcon,\n  musicNoteIcon,\n  pauseIcon,\n  playIcon,\n  powerIcon,\n  replayAllIcon,\n  replayOneIcon,\n  rewindIcon,\n  shuffleIcon,\n  stepForwardIcon,\n  stopIcon,\n  videoCameraIcon,\n  videoGalleryIcon,\n  volumeDownIcon,\n  volumeMuteIcon,\n  volumeUpIcon,\n]"
        },
        {
          "kind": "variable",
          "name": "mediaCollectionAliases",
          "type": {
            "text": "IconAlias[]"
          },
          "default": "[]"
        },
        {
          "kind": "function",
          "name": "loadMediaIconSet",
          "description": "Function that can be called to load the core icon set.\n\n```typescript\nimport '@cds/core/icon/register.js';\nimport { loadMediaIconSet } from '@cds/core/icon';\n\nloadMediaIconSet();\n```"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "mediaCollectionIcons",
          "declaration": {
            "name": "mediaCollectionIcons",
            "module": "icon/collections/media.js"
          }
        },
        {
          "kind": "js",
          "name": "mediaCollectionAliases",
          "declaration": {
            "name": "mediaCollectionAliases",
            "module": "icon/collections/media.js"
          }
        },
        {
          "kind": "js",
          "name": "loadMediaIconSet",
          "declaration": {
            "name": "loadMediaIconSet",
            "module": "icon/collections/media.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/collections/mini.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "miniCollectionIcons",
          "type": {
            "text": "IconShapeTuple[]"
          },
          "default": "[\n  arrowMiniIcon,\n  calendarMiniIcon,\n  checkCircleMiniIcon,\n  checkMiniIcon,\n  errorMiniIcon,\n  eventMiniIcon,\n  filterGridMiniIcon,\n  filterGridCircleMiniIcon,\n  infoCircleMiniIcon,\n  timesMiniIcon,\n  warningMiniIcon,\n]"
        },
        {
          "kind": "variable",
          "name": "miniCollectionAliases",
          "type": {
            "text": "IconAlias[]"
          },
          "default": "[\n  [timesMiniIconName, ['close-mini']],\n  [infoCircleMiniIconName, ['info-mini']],\n]"
        },
        {
          "kind": "function",
          "name": "loadMiniIconSet",
          "description": "Function that can be called to load the mini icon set.\n\n```typescript\nimport '@cds/core/icon/register.js';\nimport { loadMiniIconSet } from '@cds/core/icon';\n\nloadMiniIconSet();\n```"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "miniCollectionIcons",
          "declaration": {
            "name": "miniCollectionIcons",
            "module": "icon/collections/mini.js"
          }
        },
        {
          "kind": "js",
          "name": "miniCollectionAliases",
          "declaration": {
            "name": "miniCollectionAliases",
            "module": "icon/collections/mini.js"
          }
        },
        {
          "kind": "js",
          "name": "loadMiniIconSet",
          "declaration": {
            "name": "loadMiniIconSet",
            "module": "icon/collections/mini.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/collections/social.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "socialCollectionIcons",
          "type": {
            "text": "IconShapeTuple[]"
          },
          "default": "[\n  bookmarkIcon,\n  calendarIcon,\n  chatBubbleIcon,\n  contractIcon,\n  crownIcon,\n  envelopeIcon,\n  eventIcon,\n  flagIcon,\n  halfStarIcon,\n  happyFaceIcon,\n  hashtagIcon,\n  heartIcon,\n  heartBrokenIcon,\n  inboxIcon,\n  neutralFaceIcon,\n  pictureIcon,\n  sadFaceIcon,\n  shareIcon,\n  starIcon,\n  talkBubblesIcon,\n  tasksIcon,\n  thumbsDownIcon,\n  thumbsUpIcon,\n]"
        },
        {
          "kind": "variable",
          "name": "socialCollectionAliases",
          "type": {
            "text": "IconAlias[]"
          },
          "default": "[\n  [starIconName, ['favorite']],\n  [envelopeIconName, ['email']],\n  [calendarIconName, ['date']],\n]"
        },
        {
          "kind": "function",
          "name": "loadSocialIconSet",
          "description": "Function that can be called to load the core icon set.\n\n```typescript\nimport '@cds/core/icon/register.js';\nimport { loadSocialIconSet } from '@cds/core/icon';\n\nloadSocialIconSet();\n```"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "socialCollectionIcons",
          "declaration": {
            "name": "socialCollectionIcons",
            "module": "icon/collections/social.js"
          }
        },
        {
          "kind": "js",
          "name": "socialCollectionAliases",
          "declaration": {
            "name": "socialCollectionAliases",
            "module": "icon/collections/social.js"
          }
        },
        {
          "kind": "js",
          "name": "loadSocialIconSet",
          "declaration": {
            "name": "loadSocialIconSet",
            "module": "icon/collections/social.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/collections/technology.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "technologyCollectionIcons",
          "type": {
            "text": "IconShapeTuple[]"
          },
          "default": "[\n  administratorIcon,\n  animationIcon,\n  applicationIcon,\n  applicationsIcon,\n  archiveIcon,\n  assignUserIcon,\n  atomIcon,\n  backupIcon,\n  backupRestoreIcon,\n  barCodeIcon,\n  batteryIcon,\n  blockIcon,\n  blocksGroupIcon,\n  bluetoothIcon,\n  bluetoothOffIcon,\n  buildingIcon,\n  bundleIcon,\n  capacitorIcon,\n  cdDvdIcon,\n  certificateIcon,\n  ciCdIcon,\n  cloudNetworkIcon,\n  cloudScaleIcon,\n  cloudTrafficIcon,\n  clusterIcon,\n  codeIcon,\n  computerIcon,\n  connectIcon,\n  containerIcon,\n  containerVolumeIcon,\n  controlLunIcon,\n  cpuIcon,\n  dashboardIcon,\n  dataClusterIcon,\n  deployIcon,\n  devicesIcon,\n  digitalSignatureIcon,\n  disconnectIcon,\n  displayIcon,\n  downloadCloudIcon,\n  exportIcon,\n  fileShareIcon,\n  fileShare2Icon,\n  flaskIcon,\n  floppyIcon,\n  forkingIcon,\n  hardDriveIcon,\n  hardDriveDisksIcon,\n  hardDiskIcon,\n  helixIcon,\n  hostIcon,\n  hostGroupIcon,\n  importIcon,\n  inductorIcon,\n  installIcon,\n  internetOfThingsIcon,\n  keyboardIcon,\n  layersIcon,\n  linkIcon,\n  mediaChangerIcon,\n  memoryIcon,\n  mobileIcon,\n  mouseIcon,\n  namespaceIcon,\n  networkGlobeIcon,\n  networkSettingsIcon,\n  networkSwitchIcon,\n  nodeGroupIcon,\n  nodeIcon,\n  nodesIcon,\n  noWifiIcon,\n  nvmeIcon,\n  pdfFileIcon,\n  phoneHandsetIcon,\n  pluginIcon,\n  podIcon,\n  processOnVmIcon,\n  qrCodeIcon,\n  rackServerIcon,\n  radarIcon,\n  resistorIcon,\n  resourcePoolIcon,\n  routerIcon,\n  rulerPencilIcon,\n  scriptExecuteIcon,\n  scriptScheduleIcon,\n  shieldIcon,\n  shieldCheckIcon,\n  shieldXIcon,\n  squidIcon,\n  ssdIcon,\n  storageIcon,\n  storageAdapterIcon,\n  tabletIcon,\n  tapeDriveIcon,\n  terminalIcon,\n  thinClientIcon,\n  unarchiveIcon,\n  uninstallIcon,\n  unlinkIcon,\n  updateIcon,\n  uploadCloudIcon,\n  usbIcon,\n  vmIcon,\n  vmwAppIcon,\n  wifiIcon,\n  xlsFileIcon,\n]"
        },
        {
          "kind": "variable",
          "name": "technologyCollectionAliases",
          "type": {
            "text": "IconAlias[]"
          },
          "default": "[\n  [hostIconName, ['server']],\n  [terminalIconName, ['command']],\n  [mobileIconName, ['mobile-phone']],\n  [certificateIconName, ['license']],\n  [noWifiIconName, ['disconnected']],\n  [phoneHandsetIconName, ['receiver']],\n  [rulerPencilIconName, ['design']],\n  [helixIconName, ['dna']],\n  [fileShareIconName, ['folder-share']],\n]"
        },
        {
          "kind": "function",
          "name": "loadTechnologyIconSet",
          "description": "Function that can be called to load the core icon set.\n\n```typescript\nimport '@cds/core/icon/register.js';\nimport { loadTechnologyIconSet } from '@cds/core/icon';\n\nloadTechnologyIconSet();\n```"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "technologyCollectionIcons",
          "declaration": {
            "name": "technologyCollectionIcons",
            "module": "icon/collections/technology.js"
          }
        },
        {
          "kind": "js",
          "name": "technologyCollectionAliases",
          "declaration": {
            "name": "technologyCollectionAliases",
            "module": "icon/collections/technology.js"
          }
        },
        {
          "kind": "js",
          "name": "loadTechnologyIconSet",
          "declaration": {
            "name": "loadTechnologyIconSet",
            "module": "icon/collections/technology.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/collections/test.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "testCollection",
          "type": {
            "text": "array"
          },
          "default": "[\n  ['test', testIcon],\n  ['user', userIcon],\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "testCollection",
          "declaration": {
            "name": "testCollection",
            "module": "icon/collections/test.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/collections/text-edit.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "textEditCollectionIcons",
          "type": {
            "text": "IconShapeTuple[]"
          },
          "default": "[\n  alignBottomIcon,\n  alignCenterIcon,\n  alignLeftIcon,\n  alignLeftTextIcon,\n  alignMiddleIcon,\n  alignRightIcon,\n  alignRightTextIcon,\n  alignTopIcon,\n  blockQuoteIcon,\n  boldIcon,\n  bulletListIcon,\n  centerTextIcon,\n  checkboxListIcon,\n  fontSizeIcon,\n  highlighterIcon,\n  indentIcon,\n  italicIcon,\n  justifyTextIcon,\n  languageIcon,\n  numberListIcon,\n  outdentIcon,\n  paintRollerIcon,\n  strikethroughIcon,\n  subscriptIcon,\n  superscriptIcon,\n  textIcon,\n  textColorIcon,\n  underlineIcon,\n]"
        },
        {
          "kind": "variable",
          "name": "textEditCollectionAliases",
          "type": {
            "text": "IconAlias[]"
          },
          "default": "[]"
        },
        {
          "kind": "function",
          "name": "loadTextEditIconSet",
          "description": "Function that can be called to load the core icon set.\n\n```typescript\nimport '@cds/core/icon/register.js';\nimport { loadTextEditIconSet } from '@cds/core/icon';\n\nloadTextEditIconSet();\n```"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "textEditCollectionIcons",
          "declaration": {
            "name": "textEditCollectionIcons",
            "module": "icon/collections/text-edit.js"
          }
        },
        {
          "kind": "js",
          "name": "textEditCollectionAliases",
          "declaration": {
            "name": "textEditCollectionAliases",
            "module": "icon/collections/text-edit.js"
          }
        },
        {
          "kind": "js",
          "name": "loadTextEditIconSet",
          "declaration": {
            "name": "loadTextEditIconSet",
            "module": "icon/collections/text-edit.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/collections/travel.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "travelCollectionIcons",
          "type": {
            "text": "IconShapeTuple[]"
          },
          "default": "[\n  airplaneIcon,\n  bicycleIcon,\n  boatIcon,\n  carIcon,\n  campervanIcon,\n  caravanIcon,\n  compassIcon,\n  ferryIcon,\n  mapIcon,\n  mapMarkerIcon,\n  onHolidayIcon,\n  trailerIcon,\n  truckIcon,\n]"
        },
        {
          "kind": "variable",
          "name": "travelCollectionAliases",
          "type": {
            "text": "IconAlias[]"
          },
          "default": "[\n  [airplaneIconName, ['plane']],\n  [caravanIconName, ['auto']],\n]"
        },
        {
          "kind": "function",
          "name": "loadTravelIconSet",
          "description": "Function that can be called to load the core icon set.\n\n```typescript\nimport '@cds/core/icon/register.js';\nimport { loadTravelIconSet } from '@cds/core/icon';\n\nloadTravelIconSet();\n```"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "travelCollectionIcons",
          "declaration": {
            "name": "travelCollectionIcons",
            "module": "icon/collections/travel.js"
          }
        },
        {
          "kind": "js",
          "name": "travelCollectionAliases",
          "declaration": {
            "name": "travelCollectionAliases",
            "module": "icon/collections/travel.js"
          }
        },
        {
          "kind": "js",
          "name": "loadTravelIconSet",
          "declaration": {
            "name": "loadTravelIconSet",
            "module": "icon/collections/travel.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/icon.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Icon component that renders svg shapes that can be customized.\nTo load an icon, import the icon with the icon service.\n\n```typescript\nimport '@cds/core/icon/register.js';\nimport { ClarityIcons, userIcon } from '@cds/core/icon';\n\nClarityIcons.addIcons(userIcon);\n```\n\n```html\n<cds-icon shape=\"user\"></cds-icon>\n```",
          "name": "CdsIcon",
          "cssProperties": [
            {
              "name": "--color"
            },
            {
              "name": "--badge-color"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "_shape",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "'unknown'"
            },
            {
              "kind": "field",
              "name": "_size",
              "type": {
                "text": "string"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "shape",
              "description": "Changes the svg glyph displayed in the icon component. Defaults to the 'unknown' icon if\nthe specified icon cannot be found in the icon registry.",
              "attribute": "shape"
            },
            {
              "kind": "field",
              "name": "size",
              "description": "Apply numerical width-height or a t-shirt-sized CSS classname",
              "type": {
                "text": "string | xs | sm | md | lg | xl | xxl"
              },
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "direction",
              "type": {
                "text": "up | down | left | right"
              },
              "description": "Takes a directional value that rotates the icon 90° with the\ntop of the icon pointing in the specified direction.",
              "attribute": "direction"
            },
            {
              "kind": "field",
              "name": "flip",
              "type": {
                "text": "horizontal | vertical"
              },
              "description": "Takes an orientation value that reverses the orientation of the icon vertically or horizontally'",
              "attribute": "flip"
            },
            {
              "kind": "field",
              "name": "solid",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Displays most icons in their \"filled\" version if set to `true`.",
              "attribute": "solid"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "info | success | warning | danger"
              },
              "description": "Changes color of icon fills and outlines",
              "attribute": "status"
            },
            {
              "kind": "field",
              "name": "inverse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Inverts color of icon fills and outlines if `true`.\nUseful for displaying icons on a dark background.",
              "attribute": "inverse"
            },
            {
              "kind": "field",
              "name": "badge",
              "type": {
                "text": "info | success | warning | danger | inherit | warning"
              },
              "description": "-triangle | inherit-triangle}",
              "attribute": "badge"
            },
            {
              "kind": "field",
              "name": "innerOffset",
              "type": {
                "text": "number"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "svg",
              "type": {
                "text": "SVGElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "subscription",
              "type": {
                "text": "EventSubscription"
              },
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "description": "Changes the svg glyph displayed in the icon component. Defaults to the 'unknown' icon if\nthe specified icon cannot be found in the icon registry.",
              "fieldName": "shape"
            },
            {
              "name": "size",
              "description": "Apply numerical width-height or a t-shirt-sized CSS classname",
              "type": {
                "text": "string | xs | sm | md | lg | xl | xxl"
              },
              "fieldName": "size"
            },
            {
              "name": "direction",
              "type": {
                "text": "up | down | left | right"
              },
              "description": "Takes a directional value that rotates the icon 90° with the\ntop of the icon pointing in the specified direction.",
              "fieldName": "direction"
            },
            {
              "name": "flip",
              "type": {
                "text": "horizontal | vertical"
              },
              "description": "Takes an orientation value that reverses the orientation of the icon vertically or horizontally'",
              "fieldName": "flip"
            },
            {
              "name": "solid",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Displays most icons in their \"filled\" version if set to `true`.",
              "fieldName": "solid"
            },
            {
              "name": "status",
              "type": {
                "text": "info | success | warning | danger"
              },
              "description": "Changes color of icon fills and outlines",
              "fieldName": "status"
            },
            {
              "name": "inverse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Inverts color of icon fills and outlines if `true`.\nUseful for displaying icons on a dark background.",
              "fieldName": "inverse"
            },
            {
              "name": "badge",
              "type": {
                "text": "info | success | warning | danger | inherit | warning"
              },
              "description": "-triangle | inherit-triangle}",
              "fieldName": "badge"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-icon",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsIcon",
          "declaration": {
            "name": "CdsIcon",
            "module": "icon/icon.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/icon.renderer.js",
      "declarations": [
        {
          "kind": "function",
          "name": "renderIcon",
          "parameters": [
            {
              "name": "shapeOrStringIcon",
              "type": {
                "text": "IconShapeCollection | string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "renderIcon",
          "declaration": {
            "name": "renderIcon",
            "module": "icon/icon.renderer.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/icon.service.js",
      "declarations": [
        {
          "kind": "class",
          "description": "ClarityIcons is a static class that gives users the ability to interact with\nthe icon registry. This includes capabilities to add, retrieve, or alias icons\nin the registry.",
          "name": "ClarityIcons",
          "members": [
            {
              "kind": "field",
              "name": "registry",
              "type": {
                "text": "Readonly<IconRegistry>"
              },
              "static": true,
              "description": "Returns a readonly reference of the icon registry.",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "addIcons",
              "static": true,
              "parameters": [
                {
                  "name": "shapes",
                  "type": {
                    "text": "IconShapeTuple[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addAliases",
              "static": true,
              "parameters": [
                {
                  "name": "aliases",
                  "type": {
                    "text": "IconAlias[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getIconNameFromShape",
              "static": true,
              "parameters": [
                {
                  "name": "iconShape",
                  "type": {
                    "text": "IconShapeTuple"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClarityIcons",
          "declaration": {
            "name": "ClarityIcons",
            "module": "icon/icon.service.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./icon.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./icon.service.js"
          }
        },
        {
          "kind": "js",
          "name": "renderIcon",
          "declaration": {
            "name": "renderIcon",
            "module": "./icon.renderer.js"
          }
        },
        {
          "kind": "js",
          "name": "unknownIcon",
          "declaration": {
            "name": "unknownIcon",
            "module": "./shapes/unknown.js"
          }
        },
        {
          "kind": "js",
          "name": "unknownIconName",
          "declaration": {
            "name": "unknownIconName",
            "module": "./shapes/unknown.js"
          }
        },
        {
          "kind": "js",
          "name": "angleIcon",
          "declaration": {
            "name": "angleIcon",
            "module": "./shapes/angle.js"
          }
        },
        {
          "kind": "js",
          "name": "angleIconName",
          "declaration": {
            "name": "angleIconName",
            "module": "./shapes/angle.js"
          }
        },
        {
          "kind": "js",
          "name": "angleDoubleIcon",
          "declaration": {
            "name": "angleDoubleIcon",
            "module": "./shapes/angle-double.js"
          }
        },
        {
          "kind": "js",
          "name": "angleDoubleIconName",
          "declaration": {
            "name": "angleDoubleIconName",
            "module": "./shapes/angle-double.js"
          }
        },
        {
          "kind": "js",
          "name": "arrowIcon",
          "declaration": {
            "name": "arrowIcon",
            "module": "./shapes/arrow.js"
          }
        },
        {
          "kind": "js",
          "name": "arrowIconName",
          "declaration": {
            "name": "arrowIconName",
            "module": "./shapes/arrow.js"
          }
        },
        {
          "kind": "js",
          "name": "barsIcon",
          "declaration": {
            "name": "barsIcon",
            "module": "./shapes/bars.js"
          }
        },
        {
          "kind": "js",
          "name": "barsIconName",
          "declaration": {
            "name": "barsIconName",
            "module": "./shapes/bars.js"
          }
        },
        {
          "kind": "js",
          "name": "bellIcon",
          "declaration": {
            "name": "bellIcon",
            "module": "./shapes/bell.js"
          }
        },
        {
          "kind": "js",
          "name": "bellIconName",
          "declaration": {
            "name": "bellIconName",
            "module": "./shapes/bell.js"
          }
        },
        {
          "kind": "js",
          "name": "calendarIcon",
          "declaration": {
            "name": "calendarIcon",
            "module": "./shapes/calendar.js"
          }
        },
        {
          "kind": "js",
          "name": "calendarIconName",
          "declaration": {
            "name": "calendarIconName",
            "module": "./shapes/calendar.js"
          }
        },
        {
          "kind": "js",
          "name": "checkIcon",
          "declaration": {
            "name": "checkIcon",
            "module": "./shapes/check.js"
          }
        },
        {
          "kind": "js",
          "name": "checkIconName",
          "declaration": {
            "name": "checkIconName",
            "module": "./shapes/check.js"
          }
        },
        {
          "kind": "js",
          "name": "checkCircleIcon",
          "declaration": {
            "name": "checkCircleIcon",
            "module": "./shapes/check-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "checkCircleIconName",
          "declaration": {
            "name": "checkCircleIconName",
            "module": "./shapes/check-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "cloudIcon",
          "declaration": {
            "name": "cloudIcon",
            "module": "./shapes/cloud.js"
          }
        },
        {
          "kind": "js",
          "name": "cloudIconName",
          "declaration": {
            "name": "cloudIconName",
            "module": "./shapes/cloud.js"
          }
        },
        {
          "kind": "js",
          "name": "cogIcon",
          "declaration": {
            "name": "cogIcon",
            "module": "./shapes/cog.js"
          }
        },
        {
          "kind": "js",
          "name": "cogIconName",
          "declaration": {
            "name": "cogIconName",
            "module": "./shapes/cog.js"
          }
        },
        {
          "kind": "js",
          "name": "ellipsisHorizontalIcon",
          "declaration": {
            "name": "ellipsisHorizontalIcon",
            "module": "./shapes/ellipsis-horizontal.js"
          }
        },
        {
          "kind": "js",
          "name": "ellipsisHorizontalIconName",
          "declaration": {
            "name": "ellipsisHorizontalIconName",
            "module": "./shapes/ellipsis-horizontal.js"
          }
        },
        {
          "kind": "js",
          "name": "ellipsisVerticalIcon",
          "declaration": {
            "name": "ellipsisVerticalIcon",
            "module": "./shapes/ellipsis-vertical.js"
          }
        },
        {
          "kind": "js",
          "name": "ellipsisVerticalIconName",
          "declaration": {
            "name": "ellipsisVerticalIconName",
            "module": "./shapes/ellipsis-vertical.js"
          }
        },
        {
          "kind": "js",
          "name": "errorStandardIcon",
          "declaration": {
            "name": "errorStandardIcon",
            "module": "./shapes/error-standard.js"
          }
        },
        {
          "kind": "js",
          "name": "errorStandardIconName",
          "declaration": {
            "name": "errorStandardIconName",
            "module": "./shapes/error-standard.js"
          }
        },
        {
          "kind": "js",
          "name": "eventIcon",
          "declaration": {
            "name": "eventIcon",
            "module": "./shapes/event.js"
          }
        },
        {
          "kind": "js",
          "name": "eventIconName",
          "declaration": {
            "name": "eventIconName",
            "module": "./shapes/event.js"
          }
        },
        {
          "kind": "js",
          "name": "exclamationCircleIcon",
          "declaration": {
            "name": "exclamationCircleIcon",
            "module": "./shapes/exclamation-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "exclamationCircleIconName",
          "declaration": {
            "name": "exclamationCircleIconName",
            "module": "./shapes/exclamation-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "exclamationTriangleIcon",
          "declaration": {
            "name": "exclamationTriangleIcon",
            "module": "./shapes/exclamation-triangle.js"
          }
        },
        {
          "kind": "js",
          "name": "exclamationTriangleIconName",
          "declaration": {
            "name": "exclamationTriangleIconName",
            "module": "./shapes/exclamation-triangle.js"
          }
        },
        {
          "kind": "js",
          "name": "eyeIcon",
          "declaration": {
            "name": "eyeIcon",
            "module": "./shapes/eye.js"
          }
        },
        {
          "kind": "js",
          "name": "eyeIconName",
          "declaration": {
            "name": "eyeIconName",
            "module": "./shapes/eye.js"
          }
        },
        {
          "kind": "js",
          "name": "eyeHideIcon",
          "declaration": {
            "name": "eyeHideIcon",
            "module": "./shapes/eye-hide.js"
          }
        },
        {
          "kind": "js",
          "name": "eyeHideIconName",
          "declaration": {
            "name": "eyeHideIconName",
            "module": "./shapes/eye-hide.js"
          }
        },
        {
          "kind": "js",
          "name": "filterGridIcon",
          "declaration": {
            "name": "filterGridIcon",
            "module": "./shapes/filter-grid.js"
          }
        },
        {
          "kind": "js",
          "name": "filterGridIconName",
          "declaration": {
            "name": "filterGridIconName",
            "module": "./shapes/filter-grid.js"
          }
        },
        {
          "kind": "js",
          "name": "filterGridCircleIcon",
          "declaration": {
            "name": "filterGridCircleIcon",
            "module": "./shapes/filter-grid-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "filterGridCircleIconName",
          "declaration": {
            "name": "filterGridCircleIconName",
            "module": "./shapes/filter-grid-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "folderIcon",
          "declaration": {
            "name": "folderIcon",
            "module": "./shapes/folder.js"
          }
        },
        {
          "kind": "js",
          "name": "folderIconName",
          "declaration": {
            "name": "folderIconName",
            "module": "./shapes/folder.js"
          }
        },
        {
          "kind": "js",
          "name": "folderOpenIcon",
          "declaration": {
            "name": "folderOpenIcon",
            "module": "./shapes/folder-open.js"
          }
        },
        {
          "kind": "js",
          "name": "folderOpenIconName",
          "declaration": {
            "name": "folderOpenIconName",
            "module": "./shapes/folder-open.js"
          }
        },
        {
          "kind": "js",
          "name": "helpInfoIcon",
          "declaration": {
            "name": "helpInfoIcon",
            "module": "./shapes/help-info.js"
          }
        },
        {
          "kind": "js",
          "name": "helpInfoIconName",
          "declaration": {
            "name": "helpInfoIconName",
            "module": "./shapes/help-info.js"
          }
        },
        {
          "kind": "js",
          "name": "homeIcon",
          "declaration": {
            "name": "homeIcon",
            "module": "./shapes/home.js"
          }
        },
        {
          "kind": "js",
          "name": "homeIconName",
          "declaration": {
            "name": "homeIconName",
            "module": "./shapes/home.js"
          }
        },
        {
          "kind": "js",
          "name": "imageIcon",
          "declaration": {
            "name": "imageIcon",
            "module": "./shapes/image.js"
          }
        },
        {
          "kind": "js",
          "name": "imageIconName",
          "declaration": {
            "name": "imageIconName",
            "module": "./shapes/image.js"
          }
        },
        {
          "kind": "js",
          "name": "infoCircleIcon",
          "declaration": {
            "name": "infoCircleIcon",
            "module": "./shapes/info-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "infoCircleIconName",
          "declaration": {
            "name": "infoCircleIconName",
            "module": "./shapes/info-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "infoStandardIcon",
          "declaration": {
            "name": "infoStandardIcon",
            "module": "./shapes/info-standard.js"
          }
        },
        {
          "kind": "js",
          "name": "infoStandardIconName",
          "declaration": {
            "name": "infoStandardIconName",
            "module": "./shapes/info-standard.js"
          }
        },
        {
          "kind": "js",
          "name": "searchIcon",
          "declaration": {
            "name": "searchIcon",
            "module": "./shapes/search.js"
          }
        },
        {
          "kind": "js",
          "name": "searchIconName",
          "declaration": {
            "name": "searchIconName",
            "module": "./shapes/search.js"
          }
        },
        {
          "kind": "js",
          "name": "stepForward2Icon",
          "declaration": {
            "name": "stepForward2Icon",
            "module": "./shapes/step-forward-2.js"
          }
        },
        {
          "kind": "js",
          "name": "stepForward2IconName",
          "declaration": {
            "name": "stepForward2IconName",
            "module": "./shapes/step-forward-2.js"
          }
        },
        {
          "kind": "js",
          "name": "successStandardIcon",
          "declaration": {
            "name": "successStandardIcon",
            "module": "./shapes/success-standard.js"
          }
        },
        {
          "kind": "js",
          "name": "successStandardIconName",
          "declaration": {
            "name": "successStandardIconName",
            "module": "./shapes/success-standard.js"
          }
        },
        {
          "kind": "js",
          "name": "timesIcon",
          "declaration": {
            "name": "timesIcon",
            "module": "./shapes/times.js"
          }
        },
        {
          "kind": "js",
          "name": "timesIconName",
          "declaration": {
            "name": "timesIconName",
            "module": "./shapes/times.js"
          }
        },
        {
          "kind": "js",
          "name": "unknownStatusIcon",
          "declaration": {
            "name": "unknownStatusIcon",
            "module": "./shapes/unknown-status.js"
          }
        },
        {
          "kind": "js",
          "name": "unknownStatusIconName",
          "declaration": {
            "name": "unknownStatusIconName",
            "module": "./shapes/unknown-status.js"
          }
        },
        {
          "kind": "js",
          "name": "userIcon",
          "declaration": {
            "name": "userIcon",
            "module": "./shapes/user.js"
          }
        },
        {
          "kind": "js",
          "name": "userIconName",
          "declaration": {
            "name": "userIconName",
            "module": "./shapes/user.js"
          }
        },
        {
          "kind": "js",
          "name": "viewColumnsIcon",
          "declaration": {
            "name": "viewColumnsIcon",
            "module": "./shapes/view-columns.js"
          }
        },
        {
          "kind": "js",
          "name": "viewColumnsIconName",
          "declaration": {
            "name": "viewColumnsIconName",
            "module": "./shapes/view-columns.js"
          }
        },
        {
          "kind": "js",
          "name": "vmBugIcon",
          "declaration": {
            "name": "vmBugIcon",
            "module": "./shapes/vm-bug.js"
          }
        },
        {
          "kind": "js",
          "name": "vmBugIconName",
          "declaration": {
            "name": "vmBugIconName",
            "module": "./shapes/vm-bug.js"
          }
        },
        {
          "kind": "js",
          "name": "vmBugInverseIcon",
          "declaration": {
            "name": "vmBugInverseIcon",
            "module": "./shapes/vm-bug-inverse.js"
          }
        },
        {
          "kind": "js",
          "name": "vmBugInverseIconName",
          "declaration": {
            "name": "vmBugInverseIconName",
            "module": "./shapes/vm-bug-inverse.js"
          }
        },
        {
          "kind": "js",
          "name": "warningStandardIcon",
          "declaration": {
            "name": "warningStandardIcon",
            "module": "./shapes/warning-standard.js"
          }
        },
        {
          "kind": "js",
          "name": "warningStandardIconName",
          "declaration": {
            "name": "warningStandardIconName",
            "module": "./shapes/warning-standard.js"
          }
        },
        {
          "kind": "js",
          "name": "accessibility1Icon",
          "declaration": {
            "name": "accessibility1Icon",
            "module": "./shapes/accessibility-1.js"
          }
        },
        {
          "kind": "js",
          "name": "accessibility1IconName",
          "declaration": {
            "name": "accessibility1IconName",
            "module": "./shapes/accessibility-1.js"
          }
        },
        {
          "kind": "js",
          "name": "accessibility2Icon",
          "declaration": {
            "name": "accessibility2Icon",
            "module": "./shapes/accessibility-2.js"
          }
        },
        {
          "kind": "js",
          "name": "accessibility2IconName",
          "declaration": {
            "name": "accessibility2IconName",
            "module": "./shapes/accessibility-2.js"
          }
        },
        {
          "kind": "js",
          "name": "announcementIcon",
          "declaration": {
            "name": "announcementIcon",
            "module": "./shapes/announcement.js"
          }
        },
        {
          "kind": "js",
          "name": "announcementIconName",
          "declaration": {
            "name": "announcementIconName",
            "module": "./shapes/announcement.js"
          }
        },
        {
          "kind": "js",
          "name": "addTextIcon",
          "declaration": {
            "name": "addTextIcon",
            "module": "./shapes/add-text.js"
          }
        },
        {
          "kind": "js",
          "name": "addTextIconName",
          "declaration": {
            "name": "addTextIconName",
            "module": "./shapes/add-text.js"
          }
        },
        {
          "kind": "js",
          "name": "alarmClockIcon",
          "declaration": {
            "name": "alarmClockIcon",
            "module": "./shapes/alarm-clock.js"
          }
        },
        {
          "kind": "js",
          "name": "alarmClockIconName",
          "declaration": {
            "name": "alarmClockIconName",
            "module": "./shapes/alarm-clock.js"
          }
        },
        {
          "kind": "js",
          "name": "alarmOffIcon",
          "declaration": {
            "name": "alarmOffIcon",
            "module": "./shapes/alarm-off.js"
          }
        },
        {
          "kind": "js",
          "name": "alarmOffIconName",
          "declaration": {
            "name": "alarmOffIconName",
            "module": "./shapes/alarm-off.js"
          }
        },
        {
          "kind": "js",
          "name": "asteriskIcon",
          "declaration": {
            "name": "asteriskIcon",
            "module": "./shapes/asterisk.js"
          }
        },
        {
          "kind": "js",
          "name": "asteriskIconName",
          "declaration": {
            "name": "asteriskIconName",
            "module": "./shapes/asterisk.js"
          }
        },
        {
          "kind": "js",
          "name": "banIcon",
          "declaration": {
            "name": "banIcon",
            "module": "./shapes/ban.js"
          }
        },
        {
          "kind": "js",
          "name": "banIconName",
          "declaration": {
            "name": "banIconName",
            "module": "./shapes/ban.js"
          }
        },
        {
          "kind": "js",
          "name": "betaIcon",
          "declaration": {
            "name": "betaIcon",
            "module": "./shapes/beta.js"
          }
        },
        {
          "kind": "js",
          "name": "betaIconName",
          "declaration": {
            "name": "betaIconName",
            "module": "./shapes/beta.js"
          }
        },
        {
          "kind": "js",
          "name": "boltIcon",
          "declaration": {
            "name": "boltIcon",
            "module": "./shapes/bolt.js"
          }
        },
        {
          "kind": "js",
          "name": "boltIconName",
          "declaration": {
            "name": "boltIconName",
            "module": "./shapes/bolt.js"
          }
        },
        {
          "kind": "js",
          "name": "bookIcon",
          "declaration": {
            "name": "bookIcon",
            "module": "./shapes/book.js"
          }
        },
        {
          "kind": "js",
          "name": "bookIconName",
          "declaration": {
            "name": "bookIconName",
            "module": "./shapes/book.js"
          }
        },
        {
          "kind": "js",
          "name": "briefcaseIcon",
          "declaration": {
            "name": "briefcaseIcon",
            "module": "./shapes/briefcase.js"
          }
        },
        {
          "kind": "js",
          "name": "briefcaseIconName",
          "declaration": {
            "name": "briefcaseIconName",
            "module": "./shapes/briefcase.js"
          }
        },
        {
          "kind": "js",
          "name": "bubbleExclamationIcon",
          "declaration": {
            "name": "bubbleExclamationIcon",
            "module": "./shapes/bubble-exclamation.js"
          }
        },
        {
          "kind": "js",
          "name": "bubbleExclamationIconName",
          "declaration": {
            "name": "bubbleExclamationIconName",
            "module": "./shapes/bubble-exclamation.js"
          }
        },
        {
          "kind": "js",
          "name": "bugIcon",
          "declaration": {
            "name": "bugIcon",
            "module": "./shapes/bug.js"
          }
        },
        {
          "kind": "js",
          "name": "bugIconName",
          "declaration": {
            "name": "bugIconName",
            "module": "./shapes/bug.js"
          }
        },
        {
          "kind": "js",
          "name": "bullseyeIcon",
          "declaration": {
            "name": "bullseyeIcon",
            "module": "./shapes/bullseye.js"
          }
        },
        {
          "kind": "js",
          "name": "bullseyeIconName",
          "declaration": {
            "name": "bullseyeIconName",
            "module": "./shapes/bullseye.js"
          }
        },
        {
          "kind": "js",
          "name": "childArrowIcon",
          "declaration": {
            "name": "childArrowIcon",
            "module": "./shapes/child-arrow.js"
          }
        },
        {
          "kind": "js",
          "name": "childArrowIconName",
          "declaration": {
            "name": "childArrowIconName",
            "module": "./shapes/child-arrow.js"
          }
        },
        {
          "kind": "js",
          "name": "circleIcon",
          "declaration": {
            "name": "circleIcon",
            "module": "./shapes/circle.js"
          }
        },
        {
          "kind": "js",
          "name": "circleIconName",
          "declaration": {
            "name": "circleIconName",
            "module": "./shapes/circle.js"
          }
        },
        {
          "kind": "js",
          "name": "circleArrowIcon",
          "declaration": {
            "name": "circleArrowIcon",
            "module": "./shapes/circle-arrow.js"
          }
        },
        {
          "kind": "js",
          "name": "circleArrowIconName",
          "declaration": {
            "name": "circleArrowIconName",
            "module": "./shapes/circle-arrow.js"
          }
        },
        {
          "kind": "js",
          "name": "clipboardIcon",
          "declaration": {
            "name": "clipboardIcon",
            "module": "./shapes/clipboard.js"
          }
        },
        {
          "kind": "js",
          "name": "clipboardIconName",
          "declaration": {
            "name": "clipboardIconName",
            "module": "./shapes/clipboard.js"
          }
        },
        {
          "kind": "js",
          "name": "clockIcon",
          "declaration": {
            "name": "clockIcon",
            "module": "./shapes/clock.js"
          }
        },
        {
          "kind": "js",
          "name": "clockIconName",
          "declaration": {
            "name": "clockIconName",
            "module": "./shapes/clock.js"
          }
        },
        {
          "kind": "js",
          "name": "cloneIcon",
          "declaration": {
            "name": "cloneIcon",
            "module": "./shapes/clone.js"
          }
        },
        {
          "kind": "js",
          "name": "cloneIconName",
          "declaration": {
            "name": "cloneIconName",
            "module": "./shapes/clone.js"
          }
        },
        {
          "kind": "js",
          "name": "collapseCardIcon",
          "declaration": {
            "name": "collapseCardIcon",
            "module": "./shapes/collapse-card.js"
          }
        },
        {
          "kind": "js",
          "name": "collapseCardIconName",
          "declaration": {
            "name": "collapseCardIconName",
            "module": "./shapes/collapse-card.js"
          }
        },
        {
          "kind": "js",
          "name": "colorPaletteIcon",
          "declaration": {
            "name": "colorPaletteIcon",
            "module": "./shapes/color-palette.js"
          }
        },
        {
          "kind": "js",
          "name": "colorPaletteIconName",
          "declaration": {
            "name": "colorPaletteIconName",
            "module": "./shapes/color-palette.js"
          }
        },
        {
          "kind": "js",
          "name": "colorPickerIcon",
          "declaration": {
            "name": "colorPickerIcon",
            "module": "./shapes/color-picker.js"
          }
        },
        {
          "kind": "js",
          "name": "colorPickerIconName",
          "declaration": {
            "name": "colorPickerIconName",
            "module": "./shapes/color-picker.js"
          }
        },
        {
          "kind": "js",
          "name": "copyIcon",
          "declaration": {
            "name": "copyIcon",
            "module": "./shapes/copy.js"
          }
        },
        {
          "kind": "js",
          "name": "copyIconName",
          "declaration": {
            "name": "copyIconName",
            "module": "./shapes/copy.js"
          }
        },
        {
          "kind": "js",
          "name": "copyToClipboardIcon",
          "declaration": {
            "name": "copyToClipboardIcon",
            "module": "./shapes/copy-to-clipboard.js"
          }
        },
        {
          "kind": "js",
          "name": "copyToClipboardIconName",
          "declaration": {
            "name": "copyToClipboardIconName",
            "module": "./shapes/copy-to-clipboard.js"
          }
        },
        {
          "kind": "js",
          "name": "crosshairsIcon",
          "declaration": {
            "name": "crosshairsIcon",
            "module": "./shapes/crosshairs.js"
          }
        },
        {
          "kind": "js",
          "name": "crosshairsIconName",
          "declaration": {
            "name": "crosshairsIconName",
            "module": "./shapes/crosshairs.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorArrowIcon",
          "declaration": {
            "name": "cursorArrowIcon",
            "module": "./shapes/cursor-arrow.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorArrowIconName",
          "declaration": {
            "name": "cursorArrowIconName",
            "module": "./shapes/cursor-arrow.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorHandIcon",
          "declaration": {
            "name": "cursorHandIcon",
            "module": "./shapes/cursor-hand.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorHandIconName",
          "declaration": {
            "name": "cursorHandIconName",
            "module": "./shapes/cursor-hand.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorHandClickIcon",
          "declaration": {
            "name": "cursorHandClickIcon",
            "module": "./shapes/cursor-hand-click.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorHandClickIconName",
          "declaration": {
            "name": "cursorHandClickIconName",
            "module": "./shapes/cursor-hand-click.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorHandGrabIcon",
          "declaration": {
            "name": "cursorHandGrabIcon",
            "module": "./shapes/cursor-hand-grab.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorHandGrabIconName",
          "declaration": {
            "name": "cursorHandGrabIconName",
            "module": "./shapes/cursor-hand-grab.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorHandOpenIcon",
          "declaration": {
            "name": "cursorHandOpenIcon",
            "module": "./shapes/cursor-hand-open.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorHandOpenIconName",
          "declaration": {
            "name": "cursorHandOpenIconName",
            "module": "./shapes/cursor-hand-open.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorMoveIcon",
          "declaration": {
            "name": "cursorMoveIcon",
            "module": "./shapes/cursor-move.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorMoveIconName",
          "declaration": {
            "name": "cursorMoveIconName",
            "module": "./shapes/cursor-move.js"
          }
        },
        {
          "kind": "js",
          "name": "detailsIcon",
          "declaration": {
            "name": "detailsIcon",
            "module": "./shapes/details.js"
          }
        },
        {
          "kind": "js",
          "name": "detailsIconName",
          "declaration": {
            "name": "detailsIconName",
            "module": "./shapes/details.js"
          }
        },
        {
          "kind": "js",
          "name": "dotCircleIcon",
          "declaration": {
            "name": "dotCircleIcon",
            "module": "./shapes/dot-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "dotCircleIconName",
          "declaration": {
            "name": "dotCircleIconName",
            "module": "./shapes/dot-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "downloadIcon",
          "declaration": {
            "name": "downloadIcon",
            "module": "./shapes/download.js"
          }
        },
        {
          "kind": "js",
          "name": "downloadIconName",
          "declaration": {
            "name": "downloadIconName",
            "module": "./shapes/download.js"
          }
        },
        {
          "kind": "js",
          "name": "dragHandleIcon",
          "declaration": {
            "name": "dragHandleIcon",
            "module": "./shapes/drag-handle.js"
          }
        },
        {
          "kind": "js",
          "name": "dragHandleIconName",
          "declaration": {
            "name": "dragHandleIconName",
            "module": "./shapes/drag-handle.js"
          }
        },
        {
          "kind": "js",
          "name": "dragHandleCornerIcon",
          "declaration": {
            "name": "dragHandleCornerIcon",
            "module": "./shapes/drag-handle-corner.js"
          }
        },
        {
          "kind": "js",
          "name": "dragHandleCornerIconName",
          "declaration": {
            "name": "dragHandleCornerIconName",
            "module": "./shapes/drag-handle-corner.js"
          }
        },
        {
          "kind": "js",
          "name": "eraserIcon",
          "declaration": {
            "name": "eraserIcon",
            "module": "./shapes/eraser.js"
          }
        },
        {
          "kind": "js",
          "name": "eraserIconName",
          "declaration": {
            "name": "eraserIconName",
            "module": "./shapes/eraser.js"
          }
        },
        {
          "kind": "js",
          "name": "expandCardIcon",
          "declaration": {
            "name": "expandCardIcon",
            "module": "./shapes/expand-card.js"
          }
        },
        {
          "kind": "js",
          "name": "expandCardIconName",
          "declaration": {
            "name": "expandCardIconName",
            "module": "./shapes/expand-card.js"
          }
        },
        {
          "kind": "js",
          "name": "fileIcon",
          "declaration": {
            "name": "fileIcon",
            "module": "./shapes/file.js"
          }
        },
        {
          "kind": "js",
          "name": "fileIconName",
          "declaration": {
            "name": "fileIconName",
            "module": "./shapes/file.js"
          }
        },
        {
          "kind": "js",
          "name": "fileGroupIcon",
          "declaration": {
            "name": "fileGroupIcon",
            "module": "./shapes/file-group.js"
          }
        },
        {
          "kind": "js",
          "name": "fileGroupIconName",
          "declaration": {
            "name": "fileGroupIconName",
            "module": "./shapes/file-group.js"
          }
        },
        {
          "kind": "js",
          "name": "fileSettingsIcon",
          "declaration": {
            "name": "fileSettingsIcon",
            "module": "./shapes/file-settings.js"
          }
        },
        {
          "kind": "js",
          "name": "fileSettingsIconName",
          "declaration": {
            "name": "fileSettingsIconName",
            "module": "./shapes/file-settings.js"
          }
        },
        {
          "kind": "js",
          "name": "fileZipIcon",
          "declaration": {
            "name": "fileZipIcon",
            "module": "./shapes/file-zip.js"
          }
        },
        {
          "kind": "js",
          "name": "fileZipIconName",
          "declaration": {
            "name": "fileZipIconName",
            "module": "./shapes/file-zip.js"
          }
        },
        {
          "kind": "js",
          "name": "filterIcon",
          "declaration": {
            "name": "filterIcon",
            "module": "./shapes/filter.js"
          }
        },
        {
          "kind": "js",
          "name": "filterIconName",
          "declaration": {
            "name": "filterIconName",
            "module": "./shapes/filter.js"
          }
        },
        {
          "kind": "js",
          "name": "filter2Icon",
          "declaration": {
            "name": "filter2Icon",
            "module": "./shapes/filter-2.js"
          }
        },
        {
          "kind": "js",
          "name": "filter2IconName",
          "declaration": {
            "name": "filter2IconName",
            "module": "./shapes/filter-2.js"
          }
        },
        {
          "kind": "js",
          "name": "filterOffIcon",
          "declaration": {
            "name": "filterOffIcon",
            "module": "./shapes/filter-off.js"
          }
        },
        {
          "kind": "js",
          "name": "filterOffIconName",
          "declaration": {
            "name": "filterOffIconName",
            "module": "./shapes/filter-off.js"
          }
        },
        {
          "kind": "js",
          "name": "firewallIcon",
          "declaration": {
            "name": "firewallIcon",
            "module": "./shapes/firewall.js"
          }
        },
        {
          "kind": "js",
          "name": "firewallIconName",
          "declaration": {
            "name": "firewallIconName",
            "module": "./shapes/firewall.js"
          }
        },
        {
          "kind": "js",
          "name": "firstAidIcon",
          "declaration": {
            "name": "firstAidIcon",
            "module": "./shapes/first-aid.js"
          }
        },
        {
          "kind": "js",
          "name": "firstAidIconName",
          "declaration": {
            "name": "firstAidIconName",
            "module": "./shapes/first-aid.js"
          }
        },
        {
          "kind": "js",
          "name": "fishIcon",
          "declaration": {
            "name": "fishIcon",
            "module": "./shapes/fish.js"
          }
        },
        {
          "kind": "js",
          "name": "fishIconName",
          "declaration": {
            "name": "fishIconName",
            "module": "./shapes/fish.js"
          }
        },
        {
          "kind": "js",
          "name": "flameIcon",
          "declaration": {
            "name": "flameIcon",
            "module": "./shapes/flame.js"
          }
        },
        {
          "kind": "js",
          "name": "flameIconName",
          "declaration": {
            "name": "flameIconName",
            "module": "./shapes/flame.js"
          }
        },
        {
          "kind": "js",
          "name": "formIcon",
          "declaration": {
            "name": "formIcon",
            "module": "./shapes/form.js"
          }
        },
        {
          "kind": "js",
          "name": "formIconName",
          "declaration": {
            "name": "formIconName",
            "module": "./shapes/form.js"
          }
        },
        {
          "kind": "js",
          "name": "fuelIcon",
          "declaration": {
            "name": "fuelIcon",
            "module": "./shapes/fuel.js"
          }
        },
        {
          "kind": "js",
          "name": "fuelIconName",
          "declaration": {
            "name": "fuelIconName",
            "module": "./shapes/fuel.js"
          }
        },
        {
          "kind": "js",
          "name": "gridViewIcon",
          "declaration": {
            "name": "gridViewIcon",
            "module": "./shapes/grid-view.js"
          }
        },
        {
          "kind": "js",
          "name": "gridViewIconName",
          "declaration": {
            "name": "gridViewIconName",
            "module": "./shapes/grid-view.js"
          }
        },
        {
          "kind": "js",
          "name": "helpIcon",
          "declaration": {
            "name": "helpIcon",
            "module": "./shapes/help.js"
          }
        },
        {
          "kind": "js",
          "name": "helpIconName",
          "declaration": {
            "name": "helpIconName",
            "module": "./shapes/help.js"
          }
        },
        {
          "kind": "js",
          "name": "historyIcon",
          "declaration": {
            "name": "historyIcon",
            "module": "./shapes/history.js"
          }
        },
        {
          "kind": "js",
          "name": "historyIconName",
          "declaration": {
            "name": "historyIconName",
            "module": "./shapes/history.js"
          }
        },
        {
          "kind": "js",
          "name": "hourglassIcon",
          "declaration": {
            "name": "hourglassIcon",
            "module": "./shapes/hourglass.js"
          }
        },
        {
          "kind": "js",
          "name": "hourglassIconName",
          "declaration": {
            "name": "hourglassIconName",
            "module": "./shapes/hourglass.js"
          }
        },
        {
          "kind": "js",
          "name": "idBadgeIcon",
          "declaration": {
            "name": "idBadgeIcon",
            "module": "./shapes/id-badge.js"
          }
        },
        {
          "kind": "js",
          "name": "idBadgeIconName",
          "declaration": {
            "name": "idBadgeIconName",
            "module": "./shapes/id-badge.js"
          }
        },
        {
          "kind": "js",
          "name": "keyIcon",
          "declaration": {
            "name": "keyIcon",
            "module": "./shapes/key.js"
          }
        },
        {
          "kind": "js",
          "name": "keyIconName",
          "declaration": {
            "name": "keyIconName",
            "module": "./shapes/key.js"
          }
        },
        {
          "kind": "js",
          "name": "landscapeIcon",
          "declaration": {
            "name": "landscapeIcon",
            "module": "./shapes/landscape.js"
          }
        },
        {
          "kind": "js",
          "name": "landscapeIconName",
          "declaration": {
            "name": "landscapeIconName",
            "module": "./shapes/landscape.js"
          }
        },
        {
          "kind": "js",
          "name": "libraryIcon",
          "declaration": {
            "name": "libraryIcon",
            "module": "./shapes/library.js"
          }
        },
        {
          "kind": "js",
          "name": "libraryIconName",
          "declaration": {
            "name": "libraryIconName",
            "module": "./shapes/library.js"
          }
        },
        {
          "kind": "js",
          "name": "lightbulbIcon",
          "declaration": {
            "name": "lightbulbIcon",
            "module": "./shapes/lightbulb.js"
          }
        },
        {
          "kind": "js",
          "name": "lightbulbIconName",
          "declaration": {
            "name": "lightbulbIconName",
            "module": "./shapes/lightbulb.js"
          }
        },
        {
          "kind": "js",
          "name": "listIcon",
          "declaration": {
            "name": "listIcon",
            "module": "./shapes/list.js"
          }
        },
        {
          "kind": "js",
          "name": "listIconName",
          "declaration": {
            "name": "listIconName",
            "module": "./shapes/list.js"
          }
        },
        {
          "kind": "js",
          "name": "lockIcon",
          "declaration": {
            "name": "lockIcon",
            "module": "./shapes/lock.js"
          }
        },
        {
          "kind": "js",
          "name": "lockIconName",
          "declaration": {
            "name": "lockIconName",
            "module": "./shapes/lock.js"
          }
        },
        {
          "kind": "js",
          "name": "loginIcon",
          "declaration": {
            "name": "loginIcon",
            "module": "./shapes/login.js"
          }
        },
        {
          "kind": "js",
          "name": "loginIconName",
          "declaration": {
            "name": "loginIconName",
            "module": "./shapes/login.js"
          }
        },
        {
          "kind": "js",
          "name": "logoutIcon",
          "declaration": {
            "name": "logoutIcon",
            "module": "./shapes/logout.js"
          }
        },
        {
          "kind": "js",
          "name": "logoutIconName",
          "declaration": {
            "name": "logoutIconName",
            "module": "./shapes/logout.js"
          }
        },
        {
          "kind": "js",
          "name": "minusIcon",
          "declaration": {
            "name": "minusIcon",
            "module": "./shapes/minus.js"
          }
        },
        {
          "kind": "js",
          "name": "minusIconName",
          "declaration": {
            "name": "minusIconName",
            "module": "./shapes/minus.js"
          }
        },
        {
          "kind": "js",
          "name": "minusCircleIcon",
          "declaration": {
            "name": "minusCircleIcon",
            "module": "./shapes/minus-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "minusCircleIconName",
          "declaration": {
            "name": "minusCircleIconName",
            "module": "./shapes/minus-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "moonIcon",
          "declaration": {
            "name": "moonIcon",
            "module": "./shapes/moon.js"
          }
        },
        {
          "kind": "js",
          "name": "moonIconName",
          "declaration": {
            "name": "moonIconName",
            "module": "./shapes/moon.js"
          }
        },
        {
          "kind": "js",
          "name": "newIcon",
          "declaration": {
            "name": "newIcon",
            "module": "./shapes/new.js"
          }
        },
        {
          "kind": "js",
          "name": "newIconName",
          "declaration": {
            "name": "newIconName",
            "module": "./shapes/new.js"
          }
        },
        {
          "kind": "js",
          "name": "noAccessIcon",
          "declaration": {
            "name": "noAccessIcon",
            "module": "./shapes/no-access.js"
          }
        },
        {
          "kind": "js",
          "name": "noAccessIconName",
          "declaration": {
            "name": "noAccessIconName",
            "module": "./shapes/no-access.js"
          }
        },
        {
          "kind": "js",
          "name": "noteIcon",
          "declaration": {
            "name": "noteIcon",
            "module": "./shapes/note.js"
          }
        },
        {
          "kind": "js",
          "name": "noteIconName",
          "declaration": {
            "name": "noteIconName",
            "module": "./shapes/note.js"
          }
        },
        {
          "kind": "js",
          "name": "objectsIcon",
          "declaration": {
            "name": "objectsIcon",
            "module": "./shapes/objects.js"
          }
        },
        {
          "kind": "js",
          "name": "objectsIconName",
          "declaration": {
            "name": "objectsIconName",
            "module": "./shapes/objects.js"
          }
        },
        {
          "kind": "js",
          "name": "organizationIcon",
          "declaration": {
            "name": "organizationIcon",
            "module": "./shapes/organization.js"
          }
        },
        {
          "kind": "js",
          "name": "organizationIconName",
          "declaration": {
            "name": "organizationIconName",
            "module": "./shapes/organization.js"
          }
        },
        {
          "kind": "js",
          "name": "paperclipIcon",
          "declaration": {
            "name": "paperclipIcon",
            "module": "./shapes/paperclip.js"
          }
        },
        {
          "kind": "js",
          "name": "paperclipIconName",
          "declaration": {
            "name": "paperclipIconName",
            "module": "./shapes/paperclip.js"
          }
        },
        {
          "kind": "js",
          "name": "pasteIcon",
          "declaration": {
            "name": "pasteIcon",
            "module": "./shapes/paste.js"
          }
        },
        {
          "kind": "js",
          "name": "pasteIconName",
          "declaration": {
            "name": "pasteIconName",
            "module": "./shapes/paste.js"
          }
        },
        {
          "kind": "js",
          "name": "pencilIcon",
          "declaration": {
            "name": "pencilIcon",
            "module": "./shapes/pencil.js"
          }
        },
        {
          "kind": "js",
          "name": "pencilIconName",
          "declaration": {
            "name": "pencilIconName",
            "module": "./shapes/pencil.js"
          }
        },
        {
          "kind": "js",
          "name": "pinIcon",
          "declaration": {
            "name": "pinIcon",
            "module": "./shapes/pin.js"
          }
        },
        {
          "kind": "js",
          "name": "pinIconName",
          "declaration": {
            "name": "pinIconName",
            "module": "./shapes/pin.js"
          }
        },
        {
          "kind": "js",
          "name": "pinboardIcon",
          "declaration": {
            "name": "pinboardIcon",
            "module": "./shapes/pinboard.js"
          }
        },
        {
          "kind": "js",
          "name": "pinboardIconName",
          "declaration": {
            "name": "pinboardIconName",
            "module": "./shapes/pinboard.js"
          }
        },
        {
          "kind": "js",
          "name": "plusIcon",
          "declaration": {
            "name": "plusIcon",
            "module": "./shapes/plus.js"
          }
        },
        {
          "kind": "js",
          "name": "plusIconName",
          "declaration": {
            "name": "plusIconName",
            "module": "./shapes/plus.js"
          }
        },
        {
          "kind": "js",
          "name": "plusCircleIcon",
          "declaration": {
            "name": "plusCircleIcon",
            "module": "./shapes/plus-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "plusCircleIconName",
          "declaration": {
            "name": "plusCircleIconName",
            "module": "./shapes/plus-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "popOutIcon",
          "declaration": {
            "name": "popOutIcon",
            "module": "./shapes/pop-out.js"
          }
        },
        {
          "kind": "js",
          "name": "popOutIconName",
          "declaration": {
            "name": "popOutIconName",
            "module": "./shapes/pop-out.js"
          }
        },
        {
          "kind": "js",
          "name": "portraitIcon",
          "declaration": {
            "name": "portraitIcon",
            "module": "./shapes/portrait.js"
          }
        },
        {
          "kind": "js",
          "name": "portraitIconName",
          "declaration": {
            "name": "portraitIconName",
            "module": "./shapes/portrait.js"
          }
        },
        {
          "kind": "js",
          "name": "printerIcon",
          "declaration": {
            "name": "printerIcon",
            "module": "./shapes/printer.js"
          }
        },
        {
          "kind": "js",
          "name": "printerIconName",
          "declaration": {
            "name": "printerIconName",
            "module": "./shapes/printer.js"
          }
        },
        {
          "kind": "js",
          "name": "recycleIcon",
          "declaration": {
            "name": "recycleIcon",
            "module": "./shapes/recycle.js"
          }
        },
        {
          "kind": "js",
          "name": "recycleIconName",
          "declaration": {
            "name": "recycleIconName",
            "module": "./shapes/recycle.js"
          }
        },
        {
          "kind": "js",
          "name": "redoIcon",
          "declaration": {
            "name": "redoIcon",
            "module": "./shapes/redo.js"
          }
        },
        {
          "kind": "js",
          "name": "redoIconName",
          "declaration": {
            "name": "redoIconName",
            "module": "./shapes/redo.js"
          }
        },
        {
          "kind": "js",
          "name": "refreshIcon",
          "declaration": {
            "name": "refreshIcon",
            "module": "./shapes/refresh.js"
          }
        },
        {
          "kind": "js",
          "name": "refreshIconName",
          "declaration": {
            "name": "refreshIconName",
            "module": "./shapes/refresh.js"
          }
        },
        {
          "kind": "js",
          "name": "repeatIcon",
          "declaration": {
            "name": "repeatIcon",
            "module": "./shapes/repeat.js"
          }
        },
        {
          "kind": "js",
          "name": "repeatIconName",
          "declaration": {
            "name": "repeatIconName",
            "module": "./shapes/repeat.js"
          }
        },
        {
          "kind": "js",
          "name": "resizeIcon",
          "declaration": {
            "name": "resizeIcon",
            "module": "./shapes/resize.js"
          }
        },
        {
          "kind": "js",
          "name": "resizeIconName",
          "declaration": {
            "name": "resizeIconName",
            "module": "./shapes/resize.js"
          }
        },
        {
          "kind": "js",
          "name": "scissorsIcon",
          "declaration": {
            "name": "scissorsIcon",
            "module": "./shapes/scissors.js"
          }
        },
        {
          "kind": "js",
          "name": "scissorsIconName",
          "declaration": {
            "name": "scissorsIconName",
            "module": "./shapes/scissors.js"
          }
        },
        {
          "kind": "js",
          "name": "scrollIcon",
          "declaration": {
            "name": "scrollIcon",
            "module": "./shapes/scroll.js"
          }
        },
        {
          "kind": "js",
          "name": "scrollIconName",
          "declaration": {
            "name": "scrollIconName",
            "module": "./shapes/scroll.js"
          }
        },
        {
          "kind": "js",
          "name": "shrinkIcon",
          "declaration": {
            "name": "shrinkIcon",
            "module": "./shapes/shrink.js"
          }
        },
        {
          "kind": "js",
          "name": "shrinkIconName",
          "declaration": {
            "name": "shrinkIconName",
            "module": "./shapes/shrink.js"
          }
        },
        {
          "kind": "js",
          "name": "sliderIcon",
          "declaration": {
            "name": "sliderIcon",
            "module": "./shapes/slider.js"
          }
        },
        {
          "kind": "js",
          "name": "sliderIconName",
          "declaration": {
            "name": "sliderIconName",
            "module": "./shapes/slider.js"
          }
        },
        {
          "kind": "js",
          "name": "snowflakeIcon",
          "declaration": {
            "name": "snowflakeIcon",
            "module": "./shapes/snowflake.js"
          }
        },
        {
          "kind": "js",
          "name": "snowflakeIconName",
          "declaration": {
            "name": "snowflakeIconName",
            "module": "./shapes/snowflake.js"
          }
        },
        {
          "kind": "js",
          "name": "sortByIcon",
          "declaration": {
            "name": "sortByIcon",
            "module": "./shapes/sort-by.js"
          }
        },
        {
          "kind": "js",
          "name": "sortByIconName",
          "declaration": {
            "name": "sortByIconName",
            "module": "./shapes/sort-by.js"
          }
        },
        {
          "kind": "js",
          "name": "sunIcon",
          "declaration": {
            "name": "sunIcon",
            "module": "./shapes/sun.js"
          }
        },
        {
          "kind": "js",
          "name": "sunIconName",
          "declaration": {
            "name": "sunIconName",
            "module": "./shapes/sun.js"
          }
        },
        {
          "kind": "js",
          "name": "switchIcon",
          "declaration": {
            "name": "switchIcon",
            "module": "./shapes/switch.js"
          }
        },
        {
          "kind": "js",
          "name": "switchIconName",
          "declaration": {
            "name": "switchIconName",
            "module": "./shapes/switch.js"
          }
        },
        {
          "kind": "js",
          "name": "syncIcon",
          "declaration": {
            "name": "syncIcon",
            "module": "./shapes/sync.js"
          }
        },
        {
          "kind": "js",
          "name": "syncIconName",
          "declaration": {
            "name": "syncIconName",
            "module": "./shapes/sync.js"
          }
        },
        {
          "kind": "js",
          "name": "tableIcon",
          "declaration": {
            "name": "tableIcon",
            "module": "./shapes/table.js"
          }
        },
        {
          "kind": "js",
          "name": "tableIconName",
          "declaration": {
            "name": "tableIconName",
            "module": "./shapes/table.js"
          }
        },
        {
          "kind": "js",
          "name": "tagIcon",
          "declaration": {
            "name": "tagIcon",
            "module": "./shapes/tag.js"
          }
        },
        {
          "kind": "js",
          "name": "tagIconName",
          "declaration": {
            "name": "tagIconName",
            "module": "./shapes/tag.js"
          }
        },
        {
          "kind": "js",
          "name": "tagsIcon",
          "declaration": {
            "name": "tagsIcon",
            "module": "./shapes/tags.js"
          }
        },
        {
          "kind": "js",
          "name": "tagsIconName",
          "declaration": {
            "name": "tagsIconName",
            "module": "./shapes/tags.js"
          }
        },
        {
          "kind": "js",
          "name": "targetIcon",
          "declaration": {
            "name": "targetIcon",
            "module": "./shapes/target.js"
          }
        },
        {
          "kind": "js",
          "name": "targetIconName",
          "declaration": {
            "name": "targetIconName",
            "module": "./shapes/target.js"
          }
        },
        {
          "kind": "js",
          "name": "thermometerIcon",
          "declaration": {
            "name": "thermometerIcon",
            "module": "./shapes/thermometer.js"
          }
        },
        {
          "kind": "js",
          "name": "thermometerIconName",
          "declaration": {
            "name": "thermometerIconName",
            "module": "./shapes/thermometer.js"
          }
        },
        {
          "kind": "js",
          "name": "timesCircleIcon",
          "declaration": {
            "name": "timesCircleIcon",
            "module": "./shapes/times-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "timesCircleIconName",
          "declaration": {
            "name": "timesCircleIconName",
            "module": "./shapes/times-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "toolsIcon",
          "declaration": {
            "name": "toolsIcon",
            "module": "./shapes/tools.js"
          }
        },
        {
          "kind": "js",
          "name": "toolsIconName",
          "declaration": {
            "name": "toolsIconName",
            "module": "./shapes/tools.js"
          }
        },
        {
          "kind": "js",
          "name": "trashIcon",
          "declaration": {
            "name": "trashIcon",
            "module": "./shapes/trash.js"
          }
        },
        {
          "kind": "js",
          "name": "trashIconName",
          "declaration": {
            "name": "trashIconName",
            "module": "./shapes/trash.js"
          }
        },
        {
          "kind": "js",
          "name": "treeIcon",
          "declaration": {
            "name": "treeIcon",
            "module": "./shapes/tree.js"
          }
        },
        {
          "kind": "js",
          "name": "treeIconName",
          "declaration": {
            "name": "treeIconName",
            "module": "./shapes/tree.js"
          }
        },
        {
          "kind": "js",
          "name": "treeViewIcon",
          "declaration": {
            "name": "treeViewIcon",
            "module": "./shapes/tree-view.js"
          }
        },
        {
          "kind": "js",
          "name": "treeViewIconName",
          "declaration": {
            "name": "treeViewIconName",
            "module": "./shapes/tree-view.js"
          }
        },
        {
          "kind": "js",
          "name": "twoWayArrowsIcon",
          "declaration": {
            "name": "twoWayArrowsIcon",
            "module": "./shapes/two-way-arrows.js"
          }
        },
        {
          "kind": "js",
          "name": "twoWayArrowsIconName",
          "declaration": {
            "name": "twoWayArrowsIconName",
            "module": "./shapes/two-way-arrows.js"
          }
        },
        {
          "kind": "js",
          "name": "undoIcon",
          "declaration": {
            "name": "undoIcon",
            "module": "./shapes/undo.js"
          }
        },
        {
          "kind": "js",
          "name": "undoIconName",
          "declaration": {
            "name": "undoIconName",
            "module": "./shapes/undo.js"
          }
        },
        {
          "kind": "js",
          "name": "unlockIcon",
          "declaration": {
            "name": "unlockIcon",
            "module": "./shapes/unlock.js"
          }
        },
        {
          "kind": "js",
          "name": "unlockIconName",
          "declaration": {
            "name": "unlockIconName",
            "module": "./shapes/unlock.js"
          }
        },
        {
          "kind": "js",
          "name": "uploadIcon",
          "declaration": {
            "name": "uploadIcon",
            "module": "./shapes/upload.js"
          }
        },
        {
          "kind": "js",
          "name": "uploadIconName",
          "declaration": {
            "name": "uploadIconName",
            "module": "./shapes/upload.js"
          }
        },
        {
          "kind": "js",
          "name": "usersIcon",
          "declaration": {
            "name": "usersIcon",
            "module": "./shapes/users.js"
          }
        },
        {
          "kind": "js",
          "name": "usersIconName",
          "declaration": {
            "name": "usersIconName",
            "module": "./shapes/users.js"
          }
        },
        {
          "kind": "js",
          "name": "viewCardsIcon",
          "declaration": {
            "name": "viewCardsIcon",
            "module": "./shapes/view-cards.js"
          }
        },
        {
          "kind": "js",
          "name": "viewCardsIconName",
          "declaration": {
            "name": "viewCardsIconName",
            "module": "./shapes/view-cards.js"
          }
        },
        {
          "kind": "js",
          "name": "viewListIcon",
          "declaration": {
            "name": "viewListIcon",
            "module": "./shapes/view-list.js"
          }
        },
        {
          "kind": "js",
          "name": "viewListIconName",
          "declaration": {
            "name": "viewListIconName",
            "module": "./shapes/view-list.js"
          }
        },
        {
          "kind": "js",
          "name": "volumeIcon",
          "declaration": {
            "name": "volumeIcon",
            "module": "./shapes/volume.js"
          }
        },
        {
          "kind": "js",
          "name": "volumeIconName",
          "declaration": {
            "name": "volumeIconName",
            "module": "./shapes/volume.js"
          }
        },
        {
          "kind": "js",
          "name": "wandIcon",
          "declaration": {
            "name": "wandIcon",
            "module": "./shapes/wand.js"
          }
        },
        {
          "kind": "js",
          "name": "wandIconName",
          "declaration": {
            "name": "wandIconName",
            "module": "./shapes/wand.js"
          }
        },
        {
          "kind": "js",
          "name": "windowCloseIcon",
          "declaration": {
            "name": "windowCloseIcon",
            "module": "./shapes/window-close.js"
          }
        },
        {
          "kind": "js",
          "name": "windowCloseIconName",
          "declaration": {
            "name": "windowCloseIconName",
            "module": "./shapes/window-close.js"
          }
        },
        {
          "kind": "js",
          "name": "windowMaxIcon",
          "declaration": {
            "name": "windowMaxIcon",
            "module": "./shapes/window-max.js"
          }
        },
        {
          "kind": "js",
          "name": "windowMaxIconName",
          "declaration": {
            "name": "windowMaxIconName",
            "module": "./shapes/window-max.js"
          }
        },
        {
          "kind": "js",
          "name": "windowMinIcon",
          "declaration": {
            "name": "windowMinIcon",
            "module": "./shapes/window-min.js"
          }
        },
        {
          "kind": "js",
          "name": "windowMinIconName",
          "declaration": {
            "name": "windowMinIconName",
            "module": "./shapes/window-min.js"
          }
        },
        {
          "kind": "js",
          "name": "windowRestoreIcon",
          "declaration": {
            "name": "windowRestoreIcon",
            "module": "./shapes/window-restore.js"
          }
        },
        {
          "kind": "js",
          "name": "windowRestoreIconName",
          "declaration": {
            "name": "windowRestoreIconName",
            "module": "./shapes/window-restore.js"
          }
        },
        {
          "kind": "js",
          "name": "worldIcon",
          "declaration": {
            "name": "worldIcon",
            "module": "./shapes/world.js"
          }
        },
        {
          "kind": "js",
          "name": "worldIconName",
          "declaration": {
            "name": "worldIconName",
            "module": "./shapes/world.js"
          }
        },
        {
          "kind": "js",
          "name": "wrenchIcon",
          "declaration": {
            "name": "wrenchIcon",
            "module": "./shapes/wrench.js"
          }
        },
        {
          "kind": "js",
          "name": "wrenchIconName",
          "declaration": {
            "name": "wrenchIconName",
            "module": "./shapes/wrench.js"
          }
        },
        {
          "kind": "js",
          "name": "zoomInIcon",
          "declaration": {
            "name": "zoomInIcon",
            "module": "./shapes/zoom-in.js"
          }
        },
        {
          "kind": "js",
          "name": "zoomInIconName",
          "declaration": {
            "name": "zoomInIconName",
            "module": "./shapes/zoom-in.js"
          }
        },
        {
          "kind": "js",
          "name": "zoomOutIcon",
          "declaration": {
            "name": "zoomOutIcon",
            "module": "./shapes/zoom-out.js"
          }
        },
        {
          "kind": "js",
          "name": "zoomOutIconName",
          "declaration": {
            "name": "zoomOutIconName",
            "module": "./shapes/zoom-out.js"
          }
        },
        {
          "kind": "js",
          "name": "axisChartIcon",
          "declaration": {
            "name": "axisChartIcon",
            "module": "./shapes/axis-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "axisChartIconName",
          "declaration": {
            "name": "axisChartIconName",
            "module": "./shapes/axis-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "barChartIcon",
          "declaration": {
            "name": "barChartIcon",
            "module": "./shapes/bar-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "barChartIconName",
          "declaration": {
            "name": "barChartIconName",
            "module": "./shapes/bar-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "bellCurveIcon",
          "declaration": {
            "name": "bellCurveIcon",
            "module": "./shapes/bell-curve.js"
          }
        },
        {
          "kind": "js",
          "name": "bellCurveIconName",
          "declaration": {
            "name": "bellCurveIconName",
            "module": "./shapes/bell-curve.js"
          }
        },
        {
          "kind": "js",
          "name": "boxPlotIcon",
          "declaration": {
            "name": "boxPlotIcon",
            "module": "./shapes/box-plot.js"
          }
        },
        {
          "kind": "js",
          "name": "boxPlotIconName",
          "declaration": {
            "name": "boxPlotIconName",
            "module": "./shapes/box-plot.js"
          }
        },
        {
          "kind": "js",
          "name": "bubbleChartIcon",
          "declaration": {
            "name": "bubbleChartIcon",
            "module": "./shapes/bubble-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "bubbleChartIconName",
          "declaration": {
            "name": "bubbleChartIconName",
            "module": "./shapes/bubble-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "cloudChartIcon",
          "declaration": {
            "name": "cloudChartIcon",
            "module": "./shapes/cloud-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "cloudChartIconName",
          "declaration": {
            "name": "cloudChartIconName",
            "module": "./shapes/cloud-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "curveChartIcon",
          "declaration": {
            "name": "curveChartIcon",
            "module": "./shapes/curve-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "curveChartIconName",
          "declaration": {
            "name": "curveChartIconName",
            "module": "./shapes/curve-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "gridChartIcon",
          "declaration": {
            "name": "gridChartIcon",
            "module": "./shapes/grid-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "gridChartIconName",
          "declaration": {
            "name": "gridChartIconName",
            "module": "./shapes/grid-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "heatMapIcon",
          "declaration": {
            "name": "heatMapIcon",
            "module": "./shapes/heat-map.js"
          }
        },
        {
          "kind": "js",
          "name": "heatMapIconName",
          "declaration": {
            "name": "heatMapIconName",
            "module": "./shapes/heat-map.js"
          }
        },
        {
          "kind": "js",
          "name": "lineChartIcon",
          "declaration": {
            "name": "lineChartIcon",
            "module": "./shapes/line-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "lineChartIconName",
          "declaration": {
            "name": "lineChartIconName",
            "module": "./shapes/line-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "pieChartIcon",
          "declaration": {
            "name": "pieChartIcon",
            "module": "./shapes/pie-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "pieChartIconName",
          "declaration": {
            "name": "pieChartIconName",
            "module": "./shapes/pie-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "scatterPlotIcon",
          "declaration": {
            "name": "scatterPlotIcon",
            "module": "./shapes/scatter-plot.js"
          }
        },
        {
          "kind": "js",
          "name": "scatterPlotIconName",
          "declaration": {
            "name": "scatterPlotIconName",
            "module": "./shapes/scatter-plot.js"
          }
        },
        {
          "kind": "js",
          "name": "tickChartIcon",
          "declaration": {
            "name": "tickChartIcon",
            "module": "./shapes/tick-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "tickChartIconName",
          "declaration": {
            "name": "tickChartIconName",
            "module": "./shapes/tick-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "bankIcon",
          "declaration": {
            "name": "bankIcon",
            "module": "./shapes/bank.js"
          }
        },
        {
          "kind": "js",
          "name": "bankIconName",
          "declaration": {
            "name": "bankIconName",
            "module": "./shapes/bank.js"
          }
        },
        {
          "kind": "js",
          "name": "bitcoinIcon",
          "declaration": {
            "name": "bitcoinIcon",
            "module": "./shapes/bitcoin.js"
          }
        },
        {
          "kind": "js",
          "name": "bitcoinIconName",
          "declaration": {
            "name": "bitcoinIconName",
            "module": "./shapes/bitcoin.js"
          }
        },
        {
          "kind": "js",
          "name": "calculatorIcon",
          "declaration": {
            "name": "calculatorIcon",
            "module": "./shapes/calculator.js"
          }
        },
        {
          "kind": "js",
          "name": "calculatorIconName",
          "declaration": {
            "name": "calculatorIconName",
            "module": "./shapes/calculator.js"
          }
        },
        {
          "kind": "js",
          "name": "coinBagIcon",
          "declaration": {
            "name": "coinBagIcon",
            "module": "./shapes/coin-bag.js"
          }
        },
        {
          "kind": "js",
          "name": "coinBagIconName",
          "declaration": {
            "name": "coinBagIconName",
            "module": "./shapes/coin-bag.js"
          }
        },
        {
          "kind": "js",
          "name": "creditCardIcon",
          "declaration": {
            "name": "creditCardIcon",
            "module": "./shapes/credit-card.js"
          }
        },
        {
          "kind": "js",
          "name": "creditCardIconName",
          "declaration": {
            "name": "creditCardIconName",
            "module": "./shapes/credit-card.js"
          }
        },
        {
          "kind": "js",
          "name": "dollarIcon",
          "declaration": {
            "name": "dollarIcon",
            "module": "./shapes/dollar.js"
          }
        },
        {
          "kind": "js",
          "name": "dollarIconName",
          "declaration": {
            "name": "dollarIconName",
            "module": "./shapes/dollar.js"
          }
        },
        {
          "kind": "js",
          "name": "dollarBillIcon",
          "declaration": {
            "name": "dollarBillIcon",
            "module": "./shapes/dollar-bill.js"
          }
        },
        {
          "kind": "js",
          "name": "dollarBillIconName",
          "declaration": {
            "name": "dollarBillIconName",
            "module": "./shapes/dollar-bill.js"
          }
        },
        {
          "kind": "js",
          "name": "eCheckIcon",
          "declaration": {
            "name": "eCheckIcon",
            "module": "./shapes/e-check.js"
          }
        },
        {
          "kind": "js",
          "name": "eCheckIconName",
          "declaration": {
            "name": "eCheckIconName",
            "module": "./shapes/e-check.js"
          }
        },
        {
          "kind": "js",
          "name": "employeeIcon",
          "declaration": {
            "name": "employeeIcon",
            "module": "./shapes/employee.js"
          }
        },
        {
          "kind": "js",
          "name": "employeeIconName",
          "declaration": {
            "name": "employeeIconName",
            "module": "./shapes/employee.js"
          }
        },
        {
          "kind": "js",
          "name": "employeeGroupIcon",
          "declaration": {
            "name": "employeeGroupIcon",
            "module": "./shapes/employee-group.js"
          }
        },
        {
          "kind": "js",
          "name": "employeeGroupIconName",
          "declaration": {
            "name": "employeeGroupIconName",
            "module": "./shapes/employee-group.js"
          }
        },
        {
          "kind": "js",
          "name": "euroIcon",
          "declaration": {
            "name": "euroIcon",
            "module": "./shapes/euro.js"
          }
        },
        {
          "kind": "js",
          "name": "euroIconName",
          "declaration": {
            "name": "euroIconName",
            "module": "./shapes/euro.js"
          }
        },
        {
          "kind": "js",
          "name": "factoryIcon",
          "declaration": {
            "name": "factoryIcon",
            "module": "./shapes/factory.js"
          }
        },
        {
          "kind": "js",
          "name": "factoryIconName",
          "declaration": {
            "name": "factoryIconName",
            "module": "./shapes/factory.js"
          }
        },
        {
          "kind": "js",
          "name": "pesoIcon",
          "declaration": {
            "name": "pesoIcon",
            "module": "./shapes/peso.js"
          }
        },
        {
          "kind": "js",
          "name": "pesoIconName",
          "declaration": {
            "name": "pesoIconName",
            "module": "./shapes/peso.js"
          }
        },
        {
          "kind": "js",
          "name": "piggyBankIcon",
          "declaration": {
            "name": "piggyBankIcon",
            "module": "./shapes/piggy-bank.js"
          }
        },
        {
          "kind": "js",
          "name": "piggyBankIconName",
          "declaration": {
            "name": "piggyBankIconName",
            "module": "./shapes/piggy-bank.js"
          }
        },
        {
          "kind": "js",
          "name": "poundIcon",
          "declaration": {
            "name": "poundIcon",
            "module": "./shapes/pound.js"
          }
        },
        {
          "kind": "js",
          "name": "poundIconName",
          "declaration": {
            "name": "poundIconName",
            "module": "./shapes/pound.js"
          }
        },
        {
          "kind": "js",
          "name": "rubleIcon",
          "declaration": {
            "name": "rubleIcon",
            "module": "./shapes/ruble.js"
          }
        },
        {
          "kind": "js",
          "name": "rubleIconName",
          "declaration": {
            "name": "rubleIconName",
            "module": "./shapes/ruble.js"
          }
        },
        {
          "kind": "js",
          "name": "rupeeIcon",
          "declaration": {
            "name": "rupeeIcon",
            "module": "./shapes/rupee.js"
          }
        },
        {
          "kind": "js",
          "name": "rupeeIconName",
          "declaration": {
            "name": "rupeeIconName",
            "module": "./shapes/rupee.js"
          }
        },
        {
          "kind": "js",
          "name": "shoppingBagIcon",
          "declaration": {
            "name": "shoppingBagIcon",
            "module": "./shapes/shopping-bag.js"
          }
        },
        {
          "kind": "js",
          "name": "shoppingBagIconName",
          "declaration": {
            "name": "shoppingBagIconName",
            "module": "./shapes/shopping-bag.js"
          }
        },
        {
          "kind": "js",
          "name": "shoppingCartIcon",
          "declaration": {
            "name": "shoppingCartIcon",
            "module": "./shapes/shopping-cart.js"
          }
        },
        {
          "kind": "js",
          "name": "shoppingCartIconName",
          "declaration": {
            "name": "shoppingCartIconName",
            "module": "./shapes/shopping-cart.js"
          }
        },
        {
          "kind": "js",
          "name": "storeIcon",
          "declaration": {
            "name": "storeIcon",
            "module": "./shapes/store.js"
          }
        },
        {
          "kind": "js",
          "name": "storeIconName",
          "declaration": {
            "name": "storeIconName",
            "module": "./shapes/store.js"
          }
        },
        {
          "kind": "js",
          "name": "walletIcon",
          "declaration": {
            "name": "walletIcon",
            "module": "./shapes/wallet.js"
          }
        },
        {
          "kind": "js",
          "name": "walletIconName",
          "declaration": {
            "name": "walletIconName",
            "module": "./shapes/wallet.js"
          }
        },
        {
          "kind": "js",
          "name": "wonIcon",
          "declaration": {
            "name": "wonIcon",
            "module": "./shapes/won.js"
          }
        },
        {
          "kind": "js",
          "name": "wonIconName",
          "declaration": {
            "name": "wonIconName",
            "module": "./shapes/won.js"
          }
        },
        {
          "kind": "js",
          "name": "yenIcon",
          "declaration": {
            "name": "yenIcon",
            "module": "./shapes/yen.js"
          }
        },
        {
          "kind": "js",
          "name": "yenIconName",
          "declaration": {
            "name": "yenIconName",
            "module": "./shapes/yen.js"
          }
        },
        {
          "kind": "js",
          "name": "cameraIcon",
          "declaration": {
            "name": "cameraIcon",
            "module": "./shapes/camera.js"
          }
        },
        {
          "kind": "js",
          "name": "cameraIconName",
          "declaration": {
            "name": "cameraIconName",
            "module": "./shapes/camera.js"
          }
        },
        {
          "kind": "js",
          "name": "fastForwardIcon",
          "declaration": {
            "name": "fastForwardIcon",
            "module": "./shapes/fast-forward.js"
          }
        },
        {
          "kind": "js",
          "name": "fastForwardIconName",
          "declaration": {
            "name": "fastForwardIconName",
            "module": "./shapes/fast-forward.js"
          }
        },
        {
          "kind": "js",
          "name": "filmStripIcon",
          "declaration": {
            "name": "filmStripIcon",
            "module": "./shapes/film-strip.js"
          }
        },
        {
          "kind": "js",
          "name": "filmStripIconName",
          "declaration": {
            "name": "filmStripIconName",
            "module": "./shapes/film-strip.js"
          }
        },
        {
          "kind": "js",
          "name": "headphonesIcon",
          "declaration": {
            "name": "headphonesIcon",
            "module": "./shapes/headphones.js"
          }
        },
        {
          "kind": "js",
          "name": "headphonesIconName",
          "declaration": {
            "name": "headphonesIconName",
            "module": "./shapes/headphones.js"
          }
        },
        {
          "kind": "js",
          "name": "imageGalleryIcon",
          "declaration": {
            "name": "imageGalleryIcon",
            "module": "./shapes/image-gallery.js"
          }
        },
        {
          "kind": "js",
          "name": "imageGalleryIconName",
          "declaration": {
            "name": "imageGalleryIconName",
            "module": "./shapes/image-gallery.js"
          }
        },
        {
          "kind": "js",
          "name": "microphoneIcon",
          "declaration": {
            "name": "microphoneIcon",
            "module": "./shapes/microphone.js"
          }
        },
        {
          "kind": "js",
          "name": "microphoneIconName",
          "declaration": {
            "name": "microphoneIconName",
            "module": "./shapes/microphone.js"
          }
        },
        {
          "kind": "js",
          "name": "microphoneMuteIcon",
          "declaration": {
            "name": "microphoneMuteIcon",
            "module": "./shapes/microphone-mute.js"
          }
        },
        {
          "kind": "js",
          "name": "microphoneMuteIconName",
          "declaration": {
            "name": "microphoneMuteIconName",
            "module": "./shapes/microphone-mute.js"
          }
        },
        {
          "kind": "js",
          "name": "musicNoteIcon",
          "declaration": {
            "name": "musicNoteIcon",
            "module": "./shapes/music-note.js"
          }
        },
        {
          "kind": "js",
          "name": "musicNoteIconName",
          "declaration": {
            "name": "musicNoteIconName",
            "module": "./shapes/music-note.js"
          }
        },
        {
          "kind": "js",
          "name": "pauseIcon",
          "declaration": {
            "name": "pauseIcon",
            "module": "./shapes/pause.js"
          }
        },
        {
          "kind": "js",
          "name": "pauseIconName",
          "declaration": {
            "name": "pauseIconName",
            "module": "./shapes/pause.js"
          }
        },
        {
          "kind": "js",
          "name": "playIcon",
          "declaration": {
            "name": "playIcon",
            "module": "./shapes/play.js"
          }
        },
        {
          "kind": "js",
          "name": "playIconName",
          "declaration": {
            "name": "playIconName",
            "module": "./shapes/play.js"
          }
        },
        {
          "kind": "js",
          "name": "powerIcon",
          "declaration": {
            "name": "powerIcon",
            "module": "./shapes/power.js"
          }
        },
        {
          "kind": "js",
          "name": "powerIconName",
          "declaration": {
            "name": "powerIconName",
            "module": "./shapes/power.js"
          }
        },
        {
          "kind": "js",
          "name": "replayAllIcon",
          "declaration": {
            "name": "replayAllIcon",
            "module": "./shapes/replay-all.js"
          }
        },
        {
          "kind": "js",
          "name": "replayAllIconName",
          "declaration": {
            "name": "replayAllIconName",
            "module": "./shapes/replay-all.js"
          }
        },
        {
          "kind": "js",
          "name": "replayOneIcon",
          "declaration": {
            "name": "replayOneIcon",
            "module": "./shapes/replay-one.js"
          }
        },
        {
          "kind": "js",
          "name": "replayOneIconName",
          "declaration": {
            "name": "replayOneIconName",
            "module": "./shapes/replay-one.js"
          }
        },
        {
          "kind": "js",
          "name": "rewindIcon",
          "declaration": {
            "name": "rewindIcon",
            "module": "./shapes/rewind.js"
          }
        },
        {
          "kind": "js",
          "name": "rewindIconName",
          "declaration": {
            "name": "rewindIconName",
            "module": "./shapes/rewind.js"
          }
        },
        {
          "kind": "js",
          "name": "shuffleIcon",
          "declaration": {
            "name": "shuffleIcon",
            "module": "./shapes/shuffle.js"
          }
        },
        {
          "kind": "js",
          "name": "shuffleIconName",
          "declaration": {
            "name": "shuffleIconName",
            "module": "./shapes/shuffle.js"
          }
        },
        {
          "kind": "js",
          "name": "stepForwardIcon",
          "declaration": {
            "name": "stepForwardIcon",
            "module": "./shapes/step-forward.js"
          }
        },
        {
          "kind": "js",
          "name": "stepForwardIconName",
          "declaration": {
            "name": "stepForwardIconName",
            "module": "./shapes/step-forward.js"
          }
        },
        {
          "kind": "js",
          "name": "stopIcon",
          "declaration": {
            "name": "stopIcon",
            "module": "./shapes/stop.js"
          }
        },
        {
          "kind": "js",
          "name": "stopIconName",
          "declaration": {
            "name": "stopIconName",
            "module": "./shapes/stop.js"
          }
        },
        {
          "kind": "js",
          "name": "videoCameraIcon",
          "declaration": {
            "name": "videoCameraIcon",
            "module": "./shapes/video-camera.js"
          }
        },
        {
          "kind": "js",
          "name": "videoCameraIconName",
          "declaration": {
            "name": "videoCameraIconName",
            "module": "./shapes/video-camera.js"
          }
        },
        {
          "kind": "js",
          "name": "videoGalleryIcon",
          "declaration": {
            "name": "videoGalleryIcon",
            "module": "./shapes/video-gallery.js"
          }
        },
        {
          "kind": "js",
          "name": "videoGalleryIconName",
          "declaration": {
            "name": "videoGalleryIconName",
            "module": "./shapes/video-gallery.js"
          }
        },
        {
          "kind": "js",
          "name": "volumeDownIcon",
          "declaration": {
            "name": "volumeDownIcon",
            "module": "./shapes/volume-down.js"
          }
        },
        {
          "kind": "js",
          "name": "volumeDownIconName",
          "declaration": {
            "name": "volumeDownIconName",
            "module": "./shapes/volume-down.js"
          }
        },
        {
          "kind": "js",
          "name": "volumeMuteIcon",
          "declaration": {
            "name": "volumeMuteIcon",
            "module": "./shapes/volume-mute.js"
          }
        },
        {
          "kind": "js",
          "name": "volumeMuteIconName",
          "declaration": {
            "name": "volumeMuteIconName",
            "module": "./shapes/volume-mute.js"
          }
        },
        {
          "kind": "js",
          "name": "volumeUpIcon",
          "declaration": {
            "name": "volumeUpIcon",
            "module": "./shapes/volume-up.js"
          }
        },
        {
          "kind": "js",
          "name": "volumeUpIconName",
          "declaration": {
            "name": "volumeUpIconName",
            "module": "./shapes/volume-up.js"
          }
        },
        {
          "kind": "js",
          "name": "arrowMiniIcon",
          "declaration": {
            "name": "arrowMiniIcon",
            "module": "./shapes/arrow-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "arrowMiniIconName",
          "declaration": {
            "name": "arrowMiniIconName",
            "module": "./shapes/arrow-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "calendarMiniIcon",
          "declaration": {
            "name": "calendarMiniIcon",
            "module": "./shapes/calendar-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "calendarMiniIconName",
          "declaration": {
            "name": "calendarMiniIconName",
            "module": "./shapes/calendar-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "checkCircleMiniIcon",
          "declaration": {
            "name": "checkCircleMiniIcon",
            "module": "./shapes/check-circle-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "checkCircleMiniIconName",
          "declaration": {
            "name": "checkCircleMiniIconName",
            "module": "./shapes/check-circle-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "checkMiniIcon",
          "declaration": {
            "name": "checkMiniIcon",
            "module": "./shapes/check-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "checkMiniIconName",
          "declaration": {
            "name": "checkMiniIconName",
            "module": "./shapes/check-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "errorMiniIcon",
          "declaration": {
            "name": "errorMiniIcon",
            "module": "./shapes/error-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "errorMiniIconName",
          "declaration": {
            "name": "errorMiniIconName",
            "module": "./shapes/error-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "eventMiniIcon",
          "declaration": {
            "name": "eventMiniIcon",
            "module": "./shapes/event-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "eventMiniIconName",
          "declaration": {
            "name": "eventMiniIconName",
            "module": "./shapes/event-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "filterGridCircleMiniIcon",
          "declaration": {
            "name": "filterGridCircleMiniIcon",
            "module": "./shapes/filter-grid-circle-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "filterGridCircleMiniIconName",
          "declaration": {
            "name": "filterGridCircleMiniIconName",
            "module": "./shapes/filter-grid-circle-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "filterGridMiniIcon",
          "declaration": {
            "name": "filterGridMiniIcon",
            "module": "./shapes/filter-grid-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "filterGridMiniIconName",
          "declaration": {
            "name": "filterGridMiniIconName",
            "module": "./shapes/filter-grid-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "infoCircleMiniIcon",
          "declaration": {
            "name": "infoCircleMiniIcon",
            "module": "./shapes/info-circle-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "infoCircleMiniIconName",
          "declaration": {
            "name": "infoCircleMiniIconName",
            "module": "./shapes/info-circle-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "timesMiniIcon",
          "declaration": {
            "name": "timesMiniIcon",
            "module": "./shapes/times-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "timesMiniIconName",
          "declaration": {
            "name": "timesMiniIconName",
            "module": "./shapes/times-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "warningMiniIcon",
          "declaration": {
            "name": "warningMiniIcon",
            "module": "./shapes/warning-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "warningMiniIconName",
          "declaration": {
            "name": "warningMiniIconName",
            "module": "./shapes/warning-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "administratorIcon",
          "declaration": {
            "name": "administratorIcon",
            "module": "./shapes/administrator.js"
          }
        },
        {
          "kind": "js",
          "name": "administratorIconName",
          "declaration": {
            "name": "administratorIconName",
            "module": "./shapes/administrator.js"
          }
        },
        {
          "kind": "js",
          "name": "animationIcon",
          "declaration": {
            "name": "animationIcon",
            "module": "./shapes/animation.js"
          }
        },
        {
          "kind": "js",
          "name": "animationIconName",
          "declaration": {
            "name": "animationIconName",
            "module": "./shapes/animation.js"
          }
        },
        {
          "kind": "js",
          "name": "applicationIcon",
          "declaration": {
            "name": "applicationIcon",
            "module": "./shapes/application.js"
          }
        },
        {
          "kind": "js",
          "name": "applicationIconName",
          "declaration": {
            "name": "applicationIconName",
            "module": "./shapes/application.js"
          }
        },
        {
          "kind": "js",
          "name": "applicationsIcon",
          "declaration": {
            "name": "applicationsIcon",
            "module": "./shapes/applications.js"
          }
        },
        {
          "kind": "js",
          "name": "applicationsIconName",
          "declaration": {
            "name": "applicationsIconName",
            "module": "./shapes/applications.js"
          }
        },
        {
          "kind": "js",
          "name": "archiveIcon",
          "declaration": {
            "name": "archiveIcon",
            "module": "./shapes/archive.js"
          }
        },
        {
          "kind": "js",
          "name": "archiveIconName",
          "declaration": {
            "name": "archiveIconName",
            "module": "./shapes/archive.js"
          }
        },
        {
          "kind": "js",
          "name": "assignUserIcon",
          "declaration": {
            "name": "assignUserIcon",
            "module": "./shapes/assign-user.js"
          }
        },
        {
          "kind": "js",
          "name": "assignUserIconName",
          "declaration": {
            "name": "assignUserIconName",
            "module": "./shapes/assign-user.js"
          }
        },
        {
          "kind": "js",
          "name": "atomIcon",
          "declaration": {
            "name": "atomIcon",
            "module": "./shapes/atom.js"
          }
        },
        {
          "kind": "js",
          "name": "atomIconName",
          "declaration": {
            "name": "atomIconName",
            "module": "./shapes/atom.js"
          }
        },
        {
          "kind": "js",
          "name": "backupIcon",
          "declaration": {
            "name": "backupIcon",
            "module": "./shapes/backup.js"
          }
        },
        {
          "kind": "js",
          "name": "backupIconName",
          "declaration": {
            "name": "backupIconName",
            "module": "./shapes/backup.js"
          }
        },
        {
          "kind": "js",
          "name": "backupRestoreIcon",
          "declaration": {
            "name": "backupRestoreIcon",
            "module": "./shapes/backup-restore.js"
          }
        },
        {
          "kind": "js",
          "name": "backupRestoreIconName",
          "declaration": {
            "name": "backupRestoreIconName",
            "module": "./shapes/backup-restore.js"
          }
        },
        {
          "kind": "js",
          "name": "barCodeIcon",
          "declaration": {
            "name": "barCodeIcon",
            "module": "./shapes/bar-code.js"
          }
        },
        {
          "kind": "js",
          "name": "barCodeIconName",
          "declaration": {
            "name": "barCodeIconName",
            "module": "./shapes/bar-code.js"
          }
        },
        {
          "kind": "js",
          "name": "batteryIcon",
          "declaration": {
            "name": "batteryIcon",
            "module": "./shapes/battery.js"
          }
        },
        {
          "kind": "js",
          "name": "batteryIconName",
          "declaration": {
            "name": "batteryIconName",
            "module": "./shapes/battery.js"
          }
        },
        {
          "kind": "js",
          "name": "blockIcon",
          "declaration": {
            "name": "blockIcon",
            "module": "./shapes/block.js"
          }
        },
        {
          "kind": "js",
          "name": "blockIconName",
          "declaration": {
            "name": "blockIconName",
            "module": "./shapes/block.js"
          }
        },
        {
          "kind": "js",
          "name": "blocksGroupIcon",
          "declaration": {
            "name": "blocksGroupIcon",
            "module": "./shapes/blocks-group.js"
          }
        },
        {
          "kind": "js",
          "name": "blocksGroupIconName",
          "declaration": {
            "name": "blocksGroupIconName",
            "module": "./shapes/blocks-group.js"
          }
        },
        {
          "kind": "js",
          "name": "bluetoothIcon",
          "declaration": {
            "name": "bluetoothIcon",
            "module": "./shapes/bluetooth.js"
          }
        },
        {
          "kind": "js",
          "name": "bluetoothIconName",
          "declaration": {
            "name": "bluetoothIconName",
            "module": "./shapes/bluetooth.js"
          }
        },
        {
          "kind": "js",
          "name": "bluetoothOffIcon",
          "declaration": {
            "name": "bluetoothOffIcon",
            "module": "./shapes/bluetooth-off.js"
          }
        },
        {
          "kind": "js",
          "name": "bluetoothOffIconName",
          "declaration": {
            "name": "bluetoothOffIconName",
            "module": "./shapes/bluetooth-off.js"
          }
        },
        {
          "kind": "js",
          "name": "buildingIcon",
          "declaration": {
            "name": "buildingIcon",
            "module": "./shapes/building.js"
          }
        },
        {
          "kind": "js",
          "name": "buildingIconName",
          "declaration": {
            "name": "buildingIconName",
            "module": "./shapes/building.js"
          }
        },
        {
          "kind": "js",
          "name": "bundleIcon",
          "declaration": {
            "name": "bundleIcon",
            "module": "./shapes/bundle.js"
          }
        },
        {
          "kind": "js",
          "name": "bundleIconName",
          "declaration": {
            "name": "bundleIconName",
            "module": "./shapes/bundle.js"
          }
        },
        {
          "kind": "js",
          "name": "capacitorIcon",
          "declaration": {
            "name": "capacitorIcon",
            "module": "./shapes/capacitor.js"
          }
        },
        {
          "kind": "js",
          "name": "capacitorIconName",
          "declaration": {
            "name": "capacitorIconName",
            "module": "./shapes/capacitor.js"
          }
        },
        {
          "kind": "js",
          "name": "cdDvdIcon",
          "declaration": {
            "name": "cdDvdIcon",
            "module": "./shapes/cd-dvd.js"
          }
        },
        {
          "kind": "js",
          "name": "cdDvdIconName",
          "declaration": {
            "name": "cdDvdIconName",
            "module": "./shapes/cd-dvd.js"
          }
        },
        {
          "kind": "js",
          "name": "certificateIcon",
          "declaration": {
            "name": "certificateIcon",
            "module": "./shapes/certificate.js"
          }
        },
        {
          "kind": "js",
          "name": "certificateIconName",
          "declaration": {
            "name": "certificateIconName",
            "module": "./shapes/certificate.js"
          }
        },
        {
          "kind": "js",
          "name": "ciCdIcon",
          "declaration": {
            "name": "ciCdIcon",
            "module": "./shapes/ci-cd.js"
          }
        },
        {
          "kind": "js",
          "name": "ciCdIconName",
          "declaration": {
            "name": "ciCdIconName",
            "module": "./shapes/ci-cd.js"
          }
        },
        {
          "kind": "js",
          "name": "cloudNetworkIcon",
          "declaration": {
            "name": "cloudNetworkIcon",
            "module": "./shapes/cloud-network.js"
          }
        },
        {
          "kind": "js",
          "name": "cloudNetworkIconName",
          "declaration": {
            "name": "cloudNetworkIconName",
            "module": "./shapes/cloud-network.js"
          }
        },
        {
          "kind": "js",
          "name": "cloudScaleIcon",
          "declaration": {
            "name": "cloudScaleIcon",
            "module": "./shapes/cloud-scale.js"
          }
        },
        {
          "kind": "js",
          "name": "cloudScaleIconName",
          "declaration": {
            "name": "cloudScaleIconName",
            "module": "./shapes/cloud-scale.js"
          }
        },
        {
          "kind": "js",
          "name": "cloudTrafficIcon",
          "declaration": {
            "name": "cloudTrafficIcon",
            "module": "./shapes/cloud-traffic.js"
          }
        },
        {
          "kind": "js",
          "name": "cloudTrafficIconName",
          "declaration": {
            "name": "cloudTrafficIconName",
            "module": "./shapes/cloud-traffic.js"
          }
        },
        {
          "kind": "js",
          "name": "clusterIcon",
          "declaration": {
            "name": "clusterIcon",
            "module": "./shapes/cluster.js"
          }
        },
        {
          "kind": "js",
          "name": "clusterIconName",
          "declaration": {
            "name": "clusterIconName",
            "module": "./shapes/cluster.js"
          }
        },
        {
          "kind": "js",
          "name": "codeIcon",
          "declaration": {
            "name": "codeIcon",
            "module": "./shapes/code.js"
          }
        },
        {
          "kind": "js",
          "name": "codeIconName",
          "declaration": {
            "name": "codeIconName",
            "module": "./shapes/code.js"
          }
        },
        {
          "kind": "js",
          "name": "computerIcon",
          "declaration": {
            "name": "computerIcon",
            "module": "./shapes/computer.js"
          }
        },
        {
          "kind": "js",
          "name": "computerIconName",
          "declaration": {
            "name": "computerIconName",
            "module": "./shapes/computer.js"
          }
        },
        {
          "kind": "js",
          "name": "connectIcon",
          "declaration": {
            "name": "connectIcon",
            "module": "./shapes/connect.js"
          }
        },
        {
          "kind": "js",
          "name": "connectIconName",
          "declaration": {
            "name": "connectIconName",
            "module": "./shapes/connect.js"
          }
        },
        {
          "kind": "js",
          "name": "containerIcon",
          "declaration": {
            "name": "containerIcon",
            "module": "./shapes/container.js"
          }
        },
        {
          "kind": "js",
          "name": "containerIconName",
          "declaration": {
            "name": "containerIconName",
            "module": "./shapes/container.js"
          }
        },
        {
          "kind": "js",
          "name": "containerVolumeIcon",
          "declaration": {
            "name": "containerVolumeIcon",
            "module": "./shapes/container-volume.js"
          }
        },
        {
          "kind": "js",
          "name": "containerVolumeIconName",
          "declaration": {
            "name": "containerVolumeIconName",
            "module": "./shapes/container-volume.js"
          }
        },
        {
          "kind": "js",
          "name": "controlLunIcon",
          "declaration": {
            "name": "controlLunIcon",
            "module": "./shapes/control-lun.js"
          }
        },
        {
          "kind": "js",
          "name": "controlLunIconName",
          "declaration": {
            "name": "controlLunIconName",
            "module": "./shapes/control-lun.js"
          }
        },
        {
          "kind": "js",
          "name": "cpuIcon",
          "declaration": {
            "name": "cpuIcon",
            "module": "./shapes/cpu.js"
          }
        },
        {
          "kind": "js",
          "name": "cpuIconName",
          "declaration": {
            "name": "cpuIconName",
            "module": "./shapes/cpu.js"
          }
        },
        {
          "kind": "js",
          "name": "dashboardIcon",
          "declaration": {
            "name": "dashboardIcon",
            "module": "./shapes/dashboard.js"
          }
        },
        {
          "kind": "js",
          "name": "dashboardIconName",
          "declaration": {
            "name": "dashboardIconName",
            "module": "./shapes/dashboard.js"
          }
        },
        {
          "kind": "js",
          "name": "dataClusterIcon",
          "declaration": {
            "name": "dataClusterIcon",
            "module": "./shapes/data-cluster.js"
          }
        },
        {
          "kind": "js",
          "name": "dataClusterIconName",
          "declaration": {
            "name": "dataClusterIconName",
            "module": "./shapes/data-cluster.js"
          }
        },
        {
          "kind": "js",
          "name": "deployIcon",
          "declaration": {
            "name": "deployIcon",
            "module": "./shapes/deploy.js"
          }
        },
        {
          "kind": "js",
          "name": "deployIconName",
          "declaration": {
            "name": "deployIconName",
            "module": "./shapes/deploy.js"
          }
        },
        {
          "kind": "js",
          "name": "devicesIcon",
          "declaration": {
            "name": "devicesIcon",
            "module": "./shapes/devices.js"
          }
        },
        {
          "kind": "js",
          "name": "devicesIconName",
          "declaration": {
            "name": "devicesIconName",
            "module": "./shapes/devices.js"
          }
        },
        {
          "kind": "js",
          "name": "digitalSignatureIcon",
          "declaration": {
            "name": "digitalSignatureIcon",
            "module": "./shapes/digital-signature.js"
          }
        },
        {
          "kind": "js",
          "name": "digitalSignatureIconName",
          "declaration": {
            "name": "digitalSignatureIconName",
            "module": "./shapes/digital-signature.js"
          }
        },
        {
          "kind": "js",
          "name": "disconnectIcon",
          "declaration": {
            "name": "disconnectIcon",
            "module": "./shapes/disconnect.js"
          }
        },
        {
          "kind": "js",
          "name": "disconnectIconName",
          "declaration": {
            "name": "disconnectIconName",
            "module": "./shapes/disconnect.js"
          }
        },
        {
          "kind": "js",
          "name": "displayIcon",
          "declaration": {
            "name": "displayIcon",
            "module": "./shapes/display.js"
          }
        },
        {
          "kind": "js",
          "name": "displayIconName",
          "declaration": {
            "name": "displayIconName",
            "module": "./shapes/display.js"
          }
        },
        {
          "kind": "js",
          "name": "downloadCloudIcon",
          "declaration": {
            "name": "downloadCloudIcon",
            "module": "./shapes/download-cloud.js"
          }
        },
        {
          "kind": "js",
          "name": "downloadCloudIconName",
          "declaration": {
            "name": "downloadCloudIconName",
            "module": "./shapes/download-cloud.js"
          }
        },
        {
          "kind": "js",
          "name": "exportIcon",
          "declaration": {
            "name": "exportIcon",
            "module": "./shapes/export.js"
          }
        },
        {
          "kind": "js",
          "name": "exportIconName",
          "declaration": {
            "name": "exportIconName",
            "module": "./shapes/export.js"
          }
        },
        {
          "kind": "js",
          "name": "fileShareIcon",
          "declaration": {
            "name": "fileShareIcon",
            "module": "./shapes/file-share.js"
          }
        },
        {
          "kind": "js",
          "name": "fileShareIconName",
          "declaration": {
            "name": "fileShareIconName",
            "module": "./shapes/file-share.js"
          }
        },
        {
          "kind": "js",
          "name": "fileShare2Icon",
          "declaration": {
            "name": "fileShare2Icon",
            "module": "./shapes/file-share-2.js"
          }
        },
        {
          "kind": "js",
          "name": "fileShare2IconName",
          "declaration": {
            "name": "fileShare2IconName",
            "module": "./shapes/file-share-2.js"
          }
        },
        {
          "kind": "js",
          "name": "flaskIcon",
          "declaration": {
            "name": "flaskIcon",
            "module": "./shapes/flask.js"
          }
        },
        {
          "kind": "js",
          "name": "flaskIconName",
          "declaration": {
            "name": "flaskIconName",
            "module": "./shapes/flask.js"
          }
        },
        {
          "kind": "js",
          "name": "floppyIcon",
          "declaration": {
            "name": "floppyIcon",
            "module": "./shapes/floppy.js"
          }
        },
        {
          "kind": "js",
          "name": "floppyIconName",
          "declaration": {
            "name": "floppyIconName",
            "module": "./shapes/floppy.js"
          }
        },
        {
          "kind": "js",
          "name": "hardDiskIcon",
          "declaration": {
            "name": "hardDiskIcon",
            "module": "./shapes/hard-disk.js"
          }
        },
        {
          "kind": "js",
          "name": "hardDiskIconName",
          "declaration": {
            "name": "hardDiskIconName",
            "module": "./shapes/hard-disk.js"
          }
        },
        {
          "kind": "js",
          "name": "hardDriveIcon",
          "declaration": {
            "name": "hardDriveIcon",
            "module": "./shapes/hard-drive.js"
          }
        },
        {
          "kind": "js",
          "name": "hardDriveIconName",
          "declaration": {
            "name": "hardDriveIconName",
            "module": "./shapes/hard-drive.js"
          }
        },
        {
          "kind": "js",
          "name": "hardDriveDisksIcon",
          "declaration": {
            "name": "hardDriveDisksIcon",
            "module": "./shapes/hard-drive-disks.js"
          }
        },
        {
          "kind": "js",
          "name": "hardDriveDisksIconName",
          "declaration": {
            "name": "hardDriveDisksIconName",
            "module": "./shapes/hard-drive-disks.js"
          }
        },
        {
          "kind": "js",
          "name": "helixIcon",
          "declaration": {
            "name": "helixIcon",
            "module": "./shapes/helix.js"
          }
        },
        {
          "kind": "js",
          "name": "helixIconName",
          "declaration": {
            "name": "helixIconName",
            "module": "./shapes/helix.js"
          }
        },
        {
          "kind": "js",
          "name": "hostIcon",
          "declaration": {
            "name": "hostIcon",
            "module": "./shapes/host.js"
          }
        },
        {
          "kind": "js",
          "name": "hostIconName",
          "declaration": {
            "name": "hostIconName",
            "module": "./shapes/host.js"
          }
        },
        {
          "kind": "js",
          "name": "hostGroupIcon",
          "declaration": {
            "name": "hostGroupIcon",
            "module": "./shapes/host-group.js"
          }
        },
        {
          "kind": "js",
          "name": "hostGroupIconName",
          "declaration": {
            "name": "hostGroupIconName",
            "module": "./shapes/host-group.js"
          }
        },
        {
          "kind": "js",
          "name": "importIcon",
          "declaration": {
            "name": "importIcon",
            "module": "./shapes/import.js"
          }
        },
        {
          "kind": "js",
          "name": "importIconName",
          "declaration": {
            "name": "importIconName",
            "module": "./shapes/import.js"
          }
        },
        {
          "kind": "js",
          "name": "inductorIcon",
          "declaration": {
            "name": "inductorIcon",
            "module": "./shapes/inductor.js"
          }
        },
        {
          "kind": "js",
          "name": "inductorIconName",
          "declaration": {
            "name": "inductorIconName",
            "module": "./shapes/inductor.js"
          }
        },
        {
          "kind": "js",
          "name": "installIcon",
          "declaration": {
            "name": "installIcon",
            "module": "./shapes/install.js"
          }
        },
        {
          "kind": "js",
          "name": "installIconName",
          "declaration": {
            "name": "installIconName",
            "module": "./shapes/install.js"
          }
        },
        {
          "kind": "js",
          "name": "keyboardIcon",
          "declaration": {
            "name": "keyboardIcon",
            "module": "./shapes/keyboard.js"
          }
        },
        {
          "kind": "js",
          "name": "keyboardIconName",
          "declaration": {
            "name": "keyboardIconName",
            "module": "./shapes/keyboard.js"
          }
        },
        {
          "kind": "js",
          "name": "layersIcon",
          "declaration": {
            "name": "layersIcon",
            "module": "./shapes/layers.js"
          }
        },
        {
          "kind": "js",
          "name": "layersIconName",
          "declaration": {
            "name": "layersIconName",
            "module": "./shapes/layers.js"
          }
        },
        {
          "kind": "js",
          "name": "linkIcon",
          "declaration": {
            "name": "linkIcon",
            "module": "./shapes/link.js"
          }
        },
        {
          "kind": "js",
          "name": "linkIconName",
          "declaration": {
            "name": "linkIconName",
            "module": "./shapes/link.js"
          }
        },
        {
          "kind": "js",
          "name": "mediaChangerIcon",
          "declaration": {
            "name": "mediaChangerIcon",
            "module": "./shapes/media-changer.js"
          }
        },
        {
          "kind": "js",
          "name": "mediaChangerIconName",
          "declaration": {
            "name": "mediaChangerIconName",
            "module": "./shapes/media-changer.js"
          }
        },
        {
          "kind": "js",
          "name": "memoryIcon",
          "declaration": {
            "name": "memoryIcon",
            "module": "./shapes/memory.js"
          }
        },
        {
          "kind": "js",
          "name": "memoryIconName",
          "declaration": {
            "name": "memoryIconName",
            "module": "./shapes/memory.js"
          }
        },
        {
          "kind": "js",
          "name": "mobileIcon",
          "declaration": {
            "name": "mobileIcon",
            "module": "./shapes/mobile.js"
          }
        },
        {
          "kind": "js",
          "name": "mobileIconName",
          "declaration": {
            "name": "mobileIconName",
            "module": "./shapes/mobile.js"
          }
        },
        {
          "kind": "js",
          "name": "mouseIcon",
          "declaration": {
            "name": "mouseIcon",
            "module": "./shapes/mouse.js"
          }
        },
        {
          "kind": "js",
          "name": "mouseIconName",
          "declaration": {
            "name": "mouseIconName",
            "module": "./shapes/mouse.js"
          }
        },
        {
          "kind": "js",
          "name": "namespaceIcon",
          "declaration": {
            "name": "namespaceIcon",
            "module": "./shapes/namespace.js"
          }
        },
        {
          "kind": "js",
          "name": "namespaceIconName",
          "declaration": {
            "name": "namespaceIconName",
            "module": "./shapes/namespace.js"
          }
        },
        {
          "kind": "js",
          "name": "networkGlobeIcon",
          "declaration": {
            "name": "networkGlobeIcon",
            "module": "./shapes/network-globe.js"
          }
        },
        {
          "kind": "js",
          "name": "networkGlobeIconName",
          "declaration": {
            "name": "networkGlobeIconName",
            "module": "./shapes/network-globe.js"
          }
        },
        {
          "kind": "js",
          "name": "networkSettingsIcon",
          "declaration": {
            "name": "networkSettingsIcon",
            "module": "./shapes/network-settings.js"
          }
        },
        {
          "kind": "js",
          "name": "networkSettingsIconName",
          "declaration": {
            "name": "networkSettingsIconName",
            "module": "./shapes/network-settings.js"
          }
        },
        {
          "kind": "js",
          "name": "networkSwitchIcon",
          "declaration": {
            "name": "networkSwitchIcon",
            "module": "./shapes/network-switch.js"
          }
        },
        {
          "kind": "js",
          "name": "networkSwitchIconName",
          "declaration": {
            "name": "networkSwitchIconName",
            "module": "./shapes/network-switch.js"
          }
        },
        {
          "kind": "js",
          "name": "noWifiIcon",
          "declaration": {
            "name": "noWifiIcon",
            "module": "./shapes/no-wifi.js"
          }
        },
        {
          "kind": "js",
          "name": "noWifiIconName",
          "declaration": {
            "name": "noWifiIconName",
            "module": "./shapes/no-wifi.js"
          }
        },
        {
          "kind": "js",
          "name": "nodeIcon",
          "declaration": {
            "name": "nodeIcon",
            "module": "./shapes/node.js"
          }
        },
        {
          "kind": "js",
          "name": "nodeIconName",
          "declaration": {
            "name": "nodeIconName",
            "module": "./shapes/node.js"
          }
        },
        {
          "kind": "js",
          "name": "nodeGroupIcon",
          "declaration": {
            "name": "nodeGroupIcon",
            "module": "./shapes/node-group.js"
          }
        },
        {
          "kind": "js",
          "name": "nodeGroupIconName",
          "declaration": {
            "name": "nodeGroupIconName",
            "module": "./shapes/node-group.js"
          }
        },
        {
          "kind": "js",
          "name": "nodesIcon",
          "declaration": {
            "name": "nodesIcon",
            "module": "./shapes/nodes.js"
          }
        },
        {
          "kind": "js",
          "name": "nodesIconName",
          "declaration": {
            "name": "nodesIconName",
            "module": "./shapes/nodes.js"
          }
        },
        {
          "kind": "js",
          "name": "nvmeIcon",
          "declaration": {
            "name": "nvmeIcon",
            "module": "./shapes/nvme.js"
          }
        },
        {
          "kind": "js",
          "name": "nvmeIconName",
          "declaration": {
            "name": "nvmeIconName",
            "module": "./shapes/nvme.js"
          }
        },
        {
          "kind": "js",
          "name": "phoneHandsetIcon",
          "declaration": {
            "name": "phoneHandsetIcon",
            "module": "./shapes/phone-handset.js"
          }
        },
        {
          "kind": "js",
          "name": "phoneHandsetIconName",
          "declaration": {
            "name": "phoneHandsetIconName",
            "module": "./shapes/phone-handset.js"
          }
        },
        {
          "kind": "js",
          "name": "pluginIcon",
          "declaration": {
            "name": "pluginIcon",
            "module": "./shapes/plugin.js"
          }
        },
        {
          "kind": "js",
          "name": "pluginIconName",
          "declaration": {
            "name": "pluginIconName",
            "module": "./shapes/plugin.js"
          }
        },
        {
          "kind": "js",
          "name": "podIcon",
          "declaration": {
            "name": "podIcon",
            "module": "./shapes/pod.js"
          }
        },
        {
          "kind": "js",
          "name": "podIconName",
          "declaration": {
            "name": "podIconName",
            "module": "./shapes/pod.js"
          }
        },
        {
          "kind": "js",
          "name": "processOnVmIcon",
          "declaration": {
            "name": "processOnVmIcon",
            "module": "./shapes/process-on-vm.js"
          }
        },
        {
          "kind": "js",
          "name": "processOnVmIconName",
          "declaration": {
            "name": "processOnVmIconName",
            "module": "./shapes/process-on-vm.js"
          }
        },
        {
          "kind": "js",
          "name": "qrCodeIcon",
          "declaration": {
            "name": "qrCodeIcon",
            "module": "./shapes/qr-code.js"
          }
        },
        {
          "kind": "js",
          "name": "qrCodeIconName",
          "declaration": {
            "name": "qrCodeIconName",
            "module": "./shapes/qr-code.js"
          }
        },
        {
          "kind": "js",
          "name": "rackServerIcon",
          "declaration": {
            "name": "rackServerIcon",
            "module": "./shapes/rack-server.js"
          }
        },
        {
          "kind": "js",
          "name": "rackServerIconName",
          "declaration": {
            "name": "rackServerIconName",
            "module": "./shapes/rack-server.js"
          }
        },
        {
          "kind": "js",
          "name": "radarIcon",
          "declaration": {
            "name": "radarIcon",
            "module": "./shapes/radar.js"
          }
        },
        {
          "kind": "js",
          "name": "radarIconName",
          "declaration": {
            "name": "radarIconName",
            "module": "./shapes/radar.js"
          }
        },
        {
          "kind": "js",
          "name": "resistorIcon",
          "declaration": {
            "name": "resistorIcon",
            "module": "./shapes/resistor.js"
          }
        },
        {
          "kind": "js",
          "name": "resistorIconName",
          "declaration": {
            "name": "resistorIconName",
            "module": "./shapes/resistor.js"
          }
        },
        {
          "kind": "js",
          "name": "resourcePoolIcon",
          "declaration": {
            "name": "resourcePoolIcon",
            "module": "./shapes/resource-pool.js"
          }
        },
        {
          "kind": "js",
          "name": "resourcePoolIconName",
          "declaration": {
            "name": "resourcePoolIconName",
            "module": "./shapes/resource-pool.js"
          }
        },
        {
          "kind": "js",
          "name": "routerIcon",
          "declaration": {
            "name": "routerIcon",
            "module": "./shapes/router.js"
          }
        },
        {
          "kind": "js",
          "name": "routerIconName",
          "declaration": {
            "name": "routerIconName",
            "module": "./shapes/router.js"
          }
        },
        {
          "kind": "js",
          "name": "rulerPencilIcon",
          "declaration": {
            "name": "rulerPencilIcon",
            "module": "./shapes/ruler-pencil.js"
          }
        },
        {
          "kind": "js",
          "name": "rulerPencilIconName",
          "declaration": {
            "name": "rulerPencilIconName",
            "module": "./shapes/ruler-pencil.js"
          }
        },
        {
          "kind": "js",
          "name": "shieldIcon",
          "declaration": {
            "name": "shieldIcon",
            "module": "./shapes/shield.js"
          }
        },
        {
          "kind": "js",
          "name": "shieldIconName",
          "declaration": {
            "name": "shieldIconName",
            "module": "./shapes/shield.js"
          }
        },
        {
          "kind": "js",
          "name": "shieldCheckIcon",
          "declaration": {
            "name": "shieldCheckIcon",
            "module": "./shapes/shield-check.js"
          }
        },
        {
          "kind": "js",
          "name": "shieldCheckIconName",
          "declaration": {
            "name": "shieldCheckIconName",
            "module": "./shapes/shield-check.js"
          }
        },
        {
          "kind": "js",
          "name": "shieldXIcon",
          "declaration": {
            "name": "shieldXIcon",
            "module": "./shapes/shield-x.js"
          }
        },
        {
          "kind": "js",
          "name": "shieldXIconName",
          "declaration": {
            "name": "shieldXIconName",
            "module": "./shapes/shield-x.js"
          }
        },
        {
          "kind": "js",
          "name": "squidIcon",
          "declaration": {
            "name": "squidIcon",
            "module": "./shapes/squid.js"
          }
        },
        {
          "kind": "js",
          "name": "squidIconName",
          "declaration": {
            "name": "squidIconName",
            "module": "./shapes/squid.js"
          }
        },
        {
          "kind": "js",
          "name": "ssdIcon",
          "declaration": {
            "name": "ssdIcon",
            "module": "./shapes/ssd.js"
          }
        },
        {
          "kind": "js",
          "name": "ssdIconName",
          "declaration": {
            "name": "ssdIconName",
            "module": "./shapes/ssd.js"
          }
        },
        {
          "kind": "js",
          "name": "storageIcon",
          "declaration": {
            "name": "storageIcon",
            "module": "./shapes/storage.js"
          }
        },
        {
          "kind": "js",
          "name": "storageIconName",
          "declaration": {
            "name": "storageIconName",
            "module": "./shapes/storage.js"
          }
        },
        {
          "kind": "js",
          "name": "storageAdapterIcon",
          "declaration": {
            "name": "storageAdapterIcon",
            "module": "./shapes/storage-adapter.js"
          }
        },
        {
          "kind": "js",
          "name": "storageAdapterIconName",
          "declaration": {
            "name": "storageAdapterIconName",
            "module": "./shapes/storage-adapter.js"
          }
        },
        {
          "kind": "js",
          "name": "tabletIcon",
          "declaration": {
            "name": "tabletIcon",
            "module": "./shapes/tablet.js"
          }
        },
        {
          "kind": "js",
          "name": "tabletIconName",
          "declaration": {
            "name": "tabletIconName",
            "module": "./shapes/tablet.js"
          }
        },
        {
          "kind": "js",
          "name": "tapeDriveIcon",
          "declaration": {
            "name": "tapeDriveIcon",
            "module": "./shapes/tape-drive.js"
          }
        },
        {
          "kind": "js",
          "name": "tapeDriveIconName",
          "declaration": {
            "name": "tapeDriveIconName",
            "module": "./shapes/tape-drive.js"
          }
        },
        {
          "kind": "js",
          "name": "terminalIcon",
          "declaration": {
            "name": "terminalIcon",
            "module": "./shapes/terminal.js"
          }
        },
        {
          "kind": "js",
          "name": "terminalIconName",
          "declaration": {
            "name": "terminalIconName",
            "module": "./shapes/terminal.js"
          }
        },
        {
          "kind": "js",
          "name": "unarchiveIcon",
          "declaration": {
            "name": "unarchiveIcon",
            "module": "./shapes/unarchive.js"
          }
        },
        {
          "kind": "js",
          "name": "unarchiveIconName",
          "declaration": {
            "name": "unarchiveIconName",
            "module": "./shapes/unarchive.js"
          }
        },
        {
          "kind": "js",
          "name": "uninstallIcon",
          "declaration": {
            "name": "uninstallIcon",
            "module": "./shapes/uninstall.js"
          }
        },
        {
          "kind": "js",
          "name": "uninstallIconName",
          "declaration": {
            "name": "uninstallIconName",
            "module": "./shapes/uninstall.js"
          }
        },
        {
          "kind": "js",
          "name": "unlinkIcon",
          "declaration": {
            "name": "unlinkIcon",
            "module": "./shapes/unlink.js"
          }
        },
        {
          "kind": "js",
          "name": "unlinkIconName",
          "declaration": {
            "name": "unlinkIconName",
            "module": "./shapes/unlink.js"
          }
        },
        {
          "kind": "js",
          "name": "uploadCloudIcon",
          "declaration": {
            "name": "uploadCloudIcon",
            "module": "./shapes/upload-cloud.js"
          }
        },
        {
          "kind": "js",
          "name": "uploadCloudIconName",
          "declaration": {
            "name": "uploadCloudIconName",
            "module": "./shapes/upload-cloud.js"
          }
        },
        {
          "kind": "js",
          "name": "usbIcon",
          "declaration": {
            "name": "usbIcon",
            "module": "./shapes/usb.js"
          }
        },
        {
          "kind": "js",
          "name": "usbIconName",
          "declaration": {
            "name": "usbIconName",
            "module": "./shapes/usb.js"
          }
        },
        {
          "kind": "js",
          "name": "vmIcon",
          "declaration": {
            "name": "vmIcon",
            "module": "./shapes/vm.js"
          }
        },
        {
          "kind": "js",
          "name": "vmIconName",
          "declaration": {
            "name": "vmIconName",
            "module": "./shapes/vm.js"
          }
        },
        {
          "kind": "js",
          "name": "vmwAppIcon",
          "declaration": {
            "name": "vmwAppIcon",
            "module": "./shapes/vmw-app.js"
          }
        },
        {
          "kind": "js",
          "name": "vmwAppIconName",
          "declaration": {
            "name": "vmwAppIconName",
            "module": "./shapes/vmw-app.js"
          }
        },
        {
          "kind": "js",
          "name": "wifiIcon",
          "declaration": {
            "name": "wifiIcon",
            "module": "./shapes/wifi.js"
          }
        },
        {
          "kind": "js",
          "name": "wifiIconName",
          "declaration": {
            "name": "wifiIconName",
            "module": "./shapes/wifi.js"
          }
        },
        {
          "kind": "js",
          "name": "bookmarkIcon",
          "declaration": {
            "name": "bookmarkIcon",
            "module": "./shapes/bookmark.js"
          }
        },
        {
          "kind": "js",
          "name": "bookmarkIconName",
          "declaration": {
            "name": "bookmarkIconName",
            "module": "./shapes/bookmark.js"
          }
        },
        {
          "kind": "js",
          "name": "chatBubbleIcon",
          "declaration": {
            "name": "chatBubbleIcon",
            "module": "./shapes/chat-bubble.js"
          }
        },
        {
          "kind": "js",
          "name": "chatBubbleIconName",
          "declaration": {
            "name": "chatBubbleIconName",
            "module": "./shapes/chat-bubble.js"
          }
        },
        {
          "kind": "js",
          "name": "contractIcon",
          "declaration": {
            "name": "contractIcon",
            "module": "./shapes/contract.js"
          }
        },
        {
          "kind": "js",
          "name": "contractIconName",
          "declaration": {
            "name": "contractIconName",
            "module": "./shapes/contract.js"
          }
        },
        {
          "kind": "js",
          "name": "crownIcon",
          "declaration": {
            "name": "crownIcon",
            "module": "./shapes/crown.js"
          }
        },
        {
          "kind": "js",
          "name": "crownIconName",
          "declaration": {
            "name": "crownIconName",
            "module": "./shapes/crown.js"
          }
        },
        {
          "kind": "js",
          "name": "envelopeIcon",
          "declaration": {
            "name": "envelopeIcon",
            "module": "./shapes/envelope.js"
          }
        },
        {
          "kind": "js",
          "name": "envelopeIconName",
          "declaration": {
            "name": "envelopeIconName",
            "module": "./shapes/envelope.js"
          }
        },
        {
          "kind": "js",
          "name": "flagIcon",
          "declaration": {
            "name": "flagIcon",
            "module": "./shapes/flag.js"
          }
        },
        {
          "kind": "js",
          "name": "flagIconName",
          "declaration": {
            "name": "flagIconName",
            "module": "./shapes/flag.js"
          }
        },
        {
          "kind": "js",
          "name": "halfStarIcon",
          "declaration": {
            "name": "halfStarIcon",
            "module": "./shapes/half-star.js"
          }
        },
        {
          "kind": "js",
          "name": "halfStarIconName",
          "declaration": {
            "name": "halfStarIconName",
            "module": "./shapes/half-star.js"
          }
        },
        {
          "kind": "js",
          "name": "happyFaceIcon",
          "declaration": {
            "name": "happyFaceIcon",
            "module": "./shapes/happy-face.js"
          }
        },
        {
          "kind": "js",
          "name": "happyFaceIconName",
          "declaration": {
            "name": "happyFaceIconName",
            "module": "./shapes/happy-face.js"
          }
        },
        {
          "kind": "js",
          "name": "hashtagIcon",
          "declaration": {
            "name": "hashtagIcon",
            "module": "./shapes/hashtag.js"
          }
        },
        {
          "kind": "js",
          "name": "hashtagIconName",
          "declaration": {
            "name": "hashtagIconName",
            "module": "./shapes/hashtag.js"
          }
        },
        {
          "kind": "js",
          "name": "heartIcon",
          "declaration": {
            "name": "heartIcon",
            "module": "./shapes/heart.js"
          }
        },
        {
          "kind": "js",
          "name": "heartIconName",
          "declaration": {
            "name": "heartIconName",
            "module": "./shapes/heart.js"
          }
        },
        {
          "kind": "js",
          "name": "heartBrokenIcon",
          "declaration": {
            "name": "heartBrokenIcon",
            "module": "./shapes/heart-broken.js"
          }
        },
        {
          "kind": "js",
          "name": "heartBrokenIconName",
          "declaration": {
            "name": "heartBrokenIconName",
            "module": "./shapes/heart-broken.js"
          }
        },
        {
          "kind": "js",
          "name": "inboxIcon",
          "declaration": {
            "name": "inboxIcon",
            "module": "./shapes/inbox.js"
          }
        },
        {
          "kind": "js",
          "name": "inboxIconName",
          "declaration": {
            "name": "inboxIconName",
            "module": "./shapes/inbox.js"
          }
        },
        {
          "kind": "js",
          "name": "neutralFaceIcon",
          "declaration": {
            "name": "neutralFaceIcon",
            "module": "./shapes/neutral-face.js"
          }
        },
        {
          "kind": "js",
          "name": "neutralFaceIconName",
          "declaration": {
            "name": "neutralFaceIconName",
            "module": "./shapes/neutral-face.js"
          }
        },
        {
          "kind": "js",
          "name": "pictureIcon",
          "declaration": {
            "name": "pictureIcon",
            "module": "./shapes/picture.js"
          }
        },
        {
          "kind": "js",
          "name": "pictureIconName",
          "declaration": {
            "name": "pictureIconName",
            "module": "./shapes/picture.js"
          }
        },
        {
          "kind": "js",
          "name": "sadFaceIcon",
          "declaration": {
            "name": "sadFaceIcon",
            "module": "./shapes/sad-face.js"
          }
        },
        {
          "kind": "js",
          "name": "sadFaceIconName",
          "declaration": {
            "name": "sadFaceIconName",
            "module": "./shapes/sad-face.js"
          }
        },
        {
          "kind": "js",
          "name": "shareIcon",
          "declaration": {
            "name": "shareIcon",
            "module": "./shapes/share.js"
          }
        },
        {
          "kind": "js",
          "name": "shareIconName",
          "declaration": {
            "name": "shareIconName",
            "module": "./shapes/share.js"
          }
        },
        {
          "kind": "js",
          "name": "starIcon",
          "declaration": {
            "name": "starIcon",
            "module": "./shapes/star.js"
          }
        },
        {
          "kind": "js",
          "name": "starIconName",
          "declaration": {
            "name": "starIconName",
            "module": "./shapes/star.js"
          }
        },
        {
          "kind": "js",
          "name": "talkBubblesIcon",
          "declaration": {
            "name": "talkBubblesIcon",
            "module": "./shapes/talk-bubbles.js"
          }
        },
        {
          "kind": "js",
          "name": "talkBubblesIconName",
          "declaration": {
            "name": "talkBubblesIconName",
            "module": "./shapes/talk-bubbles.js"
          }
        },
        {
          "kind": "js",
          "name": "tasksIcon",
          "declaration": {
            "name": "tasksIcon",
            "module": "./shapes/tasks.js"
          }
        },
        {
          "kind": "js",
          "name": "tasksIconName",
          "declaration": {
            "name": "tasksIconName",
            "module": "./shapes/tasks.js"
          }
        },
        {
          "kind": "js",
          "name": "thumbsDownIcon",
          "declaration": {
            "name": "thumbsDownIcon",
            "module": "./shapes/thumbs-down.js"
          }
        },
        {
          "kind": "js",
          "name": "thumbsDownIconName",
          "declaration": {
            "name": "thumbsDownIconName",
            "module": "./shapes/thumbs-down.js"
          }
        },
        {
          "kind": "js",
          "name": "thumbsUpIcon",
          "declaration": {
            "name": "thumbsUpIcon",
            "module": "./shapes/thumbs-up.js"
          }
        },
        {
          "kind": "js",
          "name": "thumbsUpIconName",
          "declaration": {
            "name": "thumbsUpIconName",
            "module": "./shapes/thumbs-up.js"
          }
        },
        {
          "kind": "js",
          "name": "alignBottomIcon",
          "declaration": {
            "name": "alignBottomIcon",
            "module": "./shapes/align-bottom.js"
          }
        },
        {
          "kind": "js",
          "name": "alignBottomIconName",
          "declaration": {
            "name": "alignBottomIconName",
            "module": "./shapes/align-bottom.js"
          }
        },
        {
          "kind": "js",
          "name": "alignCenterIcon",
          "declaration": {
            "name": "alignCenterIcon",
            "module": "./shapes/align-center.js"
          }
        },
        {
          "kind": "js",
          "name": "alignCenterIconName",
          "declaration": {
            "name": "alignCenterIconName",
            "module": "./shapes/align-center.js"
          }
        },
        {
          "kind": "js",
          "name": "alignLeftIcon",
          "declaration": {
            "name": "alignLeftIcon",
            "module": "./shapes/align-left.js"
          }
        },
        {
          "kind": "js",
          "name": "alignLeftIconName",
          "declaration": {
            "name": "alignLeftIconName",
            "module": "./shapes/align-left.js"
          }
        },
        {
          "kind": "js",
          "name": "alignLeftTextIcon",
          "declaration": {
            "name": "alignLeftTextIcon",
            "module": "./shapes/align-left-text.js"
          }
        },
        {
          "kind": "js",
          "name": "alignLeftTextIconName",
          "declaration": {
            "name": "alignLeftTextIconName",
            "module": "./shapes/align-left-text.js"
          }
        },
        {
          "kind": "js",
          "name": "alignMiddleIcon",
          "declaration": {
            "name": "alignMiddleIcon",
            "module": "./shapes/align-middle.js"
          }
        },
        {
          "kind": "js",
          "name": "alignMiddleIconName",
          "declaration": {
            "name": "alignMiddleIconName",
            "module": "./shapes/align-middle.js"
          }
        },
        {
          "kind": "js",
          "name": "alignRightIcon",
          "declaration": {
            "name": "alignRightIcon",
            "module": "./shapes/align-right.js"
          }
        },
        {
          "kind": "js",
          "name": "alignRightIconName",
          "declaration": {
            "name": "alignRightIconName",
            "module": "./shapes/align-right.js"
          }
        },
        {
          "kind": "js",
          "name": "alignRightTextIcon",
          "declaration": {
            "name": "alignRightTextIcon",
            "module": "./shapes/align-right-text.js"
          }
        },
        {
          "kind": "js",
          "name": "alignRightTextIconName",
          "declaration": {
            "name": "alignRightTextIconName",
            "module": "./shapes/align-right-text.js"
          }
        },
        {
          "kind": "js",
          "name": "alignTopIcon",
          "declaration": {
            "name": "alignTopIcon",
            "module": "./shapes/align-top.js"
          }
        },
        {
          "kind": "js",
          "name": "alignTopIconName",
          "declaration": {
            "name": "alignTopIconName",
            "module": "./shapes/align-top.js"
          }
        },
        {
          "kind": "js",
          "name": "blockQuoteIcon",
          "declaration": {
            "name": "blockQuoteIcon",
            "module": "./shapes/block-quote.js"
          }
        },
        {
          "kind": "js",
          "name": "blockQuoteIconName",
          "declaration": {
            "name": "blockQuoteIconName",
            "module": "./shapes/block-quote.js"
          }
        },
        {
          "kind": "js",
          "name": "boldIcon",
          "declaration": {
            "name": "boldIcon",
            "module": "./shapes/bold.js"
          }
        },
        {
          "kind": "js",
          "name": "boldIconName",
          "declaration": {
            "name": "boldIconName",
            "module": "./shapes/bold.js"
          }
        },
        {
          "kind": "js",
          "name": "bulletListIcon",
          "declaration": {
            "name": "bulletListIcon",
            "module": "./shapes/bullet-list.js"
          }
        },
        {
          "kind": "js",
          "name": "bulletListIconName",
          "declaration": {
            "name": "bulletListIconName",
            "module": "./shapes/bullet-list.js"
          }
        },
        {
          "kind": "js",
          "name": "centerTextIcon",
          "declaration": {
            "name": "centerTextIcon",
            "module": "./shapes/center-text.js"
          }
        },
        {
          "kind": "js",
          "name": "centerTextIconName",
          "declaration": {
            "name": "centerTextIconName",
            "module": "./shapes/center-text.js"
          }
        },
        {
          "kind": "js",
          "name": "checkboxListIcon",
          "declaration": {
            "name": "checkboxListIcon",
            "module": "./shapes/checkbox-list.js"
          }
        },
        {
          "kind": "js",
          "name": "checkboxListIconName",
          "declaration": {
            "name": "checkboxListIconName",
            "module": "./shapes/checkbox-list.js"
          }
        },
        {
          "kind": "js",
          "name": "fontSizeIcon",
          "declaration": {
            "name": "fontSizeIcon",
            "module": "./shapes/font-size.js"
          }
        },
        {
          "kind": "js",
          "name": "fontSizeIconName",
          "declaration": {
            "name": "fontSizeIconName",
            "module": "./shapes/font-size.js"
          }
        },
        {
          "kind": "js",
          "name": "highlighterIcon",
          "declaration": {
            "name": "highlighterIcon",
            "module": "./shapes/highlighter.js"
          }
        },
        {
          "kind": "js",
          "name": "highlighterIconName",
          "declaration": {
            "name": "highlighterIconName",
            "module": "./shapes/highlighter.js"
          }
        },
        {
          "kind": "js",
          "name": "indentIcon",
          "declaration": {
            "name": "indentIcon",
            "module": "./shapes/indent.js"
          }
        },
        {
          "kind": "js",
          "name": "indentIconName",
          "declaration": {
            "name": "indentIconName",
            "module": "./shapes/indent.js"
          }
        },
        {
          "kind": "js",
          "name": "italicIcon",
          "declaration": {
            "name": "italicIcon",
            "module": "./shapes/italic.js"
          }
        },
        {
          "kind": "js",
          "name": "italicIconName",
          "declaration": {
            "name": "italicIconName",
            "module": "./shapes/italic.js"
          }
        },
        {
          "kind": "js",
          "name": "justifyTextIcon",
          "declaration": {
            "name": "justifyTextIcon",
            "module": "./shapes/justify-text.js"
          }
        },
        {
          "kind": "js",
          "name": "justifyTextIconName",
          "declaration": {
            "name": "justifyTextIconName",
            "module": "./shapes/justify-text.js"
          }
        },
        {
          "kind": "js",
          "name": "languageIcon",
          "declaration": {
            "name": "languageIcon",
            "module": "./shapes/language.js"
          }
        },
        {
          "kind": "js",
          "name": "languageIconName",
          "declaration": {
            "name": "languageIconName",
            "module": "./shapes/language.js"
          }
        },
        {
          "kind": "js",
          "name": "numberListIcon",
          "declaration": {
            "name": "numberListIcon",
            "module": "./shapes/number-list.js"
          }
        },
        {
          "kind": "js",
          "name": "numberListIconName",
          "declaration": {
            "name": "numberListIconName",
            "module": "./shapes/number-list.js"
          }
        },
        {
          "kind": "js",
          "name": "outdentIcon",
          "declaration": {
            "name": "outdentIcon",
            "module": "./shapes/outdent.js"
          }
        },
        {
          "kind": "js",
          "name": "outdentIconName",
          "declaration": {
            "name": "outdentIconName",
            "module": "./shapes/outdent.js"
          }
        },
        {
          "kind": "js",
          "name": "paintRollerIcon",
          "declaration": {
            "name": "paintRollerIcon",
            "module": "./shapes/paint-roller.js"
          }
        },
        {
          "kind": "js",
          "name": "paintRollerIconName",
          "declaration": {
            "name": "paintRollerIconName",
            "module": "./shapes/paint-roller.js"
          }
        },
        {
          "kind": "js",
          "name": "strikethroughIcon",
          "declaration": {
            "name": "strikethroughIcon",
            "module": "./shapes/strikethrough.js"
          }
        },
        {
          "kind": "js",
          "name": "strikethroughIconName",
          "declaration": {
            "name": "strikethroughIconName",
            "module": "./shapes/strikethrough.js"
          }
        },
        {
          "kind": "js",
          "name": "subscriptIcon",
          "declaration": {
            "name": "subscriptIcon",
            "module": "./shapes/subscript.js"
          }
        },
        {
          "kind": "js",
          "name": "subscriptIconName",
          "declaration": {
            "name": "subscriptIconName",
            "module": "./shapes/subscript.js"
          }
        },
        {
          "kind": "js",
          "name": "superscriptIcon",
          "declaration": {
            "name": "superscriptIcon",
            "module": "./shapes/superscript.js"
          }
        },
        {
          "kind": "js",
          "name": "superscriptIconName",
          "declaration": {
            "name": "superscriptIconName",
            "module": "./shapes/superscript.js"
          }
        },
        {
          "kind": "js",
          "name": "textIcon",
          "declaration": {
            "name": "textIcon",
            "module": "./shapes/text.js"
          }
        },
        {
          "kind": "js",
          "name": "textIconName",
          "declaration": {
            "name": "textIconName",
            "module": "./shapes/text.js"
          }
        },
        {
          "kind": "js",
          "name": "textColorIcon",
          "declaration": {
            "name": "textColorIcon",
            "module": "./shapes/text-color.js"
          }
        },
        {
          "kind": "js",
          "name": "textColorIconName",
          "declaration": {
            "name": "textColorIconName",
            "module": "./shapes/text-color.js"
          }
        },
        {
          "kind": "js",
          "name": "underlineIcon",
          "declaration": {
            "name": "underlineIcon",
            "module": "./shapes/underline.js"
          }
        },
        {
          "kind": "js",
          "name": "underlineIconName",
          "declaration": {
            "name": "underlineIconName",
            "module": "./shapes/underline.js"
          }
        },
        {
          "kind": "js",
          "name": "airplaneIcon",
          "declaration": {
            "name": "airplaneIcon",
            "module": "./shapes/airplane.js"
          }
        },
        {
          "kind": "js",
          "name": "airplaneIconName",
          "declaration": {
            "name": "airplaneIconName",
            "module": "./shapes/airplane.js"
          }
        },
        {
          "kind": "js",
          "name": "bicycleIcon",
          "declaration": {
            "name": "bicycleIcon",
            "module": "./shapes/bicycle.js"
          }
        },
        {
          "kind": "js",
          "name": "bicycleIconName",
          "declaration": {
            "name": "bicycleIconName",
            "module": "./shapes/bicycle.js"
          }
        },
        {
          "kind": "js",
          "name": "boatIcon",
          "declaration": {
            "name": "boatIcon",
            "module": "./shapes/boat.js"
          }
        },
        {
          "kind": "js",
          "name": "boatIconName",
          "declaration": {
            "name": "boatIconName",
            "module": "./shapes/boat.js"
          }
        },
        {
          "kind": "js",
          "name": "campervanIcon",
          "declaration": {
            "name": "campervanIcon",
            "module": "./shapes/campervan.js"
          }
        },
        {
          "kind": "js",
          "name": "campervanIconName",
          "declaration": {
            "name": "campervanIconName",
            "module": "./shapes/campervan.js"
          }
        },
        {
          "kind": "js",
          "name": "carIcon",
          "declaration": {
            "name": "carIcon",
            "module": "./shapes/car.js"
          }
        },
        {
          "kind": "js",
          "name": "carIconName",
          "declaration": {
            "name": "carIconName",
            "module": "./shapes/car.js"
          }
        },
        {
          "kind": "js",
          "name": "caravanIcon",
          "declaration": {
            "name": "caravanIcon",
            "module": "./shapes/caravan.js"
          }
        },
        {
          "kind": "js",
          "name": "caravanIconName",
          "declaration": {
            "name": "caravanIconName",
            "module": "./shapes/caravan.js"
          }
        },
        {
          "kind": "js",
          "name": "compassIcon",
          "declaration": {
            "name": "compassIcon",
            "module": "./shapes/compass.js"
          }
        },
        {
          "kind": "js",
          "name": "compassIconName",
          "declaration": {
            "name": "compassIconName",
            "module": "./shapes/compass.js"
          }
        },
        {
          "kind": "js",
          "name": "ferryIcon",
          "declaration": {
            "name": "ferryIcon",
            "module": "./shapes/ferry.js"
          }
        },
        {
          "kind": "js",
          "name": "ferryIconName",
          "declaration": {
            "name": "ferryIconName",
            "module": "./shapes/ferry.js"
          }
        },
        {
          "kind": "js",
          "name": "mapIcon",
          "declaration": {
            "name": "mapIcon",
            "module": "./shapes/map.js"
          }
        },
        {
          "kind": "js",
          "name": "mapIconName",
          "declaration": {
            "name": "mapIconName",
            "module": "./shapes/map.js"
          }
        },
        {
          "kind": "js",
          "name": "mapMarkerIcon",
          "declaration": {
            "name": "mapMarkerIcon",
            "module": "./shapes/map-marker.js"
          }
        },
        {
          "kind": "js",
          "name": "mapMarkerIconName",
          "declaration": {
            "name": "mapMarkerIconName",
            "module": "./shapes/map-marker.js"
          }
        },
        {
          "kind": "js",
          "name": "onHolidayIcon",
          "declaration": {
            "name": "onHolidayIcon",
            "module": "./shapes/on-holiday.js"
          }
        },
        {
          "kind": "js",
          "name": "onHolidayIconName",
          "declaration": {
            "name": "onHolidayIconName",
            "module": "./shapes/on-holiday.js"
          }
        },
        {
          "kind": "js",
          "name": "trailerIcon",
          "declaration": {
            "name": "trailerIcon",
            "module": "./shapes/trailer.js"
          }
        },
        {
          "kind": "js",
          "name": "trailerIconName",
          "declaration": {
            "name": "trailerIconName",
            "module": "./shapes/trailer.js"
          }
        },
        {
          "kind": "js",
          "name": "truckIcon",
          "declaration": {
            "name": "truckIcon",
            "module": "./shapes/truck.js"
          }
        },
        {
          "kind": "js",
          "name": "truckIconName",
          "declaration": {
            "name": "truckIconName",
            "module": "./shapes/truck.js"
          }
        },
        {
          "kind": "js",
          "name": "loadChartIconSet",
          "declaration": {
            "name": "loadChartIconSet",
            "module": "./collections/chart.js"
          }
        },
        {
          "kind": "js",
          "name": "chartCollectionIcons",
          "declaration": {
            "name": "chartCollectionIcons",
            "module": "./collections/chart.js"
          }
        },
        {
          "kind": "js",
          "name": "chartCollectionAliases",
          "declaration": {
            "name": "chartCollectionAliases",
            "module": "./collections/chart.js"
          }
        },
        {
          "kind": "js",
          "name": "loadCommerceIconSet",
          "declaration": {
            "name": "loadCommerceIconSet",
            "module": "./collections/commerce.js"
          }
        },
        {
          "kind": "js",
          "name": "commerceCollectionIcons",
          "declaration": {
            "name": "commerceCollectionIcons",
            "module": "./collections/commerce.js"
          }
        },
        {
          "kind": "js",
          "name": "commerceCollectionAliases",
          "declaration": {
            "name": "commerceCollectionAliases",
            "module": "./collections/commerce.js"
          }
        },
        {
          "kind": "js",
          "name": "loadCoreIconSet",
          "declaration": {
            "name": "loadCoreIconSet",
            "module": "./collections/core.js"
          }
        },
        {
          "kind": "js",
          "name": "coreCollectionIcons",
          "declaration": {
            "name": "coreCollectionIcons",
            "module": "./collections/core.js"
          }
        },
        {
          "kind": "js",
          "name": "coreCollectionAliases",
          "declaration": {
            "name": "coreCollectionAliases",
            "module": "./collections/core.js"
          }
        },
        {
          "kind": "js",
          "name": "loadEssentialIconSet",
          "declaration": {
            "name": "loadEssentialIconSet",
            "module": "./collections/essential.js"
          }
        },
        {
          "kind": "js",
          "name": "essentialCollectionIcons",
          "declaration": {
            "name": "essentialCollectionIcons",
            "module": "./collections/essential.js"
          }
        },
        {
          "kind": "js",
          "name": "essentialCollectionAliases",
          "declaration": {
            "name": "essentialCollectionAliases",
            "module": "./collections/essential.js"
          }
        },
        {
          "kind": "js",
          "name": "loadMediaIconSet",
          "declaration": {
            "name": "loadMediaIconSet",
            "module": "./collections/media.js"
          }
        },
        {
          "kind": "js",
          "name": "mediaCollectionIcons",
          "declaration": {
            "name": "mediaCollectionIcons",
            "module": "./collections/media.js"
          }
        },
        {
          "kind": "js",
          "name": "mediaCollectionAliases",
          "declaration": {
            "name": "mediaCollectionAliases",
            "module": "./collections/media.js"
          }
        },
        {
          "kind": "js",
          "name": "loadMiniIconSet",
          "declaration": {
            "name": "loadMiniIconSet",
            "module": "./collections/mini.js"
          }
        },
        {
          "kind": "js",
          "name": "miniCollectionIcons",
          "declaration": {
            "name": "miniCollectionIcons",
            "module": "./collections/mini.js"
          }
        },
        {
          "kind": "js",
          "name": "miniCollectionAliases",
          "declaration": {
            "name": "miniCollectionAliases",
            "module": "./collections/mini.js"
          }
        },
        {
          "kind": "js",
          "name": "loadTechnologyIconSet",
          "declaration": {
            "name": "loadTechnologyIconSet",
            "module": "./collections/technology.js"
          }
        },
        {
          "kind": "js",
          "name": "technologyCollectionIcons",
          "declaration": {
            "name": "technologyCollectionIcons",
            "module": "./collections/technology.js"
          }
        },
        {
          "kind": "js",
          "name": "technologyCollectionAliases",
          "declaration": {
            "name": "technologyCollectionAliases",
            "module": "./collections/technology.js"
          }
        },
        {
          "kind": "js",
          "name": "loadSocialIconSet",
          "declaration": {
            "name": "loadSocialIconSet",
            "module": "./collections/social.js"
          }
        },
        {
          "kind": "js",
          "name": "socialCollectionIcons",
          "declaration": {
            "name": "socialCollectionIcons",
            "module": "./collections/social.js"
          }
        },
        {
          "kind": "js",
          "name": "socialCollectionAliases",
          "declaration": {
            "name": "socialCollectionAliases",
            "module": "./collections/social.js"
          }
        },
        {
          "kind": "js",
          "name": "loadTextEditIconSet",
          "declaration": {
            "name": "loadTextEditIconSet",
            "module": "./collections/text-edit.js"
          }
        },
        {
          "kind": "js",
          "name": "textEditCollectionIcons",
          "declaration": {
            "name": "textEditCollectionIcons",
            "module": "./collections/text-edit.js"
          }
        },
        {
          "kind": "js",
          "name": "textEditCollectionAliases",
          "declaration": {
            "name": "textEditCollectionAliases",
            "module": "./collections/text-edit.js"
          }
        },
        {
          "kind": "js",
          "name": "loadTravelIconSet",
          "declaration": {
            "name": "loadTravelIconSet",
            "module": "./collections/travel.js"
          }
        },
        {
          "kind": "js",
          "name": "travelCollectionIcons",
          "declaration": {
            "name": "travelCollectionIcons",
            "module": "./collections/travel.js"
          }
        },
        {
          "kind": "js",
          "name": "travelCollectionAliases",
          "declaration": {
            "name": "travelCollectionAliases",
            "module": "./collections/travel.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/interfaces/icon.interfaces.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "icon/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/accessibility-1.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "accessibility1IconName",
          "type": {
            "text": "string"
          },
          "default": "'accessibility-1'"
        },
        {
          "kind": "variable",
          "name": "accessibility1Icon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[accessibility1IconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "accessibility1IconName",
          "declaration": {
            "name": "accessibility1IconName",
            "module": "icon/shapes/accessibility-1.js"
          }
        },
        {
          "kind": "js",
          "name": "accessibility1Icon",
          "declaration": {
            "name": "accessibility1Icon",
            "module": "icon/shapes/accessibility-1.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/accessibility-2.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "accessibility2IconName",
          "type": {
            "text": "string"
          },
          "default": "'accessibility-2'"
        },
        {
          "kind": "variable",
          "name": "accessibility2Icon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[accessibility2IconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "accessibility2IconName",
          "declaration": {
            "name": "accessibility2IconName",
            "module": "icon/shapes/accessibility-2.js"
          }
        },
        {
          "kind": "js",
          "name": "accessibility2Icon",
          "declaration": {
            "name": "accessibility2Icon",
            "module": "icon/shapes/accessibility-2.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/add-text.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "addTextIconName",
          "type": {
            "text": "string"
          },
          "default": "'add-text'"
        },
        {
          "kind": "variable",
          "name": "addTextIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[addTextIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "addTextIconName",
          "declaration": {
            "name": "addTextIconName",
            "module": "icon/shapes/add-text.js"
          }
        },
        {
          "kind": "js",
          "name": "addTextIcon",
          "declaration": {
            "name": "addTextIcon",
            "module": "icon/shapes/add-text.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/administrator.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "administratorIconName",
          "type": {
            "text": "string"
          },
          "default": "'administrator'"
        },
        {
          "kind": "variable",
          "name": "administratorIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[administratorIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "administratorIconName",
          "declaration": {
            "name": "administratorIconName",
            "module": "icon/shapes/administrator.js"
          }
        },
        {
          "kind": "js",
          "name": "administratorIcon",
          "declaration": {
            "name": "administratorIcon",
            "module": "icon/shapes/administrator.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/airplane.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "airplaneIconName",
          "type": {
            "text": "string"
          },
          "default": "'airplane'"
        },
        {
          "kind": "variable",
          "name": "airplaneIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[airplaneIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "airplaneIconName",
          "declaration": {
            "name": "airplaneIconName",
            "module": "icon/shapes/airplane.js"
          }
        },
        {
          "kind": "js",
          "name": "airplaneIcon",
          "declaration": {
            "name": "airplaneIcon",
            "module": "icon/shapes/airplane.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/alarm-clock.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "alarmClockIconName",
          "type": {
            "text": "string"
          },
          "default": "'alarm-clock'"
        },
        {
          "kind": "variable",
          "name": "alarmClockIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[alarmClockIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "alarmClockIconName",
          "declaration": {
            "name": "alarmClockIconName",
            "module": "icon/shapes/alarm-clock.js"
          }
        },
        {
          "kind": "js",
          "name": "alarmClockIcon",
          "declaration": {
            "name": "alarmClockIcon",
            "module": "icon/shapes/alarm-clock.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/alarm-off.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "alarmOffIconName",
          "type": {
            "text": "string"
          },
          "default": "'alarm-off'"
        },
        {
          "kind": "variable",
          "name": "alarmOffIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[alarmOffIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "alarmOffIconName",
          "declaration": {
            "name": "alarmOffIconName",
            "module": "icon/shapes/alarm-off.js"
          }
        },
        {
          "kind": "js",
          "name": "alarmOffIcon",
          "declaration": {
            "name": "alarmOffIcon",
            "module": "icon/shapes/alarm-off.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/align-bottom.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "alignBottomIconName",
          "type": {
            "text": "string"
          },
          "default": "'align-bottom'"
        },
        {
          "kind": "variable",
          "name": "alignBottomIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[alignBottomIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "alignBottomIconName",
          "declaration": {
            "name": "alignBottomIconName",
            "module": "icon/shapes/align-bottom.js"
          }
        },
        {
          "kind": "js",
          "name": "alignBottomIcon",
          "declaration": {
            "name": "alignBottomIcon",
            "module": "icon/shapes/align-bottom.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/align-center.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "alignCenterIconName",
          "type": {
            "text": "string"
          },
          "default": "'align-center'"
        },
        {
          "kind": "variable",
          "name": "alignCenterIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[alignCenterIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "alignCenterIconName",
          "declaration": {
            "name": "alignCenterIconName",
            "module": "icon/shapes/align-center.js"
          }
        },
        {
          "kind": "js",
          "name": "alignCenterIcon",
          "declaration": {
            "name": "alignCenterIcon",
            "module": "icon/shapes/align-center.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/align-left-text.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "alignLeftTextIconName",
          "type": {
            "text": "string"
          },
          "default": "'align-left-text'"
        },
        {
          "kind": "variable",
          "name": "alignLeftTextIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[alignLeftTextIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "alignLeftTextIconName",
          "declaration": {
            "name": "alignLeftTextIconName",
            "module": "icon/shapes/align-left-text.js"
          }
        },
        {
          "kind": "js",
          "name": "alignLeftTextIcon",
          "declaration": {
            "name": "alignLeftTextIcon",
            "module": "icon/shapes/align-left-text.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/align-left.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "alignLeftIconName",
          "type": {
            "text": "string"
          },
          "default": "'align-left'"
        },
        {
          "kind": "variable",
          "name": "alignLeftIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[alignLeftIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "alignLeftIconName",
          "declaration": {
            "name": "alignLeftIconName",
            "module": "icon/shapes/align-left.js"
          }
        },
        {
          "kind": "js",
          "name": "alignLeftIcon",
          "declaration": {
            "name": "alignLeftIcon",
            "module": "icon/shapes/align-left.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/align-middle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "alignMiddleIconName",
          "type": {
            "text": "string"
          },
          "default": "'align-middle'"
        },
        {
          "kind": "variable",
          "name": "alignMiddleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[alignMiddleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "alignMiddleIconName",
          "declaration": {
            "name": "alignMiddleIconName",
            "module": "icon/shapes/align-middle.js"
          }
        },
        {
          "kind": "js",
          "name": "alignMiddleIcon",
          "declaration": {
            "name": "alignMiddleIcon",
            "module": "icon/shapes/align-middle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/align-right-text.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "alignRightTextIconName",
          "type": {
            "text": "string"
          },
          "default": "'align-right-text'"
        },
        {
          "kind": "variable",
          "name": "alignRightTextIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[alignRightTextIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "alignRightTextIconName",
          "declaration": {
            "name": "alignRightTextIconName",
            "module": "icon/shapes/align-right-text.js"
          }
        },
        {
          "kind": "js",
          "name": "alignRightTextIcon",
          "declaration": {
            "name": "alignRightTextIcon",
            "module": "icon/shapes/align-right-text.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/align-right.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "alignRightIconName",
          "type": {
            "text": "string"
          },
          "default": "'align-right'"
        },
        {
          "kind": "variable",
          "name": "alignRightIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[alignRightIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "alignRightIconName",
          "declaration": {
            "name": "alignRightIconName",
            "module": "icon/shapes/align-right.js"
          }
        },
        {
          "kind": "js",
          "name": "alignRightIcon",
          "declaration": {
            "name": "alignRightIcon",
            "module": "icon/shapes/align-right.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/align-top.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "alignTopIconName",
          "type": {
            "text": "string"
          },
          "default": "'align-top'"
        },
        {
          "kind": "variable",
          "name": "alignTopIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[alignTopIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "alignTopIconName",
          "declaration": {
            "name": "alignTopIconName",
            "module": "icon/shapes/align-top.js"
          }
        },
        {
          "kind": "js",
          "name": "alignTopIcon",
          "declaration": {
            "name": "alignTopIcon",
            "module": "icon/shapes/align-top.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/angle-double.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "angleDoubleIconName",
          "type": {
            "text": "string"
          },
          "default": "'angle-double'"
        },
        {
          "kind": "variable",
          "name": "angleDoubleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[angleDoubleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "angleDoubleIconName",
          "declaration": {
            "name": "angleDoubleIconName",
            "module": "icon/shapes/angle-double.js"
          }
        },
        {
          "kind": "js",
          "name": "angleDoubleIcon",
          "declaration": {
            "name": "angleDoubleIcon",
            "module": "icon/shapes/angle-double.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/angle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "angleIconName",
          "type": {
            "text": "string"
          },
          "default": "'angle'"
        },
        {
          "kind": "variable",
          "name": "angleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[angleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "angleIconName",
          "declaration": {
            "name": "angleIconName",
            "module": "icon/shapes/angle.js"
          }
        },
        {
          "kind": "js",
          "name": "angleIcon",
          "declaration": {
            "name": "angleIcon",
            "module": "icon/shapes/angle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/animation.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "animationIconName",
          "type": {
            "text": "string"
          },
          "default": "'animation'"
        },
        {
          "kind": "variable",
          "name": "animationIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[animationIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "animationIconName",
          "declaration": {
            "name": "animationIconName",
            "module": "icon/shapes/animation.js"
          }
        },
        {
          "kind": "js",
          "name": "animationIcon",
          "declaration": {
            "name": "animationIcon",
            "module": "icon/shapes/animation.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/announcement.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "announcementIconName",
          "type": {
            "text": "string"
          },
          "default": "'announcement'"
        },
        {
          "kind": "variable",
          "name": "announcementIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[announcementIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "announcementIconName",
          "declaration": {
            "name": "announcementIconName",
            "module": "icon/shapes/announcement.js"
          }
        },
        {
          "kind": "js",
          "name": "announcementIcon",
          "declaration": {
            "name": "announcementIcon",
            "module": "icon/shapes/announcement.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/application.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "applicationIconName",
          "type": {
            "text": "string"
          },
          "default": "'application'"
        },
        {
          "kind": "variable",
          "name": "applicationIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[applicationIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "applicationIconName",
          "declaration": {
            "name": "applicationIconName",
            "module": "icon/shapes/application.js"
          }
        },
        {
          "kind": "js",
          "name": "applicationIcon",
          "declaration": {
            "name": "applicationIcon",
            "module": "icon/shapes/application.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/applications.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "applicationsIconName",
          "type": {
            "text": "string"
          },
          "default": "'applications'"
        },
        {
          "kind": "variable",
          "name": "applicationsIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[applicationsIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "applicationsIconName",
          "declaration": {
            "name": "applicationsIconName",
            "module": "icon/shapes/applications.js"
          }
        },
        {
          "kind": "js",
          "name": "applicationsIcon",
          "declaration": {
            "name": "applicationsIcon",
            "module": "icon/shapes/applications.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/archive.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "archiveIconName",
          "type": {
            "text": "string"
          },
          "default": "'archive'"
        },
        {
          "kind": "variable",
          "name": "archiveIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[archiveIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "archiveIconName",
          "declaration": {
            "name": "archiveIconName",
            "module": "icon/shapes/archive.js"
          }
        },
        {
          "kind": "js",
          "name": "archiveIcon",
          "declaration": {
            "name": "archiveIcon",
            "module": "icon/shapes/archive.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/arrow-mini.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "arrowMiniIconName",
          "type": {
            "text": "string"
          },
          "default": "'arrow-mini'"
        },
        {
          "kind": "variable",
          "name": "arrowMiniIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[arrowMiniIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "arrowMiniIconName",
          "declaration": {
            "name": "arrowMiniIconName",
            "module": "icon/shapes/arrow-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "arrowMiniIcon",
          "declaration": {
            "name": "arrowMiniIcon",
            "module": "icon/shapes/arrow-mini.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/arrow.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "arrowIconName",
          "type": {
            "text": "string"
          },
          "default": "'arrow'"
        },
        {
          "kind": "variable",
          "name": "arrowIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[arrowIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "arrowIconName",
          "declaration": {
            "name": "arrowIconName",
            "module": "icon/shapes/arrow.js"
          }
        },
        {
          "kind": "js",
          "name": "arrowIcon",
          "declaration": {
            "name": "arrowIcon",
            "module": "icon/shapes/arrow.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/assign-user.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "assignUserIconName",
          "type": {
            "text": "string"
          },
          "default": "'assign-user'"
        },
        {
          "kind": "variable",
          "name": "assignUserIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[assignUserIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "assignUserIconName",
          "declaration": {
            "name": "assignUserIconName",
            "module": "icon/shapes/assign-user.js"
          }
        },
        {
          "kind": "js",
          "name": "assignUserIcon",
          "declaration": {
            "name": "assignUserIcon",
            "module": "icon/shapes/assign-user.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/asterisk.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "asteriskIconName",
          "type": {
            "text": "string"
          },
          "default": "'asterisk'"
        },
        {
          "kind": "variable",
          "name": "asteriskIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[asteriskIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asteriskIconName",
          "declaration": {
            "name": "asteriskIconName",
            "module": "icon/shapes/asterisk.js"
          }
        },
        {
          "kind": "js",
          "name": "asteriskIcon",
          "declaration": {
            "name": "asteriskIcon",
            "module": "icon/shapes/asterisk.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/atom.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "atomIconName",
          "type": {
            "text": "string"
          },
          "default": "'atom'"
        },
        {
          "kind": "variable",
          "name": "atomIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[atomIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "atomIconName",
          "declaration": {
            "name": "atomIconName",
            "module": "icon/shapes/atom.js"
          }
        },
        {
          "kind": "js",
          "name": "atomIcon",
          "declaration": {
            "name": "atomIcon",
            "module": "icon/shapes/atom.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/axis-chart.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "axisChartIconName",
          "type": {
            "text": "string"
          },
          "default": "'axis-chart'"
        },
        {
          "kind": "variable",
          "name": "axisChartIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[axisChartIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "axisChartIconName",
          "declaration": {
            "name": "axisChartIconName",
            "module": "icon/shapes/axis-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "axisChartIcon",
          "declaration": {
            "name": "axisChartIcon",
            "module": "icon/shapes/axis-chart.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/backup-restore.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "backupRestoreIconName",
          "type": {
            "text": "string"
          },
          "default": "'backup-restore'"
        },
        {
          "kind": "variable",
          "name": "backupRestoreIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[backupRestoreIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "backupRestoreIconName",
          "declaration": {
            "name": "backupRestoreIconName",
            "module": "icon/shapes/backup-restore.js"
          }
        },
        {
          "kind": "js",
          "name": "backupRestoreIcon",
          "declaration": {
            "name": "backupRestoreIcon",
            "module": "icon/shapes/backup-restore.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/backup.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "backupIconName",
          "type": {
            "text": "string"
          },
          "default": "'backup'"
        },
        {
          "kind": "variable",
          "name": "backupIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[backupIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "backupIconName",
          "declaration": {
            "name": "backupIconName",
            "module": "icon/shapes/backup.js"
          }
        },
        {
          "kind": "js",
          "name": "backupIcon",
          "declaration": {
            "name": "backupIcon",
            "module": "icon/shapes/backup.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/balance.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "balanceIconName",
          "type": {
            "text": "string"
          },
          "default": "'balance'"
        },
        {
          "kind": "variable",
          "name": "balanceIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[balanceIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "balanceIconName",
          "declaration": {
            "name": "balanceIconName",
            "module": "icon/shapes/balance.js"
          }
        },
        {
          "kind": "js",
          "name": "balanceIcon",
          "declaration": {
            "name": "balanceIcon",
            "module": "icon/shapes/balance.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/ban.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "banIconName",
          "type": {
            "text": "string"
          },
          "default": "'ban'"
        },
        {
          "kind": "variable",
          "name": "banIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[banIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "banIconName",
          "declaration": {
            "name": "banIconName",
            "module": "icon/shapes/ban.js"
          }
        },
        {
          "kind": "js",
          "name": "banIcon",
          "declaration": {
            "name": "banIcon",
            "module": "icon/shapes/ban.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bank.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "bankIconName",
          "type": {
            "text": "string"
          },
          "default": "'bank'"
        },
        {
          "kind": "variable",
          "name": "bankIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[bankIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bankIconName",
          "declaration": {
            "name": "bankIconName",
            "module": "icon/shapes/bank.js"
          }
        },
        {
          "kind": "js",
          "name": "bankIcon",
          "declaration": {
            "name": "bankIcon",
            "module": "icon/shapes/bank.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bar-chart.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "barChartIconName",
          "type": {
            "text": "string"
          },
          "default": "'bar-chart'"
        },
        {
          "kind": "variable",
          "name": "barChartIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[barChartIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "barChartIconName",
          "declaration": {
            "name": "barChartIconName",
            "module": "icon/shapes/bar-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "barChartIcon",
          "declaration": {
            "name": "barChartIcon",
            "module": "icon/shapes/bar-chart.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bar-code.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "barCodeIconName",
          "type": {
            "text": "string"
          },
          "default": "'bar-code'"
        },
        {
          "kind": "variable",
          "name": "barCodeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[barCodeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "barCodeIconName",
          "declaration": {
            "name": "barCodeIconName",
            "module": "icon/shapes/bar-code.js"
          }
        },
        {
          "kind": "js",
          "name": "barCodeIcon",
          "declaration": {
            "name": "barCodeIcon",
            "module": "icon/shapes/bar-code.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bars.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "barsIconName",
          "type": {
            "text": "string"
          },
          "default": "'bars'"
        },
        {
          "kind": "variable",
          "name": "barsIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[barsIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "barsIconName",
          "declaration": {
            "name": "barsIconName",
            "module": "icon/shapes/bars.js"
          }
        },
        {
          "kind": "js",
          "name": "barsIcon",
          "declaration": {
            "name": "barsIcon",
            "module": "icon/shapes/bars.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/battery.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "batteryIconName",
          "type": {
            "text": "string"
          },
          "default": "'battery'"
        },
        {
          "kind": "variable",
          "name": "batteryIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[batteryIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "batteryIconName",
          "declaration": {
            "name": "batteryIconName",
            "module": "icon/shapes/battery.js"
          }
        },
        {
          "kind": "js",
          "name": "batteryIcon",
          "declaration": {
            "name": "batteryIcon",
            "module": "icon/shapes/battery.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bell-curve.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "bellCurveIconName",
          "type": {
            "text": "string"
          },
          "default": "'bell-curve'"
        },
        {
          "kind": "variable",
          "name": "bellCurveIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[bellCurveIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bellCurveIconName",
          "declaration": {
            "name": "bellCurveIconName",
            "module": "icon/shapes/bell-curve.js"
          }
        },
        {
          "kind": "js",
          "name": "bellCurveIcon",
          "declaration": {
            "name": "bellCurveIcon",
            "module": "icon/shapes/bell-curve.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bell.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "bellIconName",
          "type": {
            "text": "string"
          },
          "default": "'bell'"
        },
        {
          "kind": "variable",
          "name": "bellIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[bellIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bellIconName",
          "declaration": {
            "name": "bellIconName",
            "module": "icon/shapes/bell.js"
          }
        },
        {
          "kind": "js",
          "name": "bellIcon",
          "declaration": {
            "name": "bellIcon",
            "module": "icon/shapes/bell.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/beta.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "betaIconName",
          "type": {
            "text": "string"
          },
          "default": "'beta'"
        },
        {
          "kind": "variable",
          "name": "betaIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[betaIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "betaIconName",
          "declaration": {
            "name": "betaIconName",
            "module": "icon/shapes/beta.js"
          }
        },
        {
          "kind": "js",
          "name": "betaIcon",
          "declaration": {
            "name": "betaIcon",
            "module": "icon/shapes/beta.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bicycle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "bicycleIconName",
          "type": {
            "text": "string"
          },
          "default": "'bicycle'"
        },
        {
          "kind": "variable",
          "name": "bicycleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[bicycleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bicycleIconName",
          "declaration": {
            "name": "bicycleIconName",
            "module": "icon/shapes/bicycle.js"
          }
        },
        {
          "kind": "js",
          "name": "bicycleIcon",
          "declaration": {
            "name": "bicycleIcon",
            "module": "icon/shapes/bicycle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/birthday-cake.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "birthdayCakeIconName",
          "type": {
            "text": "string"
          },
          "default": "'birthday-cake'"
        },
        {
          "kind": "variable",
          "name": "birthdayCakeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[birthdayCakeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "birthdayCakeIconName",
          "declaration": {
            "name": "birthdayCakeIconName",
            "module": "icon/shapes/birthday-cake.js"
          }
        },
        {
          "kind": "js",
          "name": "birthdayCakeIcon",
          "declaration": {
            "name": "birthdayCakeIcon",
            "module": "icon/shapes/birthday-cake.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bitcoin.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "bitcoinIconName",
          "type": {
            "text": "string"
          },
          "default": "'bitcoin'"
        },
        {
          "kind": "variable",
          "name": "bitcoinIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[bitcoinIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bitcoinIconName",
          "declaration": {
            "name": "bitcoinIconName",
            "module": "icon/shapes/bitcoin.js"
          }
        },
        {
          "kind": "js",
          "name": "bitcoinIcon",
          "declaration": {
            "name": "bitcoinIcon",
            "module": "icon/shapes/bitcoin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/block-quote.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "blockQuoteIconName",
          "type": {
            "text": "string"
          },
          "default": "'block-quote'"
        },
        {
          "kind": "variable",
          "name": "blockQuoteIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[blockQuoteIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "blockQuoteIconName",
          "declaration": {
            "name": "blockQuoteIconName",
            "module": "icon/shapes/block-quote.js"
          }
        },
        {
          "kind": "js",
          "name": "blockQuoteIcon",
          "declaration": {
            "name": "blockQuoteIcon",
            "module": "icon/shapes/block-quote.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/block.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "blockIconName",
          "type": {
            "text": "string"
          },
          "default": "'block'"
        },
        {
          "kind": "variable",
          "name": "blockIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[blockIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "blockIconName",
          "declaration": {
            "name": "blockIconName",
            "module": "icon/shapes/block.js"
          }
        },
        {
          "kind": "js",
          "name": "blockIcon",
          "declaration": {
            "name": "blockIcon",
            "module": "icon/shapes/block.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/blocks-group.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "blocksGroupIconName",
          "type": {
            "text": "string"
          },
          "default": "'blocks-group'"
        },
        {
          "kind": "variable",
          "name": "blocksGroupIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[blocksGroupIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "blocksGroupIconName",
          "declaration": {
            "name": "blocksGroupIconName",
            "module": "icon/shapes/blocks-group.js"
          }
        },
        {
          "kind": "js",
          "name": "blocksGroupIcon",
          "declaration": {
            "name": "blocksGroupIcon",
            "module": "icon/shapes/blocks-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bluetooth-off.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "bluetoothOffIconName",
          "type": {
            "text": "string"
          },
          "default": "'bluetooth-off'"
        },
        {
          "kind": "variable",
          "name": "bluetoothOffIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[bluetoothOffIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bluetoothOffIconName",
          "declaration": {
            "name": "bluetoothOffIconName",
            "module": "icon/shapes/bluetooth-off.js"
          }
        },
        {
          "kind": "js",
          "name": "bluetoothOffIcon",
          "declaration": {
            "name": "bluetoothOffIcon",
            "module": "icon/shapes/bluetooth-off.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bluetooth.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "bluetoothIconName",
          "type": {
            "text": "string"
          },
          "default": "'bluetooth'"
        },
        {
          "kind": "variable",
          "name": "bluetoothIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[bluetoothIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bluetoothIconName",
          "declaration": {
            "name": "bluetoothIconName",
            "module": "icon/shapes/bluetooth.js"
          }
        },
        {
          "kind": "js",
          "name": "bluetoothIcon",
          "declaration": {
            "name": "bluetoothIcon",
            "module": "icon/shapes/bluetooth.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/boat.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "boatIconName",
          "type": {
            "text": "string"
          },
          "default": "'boat'"
        },
        {
          "kind": "variable",
          "name": "boatIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[boatIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "boatIconName",
          "declaration": {
            "name": "boatIconName",
            "module": "icon/shapes/boat.js"
          }
        },
        {
          "kind": "js",
          "name": "boatIcon",
          "declaration": {
            "name": "boatIcon",
            "module": "icon/shapes/boat.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bold.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "boldIconName",
          "type": {
            "text": "string"
          },
          "default": "'bold'"
        },
        {
          "kind": "variable",
          "name": "boldIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[boldIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "boldIconName",
          "declaration": {
            "name": "boldIconName",
            "module": "icon/shapes/bold.js"
          }
        },
        {
          "kind": "js",
          "name": "boldIcon",
          "declaration": {
            "name": "boldIcon",
            "module": "icon/shapes/bold.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bolt.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "boltIconName",
          "type": {
            "text": "string"
          },
          "default": "'bolt'"
        },
        {
          "kind": "variable",
          "name": "boltIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[boltIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "boltIconName",
          "declaration": {
            "name": "boltIconName",
            "module": "icon/shapes/bolt.js"
          }
        },
        {
          "kind": "js",
          "name": "boltIcon",
          "declaration": {
            "name": "boltIcon",
            "module": "icon/shapes/bolt.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/book.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "bookIconName",
          "type": {
            "text": "string"
          },
          "default": "'book'"
        },
        {
          "kind": "variable",
          "name": "bookIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[bookIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bookIconName",
          "declaration": {
            "name": "bookIconName",
            "module": "icon/shapes/book.js"
          }
        },
        {
          "kind": "js",
          "name": "bookIcon",
          "declaration": {
            "name": "bookIcon",
            "module": "icon/shapes/book.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bookmark.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "bookmarkIconName",
          "type": {
            "text": "string"
          },
          "default": "'bookmark'"
        },
        {
          "kind": "variable",
          "name": "bookmarkIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[bookmarkIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bookmarkIconName",
          "declaration": {
            "name": "bookmarkIconName",
            "module": "icon/shapes/bookmark.js"
          }
        },
        {
          "kind": "js",
          "name": "bookmarkIcon",
          "declaration": {
            "name": "bookmarkIcon",
            "module": "icon/shapes/bookmark.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/box-plot.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "boxPlotIconName",
          "type": {
            "text": "string"
          },
          "default": "'box-plot'"
        },
        {
          "kind": "variable",
          "name": "boxPlotIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[boxPlotIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "boxPlotIconName",
          "declaration": {
            "name": "boxPlotIconName",
            "module": "icon/shapes/box-plot.js"
          }
        },
        {
          "kind": "js",
          "name": "boxPlotIcon",
          "declaration": {
            "name": "boxPlotIcon",
            "module": "icon/shapes/box-plot.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/briefcase.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "briefcaseIconName",
          "type": {
            "text": "string"
          },
          "default": "'briefcase'"
        },
        {
          "kind": "variable",
          "name": "briefcaseIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[briefcaseIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "briefcaseIconName",
          "declaration": {
            "name": "briefcaseIconName",
            "module": "icon/shapes/briefcase.js"
          }
        },
        {
          "kind": "js",
          "name": "briefcaseIcon",
          "declaration": {
            "name": "briefcaseIcon",
            "module": "icon/shapes/briefcase.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bubble-chart.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "bubbleChartIconName",
          "type": {
            "text": "string"
          },
          "default": "'bubble-chart'"
        },
        {
          "kind": "variable",
          "name": "bubbleChartIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[bubbleChartIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bubbleChartIconName",
          "declaration": {
            "name": "bubbleChartIconName",
            "module": "icon/shapes/bubble-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "bubbleChartIcon",
          "declaration": {
            "name": "bubbleChartIcon",
            "module": "icon/shapes/bubble-chart.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bubble-exclamation.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "bubbleExclamationIconName",
          "type": {
            "text": "string"
          },
          "default": "'bubble-exclamation'"
        },
        {
          "kind": "variable",
          "name": "bubbleExclamationIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[bubbleExclamationIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bubbleExclamationIconName",
          "declaration": {
            "name": "bubbleExclamationIconName",
            "module": "icon/shapes/bubble-exclamation.js"
          }
        },
        {
          "kind": "js",
          "name": "bubbleExclamationIcon",
          "declaration": {
            "name": "bubbleExclamationIcon",
            "module": "icon/shapes/bubble-exclamation.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bug.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "bugIconName",
          "type": {
            "text": "string"
          },
          "default": "'bug'"
        },
        {
          "kind": "variable",
          "name": "bugIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[bugIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bugIconName",
          "declaration": {
            "name": "bugIconName",
            "module": "icon/shapes/bug.js"
          }
        },
        {
          "kind": "js",
          "name": "bugIcon",
          "declaration": {
            "name": "bugIcon",
            "module": "icon/shapes/bug.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/building.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "buildingIconName",
          "type": {
            "text": "string"
          },
          "default": "'building'"
        },
        {
          "kind": "variable",
          "name": "buildingIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[buildingIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "buildingIconName",
          "declaration": {
            "name": "buildingIconName",
            "module": "icon/shapes/building.js"
          }
        },
        {
          "kind": "js",
          "name": "buildingIcon",
          "declaration": {
            "name": "buildingIcon",
            "module": "icon/shapes/building.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bullet-list.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "bulletListIconName",
          "type": {
            "text": "string"
          },
          "default": "'bullet-list'"
        },
        {
          "kind": "variable",
          "name": "bulletListIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[bulletListIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bulletListIconName",
          "declaration": {
            "name": "bulletListIconName",
            "module": "icon/shapes/bullet-list.js"
          }
        },
        {
          "kind": "js",
          "name": "bulletListIcon",
          "declaration": {
            "name": "bulletListIcon",
            "module": "icon/shapes/bullet-list.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bullseye.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "bullseyeIconName",
          "type": {
            "text": "string"
          },
          "default": "'bullseye'"
        },
        {
          "kind": "variable",
          "name": "bullseyeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[bullseyeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bullseyeIconName",
          "declaration": {
            "name": "bullseyeIconName",
            "module": "icon/shapes/bullseye.js"
          }
        },
        {
          "kind": "js",
          "name": "bullseyeIcon",
          "declaration": {
            "name": "bullseyeIcon",
            "module": "icon/shapes/bullseye.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/bundle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "bundleIconName",
          "type": {
            "text": "string"
          },
          "default": "'bundle'"
        },
        {
          "kind": "variable",
          "name": "bundleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[bundleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "bundleIconName",
          "declaration": {
            "name": "bundleIconName",
            "module": "icon/shapes/bundle.js"
          }
        },
        {
          "kind": "js",
          "name": "bundleIcon",
          "declaration": {
            "name": "bundleIcon",
            "module": "icon/shapes/bundle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/calculator.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "calculatorIconName",
          "type": {
            "text": "string"
          },
          "default": "'calculator'"
        },
        {
          "kind": "variable",
          "name": "calculatorIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[calculatorIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "calculatorIconName",
          "declaration": {
            "name": "calculatorIconName",
            "module": "icon/shapes/calculator.js"
          }
        },
        {
          "kind": "js",
          "name": "calculatorIcon",
          "declaration": {
            "name": "calculatorIcon",
            "module": "icon/shapes/calculator.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/calendar-mini.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "calendarMiniIconName",
          "type": {
            "text": "string"
          },
          "default": "'calendar-mini'"
        },
        {
          "kind": "variable",
          "name": "calendarMiniIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[calendarMiniIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "calendarMiniIconName",
          "declaration": {
            "name": "calendarMiniIconName",
            "module": "icon/shapes/calendar-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "calendarMiniIcon",
          "declaration": {
            "name": "calendarMiniIcon",
            "module": "icon/shapes/calendar-mini.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/calendar.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "calendarIconName",
          "type": {
            "text": "string"
          },
          "default": "'calendar'"
        },
        {
          "kind": "variable",
          "name": "calendarIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[calendarIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "calendarIconName",
          "declaration": {
            "name": "calendarIconName",
            "module": "icon/shapes/calendar.js"
          }
        },
        {
          "kind": "js",
          "name": "calendarIcon",
          "declaration": {
            "name": "calendarIcon",
            "module": "icon/shapes/calendar.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/camera.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "cameraIconName",
          "type": {
            "text": "string"
          },
          "default": "'camera'"
        },
        {
          "kind": "variable",
          "name": "cameraIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[cameraIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cameraIconName",
          "declaration": {
            "name": "cameraIconName",
            "module": "icon/shapes/camera.js"
          }
        },
        {
          "kind": "js",
          "name": "cameraIcon",
          "declaration": {
            "name": "cameraIcon",
            "module": "icon/shapes/camera.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/campervan.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "campervanIconName",
          "type": {
            "text": "string"
          },
          "default": "'campervan'"
        },
        {
          "kind": "variable",
          "name": "campervanIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[campervanIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "campervanIconName",
          "declaration": {
            "name": "campervanIconName",
            "module": "icon/shapes/campervan.js"
          }
        },
        {
          "kind": "js",
          "name": "campervanIcon",
          "declaration": {
            "name": "campervanIcon",
            "module": "icon/shapes/campervan.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/capacitor.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "capacitorIconName",
          "type": {
            "text": "string"
          },
          "default": "'capacitor'"
        },
        {
          "kind": "variable",
          "name": "capacitorIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[capacitorIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "capacitorIconName",
          "declaration": {
            "name": "capacitorIconName",
            "module": "icon/shapes/capacitor.js"
          }
        },
        {
          "kind": "js",
          "name": "capacitorIcon",
          "declaration": {
            "name": "capacitorIcon",
            "module": "icon/shapes/capacitor.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/car.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "carIconName",
          "type": {
            "text": "string"
          },
          "default": "'car'"
        },
        {
          "kind": "variable",
          "name": "carIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[carIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "carIconName",
          "declaration": {
            "name": "carIconName",
            "module": "icon/shapes/car.js"
          }
        },
        {
          "kind": "js",
          "name": "carIcon",
          "declaration": {
            "name": "carIcon",
            "module": "icon/shapes/car.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/caravan.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "caravanIconName",
          "type": {
            "text": "string"
          },
          "default": "'caravan'"
        },
        {
          "kind": "variable",
          "name": "caravanIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[caravanIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "caravanIconName",
          "declaration": {
            "name": "caravanIconName",
            "module": "icon/shapes/caravan.js"
          }
        },
        {
          "kind": "js",
          "name": "caravanIcon",
          "declaration": {
            "name": "caravanIcon",
            "module": "icon/shapes/caravan.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/cd-dvd.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "cdDvdIconName",
          "type": {
            "text": "string"
          },
          "default": "'cd-dvd'"
        },
        {
          "kind": "variable",
          "name": "cdDvdIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[cdDvdIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cdDvdIconName",
          "declaration": {
            "name": "cdDvdIconName",
            "module": "icon/shapes/cd-dvd.js"
          }
        },
        {
          "kind": "js",
          "name": "cdDvdIcon",
          "declaration": {
            "name": "cdDvdIcon",
            "module": "icon/shapes/cd-dvd.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/center-text.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "centerTextIconName",
          "type": {
            "text": "string"
          },
          "default": "'center-text'"
        },
        {
          "kind": "variable",
          "name": "centerTextIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[centerTextIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "centerTextIconName",
          "declaration": {
            "name": "centerTextIconName",
            "module": "icon/shapes/center-text.js"
          }
        },
        {
          "kind": "js",
          "name": "centerTextIcon",
          "declaration": {
            "name": "centerTextIcon",
            "module": "icon/shapes/center-text.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/certificate.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "certificateIconName",
          "type": {
            "text": "string"
          },
          "default": "'certificate'"
        },
        {
          "kind": "variable",
          "name": "certificateIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[certificateIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "certificateIconName",
          "declaration": {
            "name": "certificateIconName",
            "module": "icon/shapes/certificate.js"
          }
        },
        {
          "kind": "js",
          "name": "certificateIcon",
          "declaration": {
            "name": "certificateIcon",
            "module": "icon/shapes/certificate.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/chat-bubble.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "chatBubbleIconName",
          "type": {
            "text": "string"
          },
          "default": "'chat-bubble'"
        },
        {
          "kind": "variable",
          "name": "chatBubbleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[chatBubbleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "chatBubbleIconName",
          "declaration": {
            "name": "chatBubbleIconName",
            "module": "icon/shapes/chat-bubble.js"
          }
        },
        {
          "kind": "js",
          "name": "chatBubbleIcon",
          "declaration": {
            "name": "chatBubbleIcon",
            "module": "icon/shapes/chat-bubble.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/check-circle-mini.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "checkCircleMiniIconName",
          "type": {
            "text": "string"
          },
          "default": "'check-circle-mini'"
        },
        {
          "kind": "variable",
          "name": "checkCircleMiniIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[checkCircleMiniIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "checkCircleMiniIconName",
          "declaration": {
            "name": "checkCircleMiniIconName",
            "module": "icon/shapes/check-circle-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "checkCircleMiniIcon",
          "declaration": {
            "name": "checkCircleMiniIcon",
            "module": "icon/shapes/check-circle-mini.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/check-circle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "checkCircleIconName",
          "type": {
            "text": "string"
          },
          "default": "'check-circle'"
        },
        {
          "kind": "variable",
          "name": "checkCircleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[checkCircleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "checkCircleIconName",
          "declaration": {
            "name": "checkCircleIconName",
            "module": "icon/shapes/check-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "checkCircleIcon",
          "declaration": {
            "name": "checkCircleIcon",
            "module": "icon/shapes/check-circle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/check-mini.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "checkMiniIconName",
          "type": {
            "text": "string"
          },
          "default": "'check-mini'"
        },
        {
          "kind": "variable",
          "name": "checkMiniIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[checkMiniIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "checkMiniIconName",
          "declaration": {
            "name": "checkMiniIconName",
            "module": "icon/shapes/check-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "checkMiniIcon",
          "declaration": {
            "name": "checkMiniIcon",
            "module": "icon/shapes/check-mini.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/check.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "checkIconName",
          "type": {
            "text": "string"
          },
          "default": "'check'"
        },
        {
          "kind": "variable",
          "name": "checkIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[checkIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "checkIconName",
          "declaration": {
            "name": "checkIconName",
            "module": "icon/shapes/check.js"
          }
        },
        {
          "kind": "js",
          "name": "checkIcon",
          "declaration": {
            "name": "checkIcon",
            "module": "icon/shapes/check.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/checkbox-list.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "checkboxListIconName",
          "type": {
            "text": "string"
          },
          "default": "'checkbox-list'"
        },
        {
          "kind": "variable",
          "name": "checkboxListIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[checkboxListIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "checkboxListIconName",
          "declaration": {
            "name": "checkboxListIconName",
            "module": "icon/shapes/checkbox-list.js"
          }
        },
        {
          "kind": "js",
          "name": "checkboxListIcon",
          "declaration": {
            "name": "checkboxListIcon",
            "module": "icon/shapes/checkbox-list.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/child-arrow.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "childArrowIconName",
          "type": {
            "text": "string"
          },
          "default": "'child-arrow'"
        },
        {
          "kind": "variable",
          "name": "childArrowIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[childArrowIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "childArrowIconName",
          "declaration": {
            "name": "childArrowIconName",
            "module": "icon/shapes/child-arrow.js"
          }
        },
        {
          "kind": "js",
          "name": "childArrowIcon",
          "declaration": {
            "name": "childArrowIcon",
            "module": "icon/shapes/child-arrow.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/ci-cd.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ciCdIconName",
          "type": {
            "text": "string"
          },
          "default": "'ci-cd'"
        },
        {
          "kind": "variable",
          "name": "ciCdIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[ciCdIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ciCdIconName",
          "declaration": {
            "name": "ciCdIconName",
            "module": "icon/shapes/ci-cd.js"
          }
        },
        {
          "kind": "js",
          "name": "ciCdIcon",
          "declaration": {
            "name": "ciCdIcon",
            "module": "icon/shapes/ci-cd.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/circle-arrow.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "circleArrowIconName",
          "type": {
            "text": "string"
          },
          "default": "'circle-arrow'"
        },
        {
          "kind": "variable",
          "name": "circleArrowIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[circleArrowIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "circleArrowIconName",
          "declaration": {
            "name": "circleArrowIconName",
            "module": "icon/shapes/circle-arrow.js"
          }
        },
        {
          "kind": "js",
          "name": "circleArrowIcon",
          "declaration": {
            "name": "circleArrowIcon",
            "module": "icon/shapes/circle-arrow.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/circle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "circleIconName",
          "type": {
            "text": "string"
          },
          "default": "'circle'"
        },
        {
          "kind": "variable",
          "name": "circleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[circleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "circleIconName",
          "declaration": {
            "name": "circleIconName",
            "module": "icon/shapes/circle.js"
          }
        },
        {
          "kind": "js",
          "name": "circleIcon",
          "declaration": {
            "name": "circleIcon",
            "module": "icon/shapes/circle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/clipboard.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "clipboardIconName",
          "type": {
            "text": "string"
          },
          "default": "'clipboard'"
        },
        {
          "kind": "variable",
          "name": "clipboardIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[clipboardIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "clipboardIconName",
          "declaration": {
            "name": "clipboardIconName",
            "module": "icon/shapes/clipboard.js"
          }
        },
        {
          "kind": "js",
          "name": "clipboardIcon",
          "declaration": {
            "name": "clipboardIcon",
            "module": "icon/shapes/clipboard.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/clock.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "clockIconName",
          "type": {
            "text": "string"
          },
          "default": "'clock'"
        },
        {
          "kind": "variable",
          "name": "clockIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[clockIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "clockIconName",
          "declaration": {
            "name": "clockIconName",
            "module": "icon/shapes/clock.js"
          }
        },
        {
          "kind": "js",
          "name": "clockIcon",
          "declaration": {
            "name": "clockIcon",
            "module": "icon/shapes/clock.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/clone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "cloneIconName",
          "type": {
            "text": "string"
          },
          "default": "'clone'"
        },
        {
          "kind": "variable",
          "name": "cloneIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[cloneIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cloneIconName",
          "declaration": {
            "name": "cloneIconName",
            "module": "icon/shapes/clone.js"
          }
        },
        {
          "kind": "js",
          "name": "cloneIcon",
          "declaration": {
            "name": "cloneIcon",
            "module": "icon/shapes/clone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/cloud-chart.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "cloudChartIconName",
          "type": {
            "text": "string"
          },
          "default": "'cloud-chart'"
        },
        {
          "kind": "variable",
          "name": "cloudChartIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[cloudChartIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cloudChartIconName",
          "declaration": {
            "name": "cloudChartIconName",
            "module": "icon/shapes/cloud-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "cloudChartIcon",
          "declaration": {
            "name": "cloudChartIcon",
            "module": "icon/shapes/cloud-chart.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/cloud-network.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "cloudNetworkIconName",
          "type": {
            "text": "string"
          },
          "default": "'cloud-network'"
        },
        {
          "kind": "variable",
          "name": "cloudNetworkIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[cloudNetworkIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cloudNetworkIconName",
          "declaration": {
            "name": "cloudNetworkIconName",
            "module": "icon/shapes/cloud-network.js"
          }
        },
        {
          "kind": "js",
          "name": "cloudNetworkIcon",
          "declaration": {
            "name": "cloudNetworkIcon",
            "module": "icon/shapes/cloud-network.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/cloud-scale.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "cloudScaleIconName",
          "type": {
            "text": "string"
          },
          "default": "'cloud-scale'"
        },
        {
          "kind": "variable",
          "name": "cloudScaleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[cloudScaleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cloudScaleIconName",
          "declaration": {
            "name": "cloudScaleIconName",
            "module": "icon/shapes/cloud-scale.js"
          }
        },
        {
          "kind": "js",
          "name": "cloudScaleIcon",
          "declaration": {
            "name": "cloudScaleIcon",
            "module": "icon/shapes/cloud-scale.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/cloud-traffic.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "cloudTrafficIconName",
          "type": {
            "text": "string"
          },
          "default": "'cloud-traffic'"
        },
        {
          "kind": "variable",
          "name": "cloudTrafficIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[cloudTrafficIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cloudTrafficIconName",
          "declaration": {
            "name": "cloudTrafficIconName",
            "module": "icon/shapes/cloud-traffic.js"
          }
        },
        {
          "kind": "js",
          "name": "cloudTrafficIcon",
          "declaration": {
            "name": "cloudTrafficIcon",
            "module": "icon/shapes/cloud-traffic.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/cloud.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "cloudIconName",
          "type": {
            "text": "string"
          },
          "default": "'cloud'"
        },
        {
          "kind": "variable",
          "name": "cloudIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[cloudIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cloudIconName",
          "declaration": {
            "name": "cloudIconName",
            "module": "icon/shapes/cloud.js"
          }
        },
        {
          "kind": "js",
          "name": "cloudIcon",
          "declaration": {
            "name": "cloudIcon",
            "module": "icon/shapes/cloud.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/cluster.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "clusterIconName",
          "type": {
            "text": "string"
          },
          "default": "'cluster'"
        },
        {
          "kind": "variable",
          "name": "clusterIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[clusterIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "clusterIconName",
          "declaration": {
            "name": "clusterIconName",
            "module": "icon/shapes/cluster.js"
          }
        },
        {
          "kind": "js",
          "name": "clusterIcon",
          "declaration": {
            "name": "clusterIcon",
            "module": "icon/shapes/cluster.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/code.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "codeIconName",
          "type": {
            "text": "string"
          },
          "default": "'code'"
        },
        {
          "kind": "variable",
          "name": "codeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[codeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "codeIconName",
          "declaration": {
            "name": "codeIconName",
            "module": "icon/shapes/code.js"
          }
        },
        {
          "kind": "js",
          "name": "codeIcon",
          "declaration": {
            "name": "codeIcon",
            "module": "icon/shapes/code.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/cog.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "cogIconName",
          "type": {
            "text": "string"
          },
          "default": "'cog'"
        },
        {
          "kind": "variable",
          "name": "cogIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[cogIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cogIconName",
          "declaration": {
            "name": "cogIconName",
            "module": "icon/shapes/cog.js"
          }
        },
        {
          "kind": "js",
          "name": "cogIcon",
          "declaration": {
            "name": "cogIcon",
            "module": "icon/shapes/cog.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/coin-bag.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "coinBagIconName",
          "type": {
            "text": "string"
          },
          "default": "'coin-bag'"
        },
        {
          "kind": "variable",
          "name": "coinBagIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[coinBagIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "coinBagIconName",
          "declaration": {
            "name": "coinBagIconName",
            "module": "icon/shapes/coin-bag.js"
          }
        },
        {
          "kind": "js",
          "name": "coinBagIcon",
          "declaration": {
            "name": "coinBagIcon",
            "module": "icon/shapes/coin-bag.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/collapse-card.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "collapseCardIconName",
          "type": {
            "text": "string"
          },
          "default": "'collapse-card'"
        },
        {
          "kind": "variable",
          "name": "collapseCardIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[collapseCardIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "collapseCardIconName",
          "declaration": {
            "name": "collapseCardIconName",
            "module": "icon/shapes/collapse-card.js"
          }
        },
        {
          "kind": "js",
          "name": "collapseCardIcon",
          "declaration": {
            "name": "collapseCardIcon",
            "module": "icon/shapes/collapse-card.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/color-palette.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "colorPaletteIconName",
          "type": {
            "text": "string"
          },
          "default": "'color-palette'"
        },
        {
          "kind": "variable",
          "name": "colorPaletteIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[colorPaletteIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "colorPaletteIconName",
          "declaration": {
            "name": "colorPaletteIconName",
            "module": "icon/shapes/color-palette.js"
          }
        },
        {
          "kind": "js",
          "name": "colorPaletteIcon",
          "declaration": {
            "name": "colorPaletteIcon",
            "module": "icon/shapes/color-palette.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/color-picker.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "colorPickerIconName",
          "type": {
            "text": "string"
          },
          "default": "'color-picker'"
        },
        {
          "kind": "variable",
          "name": "colorPickerIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[colorPickerIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "colorPickerIconName",
          "declaration": {
            "name": "colorPickerIconName",
            "module": "icon/shapes/color-picker.js"
          }
        },
        {
          "kind": "js",
          "name": "colorPickerIcon",
          "declaration": {
            "name": "colorPickerIcon",
            "module": "icon/shapes/color-picker.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/compass.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "compassIconName",
          "type": {
            "text": "string"
          },
          "default": "'compass'"
        },
        {
          "kind": "variable",
          "name": "compassIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[compassIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "compassIconName",
          "declaration": {
            "name": "compassIconName",
            "module": "icon/shapes/compass.js"
          }
        },
        {
          "kind": "js",
          "name": "compassIcon",
          "declaration": {
            "name": "compassIcon",
            "module": "icon/shapes/compass.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/computer.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "computerIconName",
          "type": {
            "text": "string"
          },
          "default": "'computer'"
        },
        {
          "kind": "variable",
          "name": "computerIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[computerIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "computerIconName",
          "declaration": {
            "name": "computerIconName",
            "module": "icon/shapes/computer.js"
          }
        },
        {
          "kind": "js",
          "name": "computerIcon",
          "declaration": {
            "name": "computerIcon",
            "module": "icon/shapes/computer.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/connect.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "connectIconName",
          "type": {
            "text": "string"
          },
          "default": "'connect'"
        },
        {
          "kind": "variable",
          "name": "connectIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[connectIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "connectIconName",
          "declaration": {
            "name": "connectIconName",
            "module": "icon/shapes/connect.js"
          }
        },
        {
          "kind": "js",
          "name": "connectIcon",
          "declaration": {
            "name": "connectIcon",
            "module": "icon/shapes/connect.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/container-volume.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "containerVolumeIconName",
          "type": {
            "text": "string"
          },
          "default": "'container-volume'"
        },
        {
          "kind": "variable",
          "name": "containerVolumeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[containerVolumeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "containerVolumeIconName",
          "declaration": {
            "name": "containerVolumeIconName",
            "module": "icon/shapes/container-volume.js"
          }
        },
        {
          "kind": "js",
          "name": "containerVolumeIcon",
          "declaration": {
            "name": "containerVolumeIcon",
            "module": "icon/shapes/container-volume.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/container.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "containerIconName",
          "type": {
            "text": "string"
          },
          "default": "'container'"
        },
        {
          "kind": "variable",
          "name": "containerIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[containerIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "containerIconName",
          "declaration": {
            "name": "containerIconName",
            "module": "icon/shapes/container.js"
          }
        },
        {
          "kind": "js",
          "name": "containerIcon",
          "declaration": {
            "name": "containerIcon",
            "module": "icon/shapes/container.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/contract.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "contractIconName",
          "type": {
            "text": "string"
          },
          "default": "'contract'"
        },
        {
          "kind": "variable",
          "name": "contractIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[contractIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "contractIconName",
          "declaration": {
            "name": "contractIconName",
            "module": "icon/shapes/contract.js"
          }
        },
        {
          "kind": "js",
          "name": "contractIcon",
          "declaration": {
            "name": "contractIcon",
            "module": "icon/shapes/contract.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/control-lun.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "controlLunIconName",
          "type": {
            "text": "string"
          },
          "default": "'control-lun'"
        },
        {
          "kind": "variable",
          "name": "controlLunIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[controlLunIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "controlLunIconName",
          "declaration": {
            "name": "controlLunIconName",
            "module": "icon/shapes/control-lun.js"
          }
        },
        {
          "kind": "js",
          "name": "controlLunIcon",
          "declaration": {
            "name": "controlLunIcon",
            "module": "icon/shapes/control-lun.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/copy-to-clipboard.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "copyToClipboardIconName",
          "type": {
            "text": "string"
          },
          "default": "'copy-to-clipboard'"
        },
        {
          "kind": "variable",
          "name": "copyToClipboardIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[copyToClipboardIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "copyToClipboardIconName",
          "declaration": {
            "name": "copyToClipboardIconName",
            "module": "icon/shapes/copy-to-clipboard.js"
          }
        },
        {
          "kind": "js",
          "name": "copyToClipboardIcon",
          "declaration": {
            "name": "copyToClipboardIcon",
            "module": "icon/shapes/copy-to-clipboard.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/copy.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "copyIconName",
          "type": {
            "text": "string"
          },
          "default": "'copy'"
        },
        {
          "kind": "variable",
          "name": "copyIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[copyIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "copyIconName",
          "declaration": {
            "name": "copyIconName",
            "module": "icon/shapes/copy.js"
          }
        },
        {
          "kind": "js",
          "name": "copyIcon",
          "declaration": {
            "name": "copyIcon",
            "module": "icon/shapes/copy.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/cpu.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "cpuIconName",
          "type": {
            "text": "string"
          },
          "default": "'cpu'"
        },
        {
          "kind": "variable",
          "name": "cpuIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[cpuIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cpuIconName",
          "declaration": {
            "name": "cpuIconName",
            "module": "icon/shapes/cpu.js"
          }
        },
        {
          "kind": "js",
          "name": "cpuIcon",
          "declaration": {
            "name": "cpuIcon",
            "module": "icon/shapes/cpu.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/credit-card.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "creditCardIconName",
          "type": {
            "text": "string"
          },
          "default": "'credit-card'"
        },
        {
          "kind": "variable",
          "name": "creditCardIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[creditCardIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "creditCardIconName",
          "declaration": {
            "name": "creditCardIconName",
            "module": "icon/shapes/credit-card.js"
          }
        },
        {
          "kind": "js",
          "name": "creditCardIcon",
          "declaration": {
            "name": "creditCardIcon",
            "module": "icon/shapes/credit-card.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/crosshairs.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "crosshairsIconName",
          "type": {
            "text": "string"
          },
          "default": "'crosshairs'"
        },
        {
          "kind": "variable",
          "name": "crosshairsIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[crosshairsIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "crosshairsIconName",
          "declaration": {
            "name": "crosshairsIconName",
            "module": "icon/shapes/crosshairs.js"
          }
        },
        {
          "kind": "js",
          "name": "crosshairsIcon",
          "declaration": {
            "name": "crosshairsIcon",
            "module": "icon/shapes/crosshairs.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/crown.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "crownIconName",
          "type": {
            "text": "string"
          },
          "default": "'crown'"
        },
        {
          "kind": "variable",
          "name": "crownIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[crownIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "crownIconName",
          "declaration": {
            "name": "crownIconName",
            "module": "icon/shapes/crown.js"
          }
        },
        {
          "kind": "js",
          "name": "crownIcon",
          "declaration": {
            "name": "crownIcon",
            "module": "icon/shapes/crown.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/cursor-arrow.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "cursorArrowIconName",
          "type": {
            "text": "string"
          },
          "default": "'cursor-arrow'"
        },
        {
          "kind": "variable",
          "name": "cursorArrowIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[cursorArrowIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cursorArrowIconName",
          "declaration": {
            "name": "cursorArrowIconName",
            "module": "icon/shapes/cursor-arrow.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorArrowIcon",
          "declaration": {
            "name": "cursorArrowIcon",
            "module": "icon/shapes/cursor-arrow.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/cursor-hand-click.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "cursorHandClickIconName",
          "type": {
            "text": "string"
          },
          "default": "'cursor-hand-click'"
        },
        {
          "kind": "variable",
          "name": "cursorHandClickIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[cursorHandClickIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cursorHandClickIconName",
          "declaration": {
            "name": "cursorHandClickIconName",
            "module": "icon/shapes/cursor-hand-click.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorHandClickIcon",
          "declaration": {
            "name": "cursorHandClickIcon",
            "module": "icon/shapes/cursor-hand-click.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/cursor-hand-grab.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "cursorHandGrabIconName",
          "type": {
            "text": "string"
          },
          "default": "'cursor-hand-grab'"
        },
        {
          "kind": "variable",
          "name": "cursorHandGrabIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[cursorHandGrabIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cursorHandGrabIconName",
          "declaration": {
            "name": "cursorHandGrabIconName",
            "module": "icon/shapes/cursor-hand-grab.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorHandGrabIcon",
          "declaration": {
            "name": "cursorHandGrabIcon",
            "module": "icon/shapes/cursor-hand-grab.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/cursor-hand-open.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "cursorHandOpenIconName",
          "type": {
            "text": "string"
          },
          "default": "'cursor-hand-open'"
        },
        {
          "kind": "variable",
          "name": "cursorHandOpenIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[cursorHandOpenIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cursorHandOpenIconName",
          "declaration": {
            "name": "cursorHandOpenIconName",
            "module": "icon/shapes/cursor-hand-open.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorHandOpenIcon",
          "declaration": {
            "name": "cursorHandOpenIcon",
            "module": "icon/shapes/cursor-hand-open.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/cursor-hand.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "cursorHandIconName",
          "type": {
            "text": "string"
          },
          "default": "'cursor-hand'"
        },
        {
          "kind": "variable",
          "name": "cursorHandIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[cursorHandIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cursorHandIconName",
          "declaration": {
            "name": "cursorHandIconName",
            "module": "icon/shapes/cursor-hand.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorHandIcon",
          "declaration": {
            "name": "cursorHandIcon",
            "module": "icon/shapes/cursor-hand.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/cursor-move.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "cursorMoveIconName",
          "type": {
            "text": "string"
          },
          "default": "'cursor-move'"
        },
        {
          "kind": "variable",
          "name": "cursorMoveIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[cursorMoveIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cursorMoveIconName",
          "declaration": {
            "name": "cursorMoveIconName",
            "module": "icon/shapes/cursor-move.js"
          }
        },
        {
          "kind": "js",
          "name": "cursorMoveIcon",
          "declaration": {
            "name": "cursorMoveIcon",
            "module": "icon/shapes/cursor-move.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/curve-chart.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "curveChartIconName",
          "type": {
            "text": "string"
          },
          "default": "'curve-chart'"
        },
        {
          "kind": "variable",
          "name": "curveChartIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[curveChartIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "curveChartIconName",
          "declaration": {
            "name": "curveChartIconName",
            "module": "icon/shapes/curve-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "curveChartIcon",
          "declaration": {
            "name": "curveChartIcon",
            "module": "icon/shapes/curve-chart.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/dashboard.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "dashboardIconName",
          "type": {
            "text": "string"
          },
          "default": "'dashboard'"
        },
        {
          "kind": "variable",
          "name": "dashboardIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[dashboardIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "dashboardIconName",
          "declaration": {
            "name": "dashboardIconName",
            "module": "icon/shapes/dashboard.js"
          }
        },
        {
          "kind": "js",
          "name": "dashboardIcon",
          "declaration": {
            "name": "dashboardIcon",
            "module": "icon/shapes/dashboard.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/data-cluster.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "dataClusterIconName",
          "type": {
            "text": "string"
          },
          "default": "'data-cluster'"
        },
        {
          "kind": "variable",
          "name": "dataClusterIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[dataClusterIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "dataClusterIconName",
          "declaration": {
            "name": "dataClusterIconName",
            "module": "icon/shapes/data-cluster.js"
          }
        },
        {
          "kind": "js",
          "name": "dataClusterIcon",
          "declaration": {
            "name": "dataClusterIcon",
            "module": "icon/shapes/data-cluster.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/deploy.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "deployIconName",
          "type": {
            "text": "string"
          },
          "default": "'deploy'"
        },
        {
          "kind": "variable",
          "name": "deployIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[deployIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "deployIconName",
          "declaration": {
            "name": "deployIconName",
            "module": "icon/shapes/deploy.js"
          }
        },
        {
          "kind": "js",
          "name": "deployIcon",
          "declaration": {
            "name": "deployIcon",
            "module": "icon/shapes/deploy.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/details.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "detailsIconName",
          "type": {
            "text": "string"
          },
          "default": "'details'"
        },
        {
          "kind": "variable",
          "name": "detailsIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[detailsIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "detailsIconName",
          "declaration": {
            "name": "detailsIconName",
            "module": "icon/shapes/details.js"
          }
        },
        {
          "kind": "js",
          "name": "detailsIcon",
          "declaration": {
            "name": "detailsIcon",
            "module": "icon/shapes/details.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/devices.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "devicesIconName",
          "type": {
            "text": "string"
          },
          "default": "'devices'"
        },
        {
          "kind": "variable",
          "name": "devicesIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[devicesIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "devicesIconName",
          "declaration": {
            "name": "devicesIconName",
            "module": "icon/shapes/devices.js"
          }
        },
        {
          "kind": "js",
          "name": "devicesIcon",
          "declaration": {
            "name": "devicesIcon",
            "module": "icon/shapes/devices.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/digital-signature.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "digitalSignatureIconName",
          "type": {
            "text": "string"
          },
          "default": "'digital-signature'"
        },
        {
          "kind": "variable",
          "name": "digitalSignatureIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[digitalSignatureIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "digitalSignatureIconName",
          "declaration": {
            "name": "digitalSignatureIconName",
            "module": "icon/shapes/digital-signature.js"
          }
        },
        {
          "kind": "js",
          "name": "digitalSignatureIcon",
          "declaration": {
            "name": "digitalSignatureIcon",
            "module": "icon/shapes/digital-signature.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/disconnect.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "disconnectIconName",
          "type": {
            "text": "string"
          },
          "default": "'disconnect'"
        },
        {
          "kind": "variable",
          "name": "disconnectIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[disconnectIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "disconnectIconName",
          "declaration": {
            "name": "disconnectIconName",
            "module": "icon/shapes/disconnect.js"
          }
        },
        {
          "kind": "js",
          "name": "disconnectIcon",
          "declaration": {
            "name": "disconnectIcon",
            "module": "icon/shapes/disconnect.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/display.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "displayIconName",
          "type": {
            "text": "string"
          },
          "default": "'display'"
        },
        {
          "kind": "variable",
          "name": "displayIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[displayIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "displayIconName",
          "declaration": {
            "name": "displayIconName",
            "module": "icon/shapes/display.js"
          }
        },
        {
          "kind": "js",
          "name": "displayIcon",
          "declaration": {
            "name": "displayIcon",
            "module": "icon/shapes/display.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/dollar-bill.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "dollarBillIconName",
          "type": {
            "text": "string"
          },
          "default": "'dollar-bill'"
        },
        {
          "kind": "variable",
          "name": "dollarBillIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[dollarBillIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "dollarBillIconName",
          "declaration": {
            "name": "dollarBillIconName",
            "module": "icon/shapes/dollar-bill.js"
          }
        },
        {
          "kind": "js",
          "name": "dollarBillIcon",
          "declaration": {
            "name": "dollarBillIcon",
            "module": "icon/shapes/dollar-bill.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/dollar.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "dollarIconName",
          "type": {
            "text": "string"
          },
          "default": "'dollar'"
        },
        {
          "kind": "variable",
          "name": "dollarIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[dollarIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "dollarIconName",
          "declaration": {
            "name": "dollarIconName",
            "module": "icon/shapes/dollar.js"
          }
        },
        {
          "kind": "js",
          "name": "dollarIcon",
          "declaration": {
            "name": "dollarIcon",
            "module": "icon/shapes/dollar.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/dot-circle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "dotCircleIconName",
          "type": {
            "text": "string"
          },
          "default": "'dot-circle'"
        },
        {
          "kind": "variable",
          "name": "dotCircleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[dotCircleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "dotCircleIconName",
          "declaration": {
            "name": "dotCircleIconName",
            "module": "icon/shapes/dot-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "dotCircleIcon",
          "declaration": {
            "name": "dotCircleIcon",
            "module": "icon/shapes/dot-circle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/download-cloud.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "downloadCloudIconName",
          "type": {
            "text": "string"
          },
          "default": "'download-cloud'"
        },
        {
          "kind": "variable",
          "name": "downloadCloudIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[downloadCloudIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "downloadCloudIconName",
          "declaration": {
            "name": "downloadCloudIconName",
            "module": "icon/shapes/download-cloud.js"
          }
        },
        {
          "kind": "js",
          "name": "downloadCloudIcon",
          "declaration": {
            "name": "downloadCloudIcon",
            "module": "icon/shapes/download-cloud.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/download.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "downloadIconName",
          "type": {
            "text": "string"
          },
          "default": "'download'"
        },
        {
          "kind": "variable",
          "name": "downloadIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[downloadIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "downloadIconName",
          "declaration": {
            "name": "downloadIconName",
            "module": "icon/shapes/download.js"
          }
        },
        {
          "kind": "js",
          "name": "downloadIcon",
          "declaration": {
            "name": "downloadIcon",
            "module": "icon/shapes/download.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/drag-handle-corner.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "dragHandleCornerIconName",
          "type": {
            "text": "string"
          },
          "default": "'drag-handle-corner'"
        },
        {
          "kind": "variable",
          "name": "dragHandleCornerIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[dragHandleCornerIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "dragHandleCornerIconName",
          "declaration": {
            "name": "dragHandleCornerIconName",
            "module": "icon/shapes/drag-handle-corner.js"
          }
        },
        {
          "kind": "js",
          "name": "dragHandleCornerIcon",
          "declaration": {
            "name": "dragHandleCornerIcon",
            "module": "icon/shapes/drag-handle-corner.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/drag-handle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "dragHandleIconName",
          "type": {
            "text": "string"
          },
          "default": "'drag-handle'"
        },
        {
          "kind": "variable",
          "name": "dragHandleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[dragHandleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "dragHandleIconName",
          "declaration": {
            "name": "dragHandleIconName",
            "module": "icon/shapes/drag-handle.js"
          }
        },
        {
          "kind": "js",
          "name": "dragHandleIcon",
          "declaration": {
            "name": "dragHandleIcon",
            "module": "icon/shapes/drag-handle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/e-check.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "eCheckIconName",
          "type": {
            "text": "string"
          },
          "default": "'e-check'"
        },
        {
          "kind": "variable",
          "name": "eCheckIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[eCheckIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "eCheckIconName",
          "declaration": {
            "name": "eCheckIconName",
            "module": "icon/shapes/e-check.js"
          }
        },
        {
          "kind": "js",
          "name": "eCheckIcon",
          "declaration": {
            "name": "eCheckIcon",
            "module": "icon/shapes/e-check.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/ellipsis-horizontal.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ellipsisHorizontalIconName",
          "type": {
            "text": "string"
          },
          "default": "'ellipsis-horizontal'"
        },
        {
          "kind": "variable",
          "name": "ellipsisHorizontalIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[ellipsisHorizontalIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ellipsisHorizontalIconName",
          "declaration": {
            "name": "ellipsisHorizontalIconName",
            "module": "icon/shapes/ellipsis-horizontal.js"
          }
        },
        {
          "kind": "js",
          "name": "ellipsisHorizontalIcon",
          "declaration": {
            "name": "ellipsisHorizontalIcon",
            "module": "icon/shapes/ellipsis-horizontal.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/ellipsis-vertical.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ellipsisVerticalIconName",
          "type": {
            "text": "string"
          },
          "default": "'ellipsis-vertical'"
        },
        {
          "kind": "variable",
          "name": "ellipsisVerticalIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[ellipsisVerticalIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ellipsisVerticalIconName",
          "declaration": {
            "name": "ellipsisVerticalIconName",
            "module": "icon/shapes/ellipsis-vertical.js"
          }
        },
        {
          "kind": "js",
          "name": "ellipsisVerticalIcon",
          "declaration": {
            "name": "ellipsisVerticalIcon",
            "module": "icon/shapes/ellipsis-vertical.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/employee-group.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "employeeGroupIconName",
          "type": {
            "text": "string"
          },
          "default": "'employee-group'"
        },
        {
          "kind": "variable",
          "name": "employeeGroupIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[employeeGroupIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "employeeGroupIconName",
          "declaration": {
            "name": "employeeGroupIconName",
            "module": "icon/shapes/employee-group.js"
          }
        },
        {
          "kind": "js",
          "name": "employeeGroupIcon",
          "declaration": {
            "name": "employeeGroupIcon",
            "module": "icon/shapes/employee-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/employee.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "employeeIconName",
          "type": {
            "text": "string"
          },
          "default": "'employee'"
        },
        {
          "kind": "variable",
          "name": "employeeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[employeeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "employeeIconName",
          "declaration": {
            "name": "employeeIconName",
            "module": "icon/shapes/employee.js"
          }
        },
        {
          "kind": "js",
          "name": "employeeIcon",
          "declaration": {
            "name": "employeeIcon",
            "module": "icon/shapes/employee.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/envelope.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "envelopeIconName",
          "type": {
            "text": "string"
          },
          "default": "'envelope'"
        },
        {
          "kind": "variable",
          "name": "envelopeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[envelopeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "envelopeIconName",
          "declaration": {
            "name": "envelopeIconName",
            "module": "icon/shapes/envelope.js"
          }
        },
        {
          "kind": "js",
          "name": "envelopeIcon",
          "declaration": {
            "name": "envelopeIcon",
            "module": "icon/shapes/envelope.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/eraser.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "eraserIconName",
          "type": {
            "text": "string"
          },
          "default": "'eraser'"
        },
        {
          "kind": "variable",
          "name": "eraserIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[eraserIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "eraserIconName",
          "declaration": {
            "name": "eraserIconName",
            "module": "icon/shapes/eraser.js"
          }
        },
        {
          "kind": "js",
          "name": "eraserIcon",
          "declaration": {
            "name": "eraserIcon",
            "module": "icon/shapes/eraser.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/error-mini.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "errorMiniIconName",
          "type": {
            "text": "string"
          },
          "default": "'error-mini'"
        },
        {
          "kind": "variable",
          "name": "errorMiniIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[errorMiniIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "errorMiniIconName",
          "declaration": {
            "name": "errorMiniIconName",
            "module": "icon/shapes/error-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "errorMiniIcon",
          "declaration": {
            "name": "errorMiniIcon",
            "module": "icon/shapes/error-mini.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/error-standard.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "errorStandardIconName",
          "type": {
            "text": "string"
          },
          "default": "'error-standard'"
        },
        {
          "kind": "variable",
          "name": "errorStandardIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[errorStandardIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "errorStandardIconName",
          "declaration": {
            "name": "errorStandardIconName",
            "module": "icon/shapes/error-standard.js"
          }
        },
        {
          "kind": "js",
          "name": "errorStandardIcon",
          "declaration": {
            "name": "errorStandardIcon",
            "module": "icon/shapes/error-standard.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/euro.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "euroIconName",
          "type": {
            "text": "string"
          },
          "default": "'euro'"
        },
        {
          "kind": "variable",
          "name": "euroIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[euroIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "euroIconName",
          "declaration": {
            "name": "euroIconName",
            "module": "icon/shapes/euro.js"
          }
        },
        {
          "kind": "js",
          "name": "euroIcon",
          "declaration": {
            "name": "euroIcon",
            "module": "icon/shapes/euro.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/event-mini.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "eventMiniIconName",
          "type": {
            "text": "string"
          },
          "default": "'event-mini'"
        },
        {
          "kind": "variable",
          "name": "eventMiniIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[eventMiniIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "eventMiniIconName",
          "declaration": {
            "name": "eventMiniIconName",
            "module": "icon/shapes/event-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "eventMiniIcon",
          "declaration": {
            "name": "eventMiniIcon",
            "module": "icon/shapes/event-mini.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/event.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "eventIconName",
          "type": {
            "text": "string"
          },
          "default": "'event'"
        },
        {
          "kind": "variable",
          "name": "eventIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[eventIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "eventIconName",
          "declaration": {
            "name": "eventIconName",
            "module": "icon/shapes/event.js"
          }
        },
        {
          "kind": "js",
          "name": "eventIcon",
          "declaration": {
            "name": "eventIcon",
            "module": "icon/shapes/event.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/exclamation-circle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "exclamationCircleIconName",
          "type": {
            "text": "string"
          },
          "default": "'exclamation-circle'"
        },
        {
          "kind": "variable",
          "name": "exclamationCircleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[exclamationCircleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "exclamationCircleIconName",
          "declaration": {
            "name": "exclamationCircleIconName",
            "module": "icon/shapes/exclamation-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "exclamationCircleIcon",
          "declaration": {
            "name": "exclamationCircleIcon",
            "module": "icon/shapes/exclamation-circle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/exclamation-triangle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "exclamationTriangleIconName",
          "type": {
            "text": "string"
          },
          "default": "'exclamation-triangle'"
        },
        {
          "kind": "variable",
          "name": "exclamationTriangleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[exclamationTriangleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "exclamationTriangleIconName",
          "declaration": {
            "name": "exclamationTriangleIconName",
            "module": "icon/shapes/exclamation-triangle.js"
          }
        },
        {
          "kind": "js",
          "name": "exclamationTriangleIcon",
          "declaration": {
            "name": "exclamationTriangleIcon",
            "module": "icon/shapes/exclamation-triangle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/expand-card.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "expandCardIconName",
          "type": {
            "text": "string"
          },
          "default": "'expand-card'"
        },
        {
          "kind": "variable",
          "name": "expandCardIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[expandCardIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "expandCardIconName",
          "declaration": {
            "name": "expandCardIconName",
            "module": "icon/shapes/expand-card.js"
          }
        },
        {
          "kind": "js",
          "name": "expandCardIcon",
          "declaration": {
            "name": "expandCardIcon",
            "module": "icon/shapes/expand-card.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/export.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "exportIconName",
          "type": {
            "text": "string"
          },
          "default": "'export'"
        },
        {
          "kind": "variable",
          "name": "exportIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[exportIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "exportIconName",
          "declaration": {
            "name": "exportIconName",
            "module": "icon/shapes/export.js"
          }
        },
        {
          "kind": "js",
          "name": "exportIcon",
          "declaration": {
            "name": "exportIcon",
            "module": "icon/shapes/export.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/eye-hide.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "eyeHideIconName",
          "type": {
            "text": "string"
          },
          "default": "'eye-hide'"
        },
        {
          "kind": "variable",
          "name": "eyeHideIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[eyeHideIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "eyeHideIconName",
          "declaration": {
            "name": "eyeHideIconName",
            "module": "icon/shapes/eye-hide.js"
          }
        },
        {
          "kind": "js",
          "name": "eyeHideIcon",
          "declaration": {
            "name": "eyeHideIcon",
            "module": "icon/shapes/eye-hide.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/eye.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "eyeIconName",
          "type": {
            "text": "string"
          },
          "default": "'eye'"
        },
        {
          "kind": "variable",
          "name": "eyeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[eyeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "eyeIconName",
          "declaration": {
            "name": "eyeIconName",
            "module": "icon/shapes/eye.js"
          }
        },
        {
          "kind": "js",
          "name": "eyeIcon",
          "declaration": {
            "name": "eyeIcon",
            "module": "icon/shapes/eye.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/factory.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "factoryIconName",
          "type": {
            "text": "string"
          },
          "default": "'factory'"
        },
        {
          "kind": "variable",
          "name": "factoryIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[factoryIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "factoryIconName",
          "declaration": {
            "name": "factoryIconName",
            "module": "icon/shapes/factory.js"
          }
        },
        {
          "kind": "js",
          "name": "factoryIcon",
          "declaration": {
            "name": "factoryIcon",
            "module": "icon/shapes/factory.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/fast-forward.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "fastForwardIconName",
          "type": {
            "text": "string"
          },
          "default": "'fast-forward'"
        },
        {
          "kind": "variable",
          "name": "fastForwardIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[fastForwardIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fastForwardIconName",
          "declaration": {
            "name": "fastForwardIconName",
            "module": "icon/shapes/fast-forward.js"
          }
        },
        {
          "kind": "js",
          "name": "fastForwardIcon",
          "declaration": {
            "name": "fastForwardIcon",
            "module": "icon/shapes/fast-forward.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/ferry.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ferryIconName",
          "type": {
            "text": "string"
          },
          "default": "'ferry'"
        },
        {
          "kind": "variable",
          "name": "ferryIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[ferryIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ferryIconName",
          "declaration": {
            "name": "ferryIconName",
            "module": "icon/shapes/ferry.js"
          }
        },
        {
          "kind": "js",
          "name": "ferryIcon",
          "declaration": {
            "name": "ferryIcon",
            "module": "icon/shapes/ferry.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/file-group.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "fileGroupIconName",
          "type": {
            "text": "string"
          },
          "default": "'file-group'"
        },
        {
          "kind": "variable",
          "name": "fileGroupIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[fileGroupIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fileGroupIconName",
          "declaration": {
            "name": "fileGroupIconName",
            "module": "icon/shapes/file-group.js"
          }
        },
        {
          "kind": "js",
          "name": "fileGroupIcon",
          "declaration": {
            "name": "fileGroupIcon",
            "module": "icon/shapes/file-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/file-settings.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "fileSettingsIconName",
          "type": {
            "text": "string"
          },
          "default": "'file-settings'"
        },
        {
          "kind": "variable",
          "name": "fileSettingsIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[fileSettingsIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fileSettingsIconName",
          "declaration": {
            "name": "fileSettingsIconName",
            "module": "icon/shapes/file-settings.js"
          }
        },
        {
          "kind": "js",
          "name": "fileSettingsIcon",
          "declaration": {
            "name": "fileSettingsIcon",
            "module": "icon/shapes/file-settings.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/file-share-2.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "fileShare2IconName",
          "type": {
            "text": "string"
          },
          "default": "'file-share-2'"
        },
        {
          "kind": "variable",
          "name": "fileShare2Icon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[fileShare2IconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fileShare2IconName",
          "declaration": {
            "name": "fileShare2IconName",
            "module": "icon/shapes/file-share-2.js"
          }
        },
        {
          "kind": "js",
          "name": "fileShare2Icon",
          "declaration": {
            "name": "fileShare2Icon",
            "module": "icon/shapes/file-share-2.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/file-share.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "fileShareIconName",
          "type": {
            "text": "string"
          },
          "default": "'file-share'"
        },
        {
          "kind": "variable",
          "name": "fileShareIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[fileShareIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fileShareIconName",
          "declaration": {
            "name": "fileShareIconName",
            "module": "icon/shapes/file-share.js"
          }
        },
        {
          "kind": "js",
          "name": "fileShareIcon",
          "declaration": {
            "name": "fileShareIcon",
            "module": "icon/shapes/file-share.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/file-zip.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "fileZipIconName",
          "type": {
            "text": "string"
          },
          "default": "'file-zip'"
        },
        {
          "kind": "variable",
          "name": "fileZipIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[fileZipIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fileZipIconName",
          "declaration": {
            "name": "fileZipIconName",
            "module": "icon/shapes/file-zip.js"
          }
        },
        {
          "kind": "js",
          "name": "fileZipIcon",
          "declaration": {
            "name": "fileZipIcon",
            "module": "icon/shapes/file-zip.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/file.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "fileIconName",
          "type": {
            "text": "string"
          },
          "default": "'file'"
        },
        {
          "kind": "variable",
          "name": "fileIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[fileIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fileIconName",
          "declaration": {
            "name": "fileIconName",
            "module": "icon/shapes/file.js"
          }
        },
        {
          "kind": "js",
          "name": "fileIcon",
          "declaration": {
            "name": "fileIcon",
            "module": "icon/shapes/file.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/film-strip.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "filmStripIconName",
          "type": {
            "text": "string"
          },
          "default": "'film-strip'"
        },
        {
          "kind": "variable",
          "name": "filmStripIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[filmStripIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "filmStripIconName",
          "declaration": {
            "name": "filmStripIconName",
            "module": "icon/shapes/film-strip.js"
          }
        },
        {
          "kind": "js",
          "name": "filmStripIcon",
          "declaration": {
            "name": "filmStripIcon",
            "module": "icon/shapes/film-strip.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/filter-2.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "filter2IconName",
          "type": {
            "text": "string"
          },
          "default": "'filter-2'"
        },
        {
          "kind": "variable",
          "name": "filter2Icon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[filter2IconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "filter2IconName",
          "declaration": {
            "name": "filter2IconName",
            "module": "icon/shapes/filter-2.js"
          }
        },
        {
          "kind": "js",
          "name": "filter2Icon",
          "declaration": {
            "name": "filter2Icon",
            "module": "icon/shapes/filter-2.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/filter-grid-circle-mini.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "filterGridCircleMiniIconName",
          "type": {
            "text": "string"
          },
          "default": "'filter-grid-circle-mini'"
        },
        {
          "kind": "variable",
          "name": "filterGridCircleMiniIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[filterGridCircleMiniIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "filterGridCircleMiniIconName",
          "declaration": {
            "name": "filterGridCircleMiniIconName",
            "module": "icon/shapes/filter-grid-circle-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "filterGridCircleMiniIcon",
          "declaration": {
            "name": "filterGridCircleMiniIcon",
            "module": "icon/shapes/filter-grid-circle-mini.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/filter-grid-circle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "filterGridCircleIconName",
          "type": {
            "text": "string"
          },
          "default": "'filter-grid-circle'"
        },
        {
          "kind": "variable",
          "name": "filterGridCircleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[filterGridCircleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "filterGridCircleIconName",
          "declaration": {
            "name": "filterGridCircleIconName",
            "module": "icon/shapes/filter-grid-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "filterGridCircleIcon",
          "declaration": {
            "name": "filterGridCircleIcon",
            "module": "icon/shapes/filter-grid-circle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/filter-grid-mini.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "filterGridMiniIconName",
          "type": {
            "text": "string"
          },
          "default": "'filter-grid-mini'"
        },
        {
          "kind": "variable",
          "name": "filterGridMiniIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[filterGridMiniIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "filterGridMiniIconName",
          "declaration": {
            "name": "filterGridMiniIconName",
            "module": "icon/shapes/filter-grid-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "filterGridMiniIcon",
          "declaration": {
            "name": "filterGridMiniIcon",
            "module": "icon/shapes/filter-grid-mini.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/filter-grid.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "filterGridIconName",
          "type": {
            "text": "string"
          },
          "default": "'filter-grid'"
        },
        {
          "kind": "variable",
          "name": "filterGridIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[filterGridIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "filterGridIconName",
          "declaration": {
            "name": "filterGridIconName",
            "module": "icon/shapes/filter-grid.js"
          }
        },
        {
          "kind": "js",
          "name": "filterGridIcon",
          "declaration": {
            "name": "filterGridIcon",
            "module": "icon/shapes/filter-grid.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/filter-off.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "filterOffIconName",
          "type": {
            "text": "string"
          },
          "default": "'filter-off'"
        },
        {
          "kind": "variable",
          "name": "filterOffIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[filterOffIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "filterOffIconName",
          "declaration": {
            "name": "filterOffIconName",
            "module": "icon/shapes/filter-off.js"
          }
        },
        {
          "kind": "js",
          "name": "filterOffIcon",
          "declaration": {
            "name": "filterOffIcon",
            "module": "icon/shapes/filter-off.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/filter.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "filterIconName",
          "type": {
            "text": "string"
          },
          "default": "'filter'"
        },
        {
          "kind": "variable",
          "name": "filterIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[filterIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "filterIconName",
          "declaration": {
            "name": "filterIconName",
            "module": "icon/shapes/filter.js"
          }
        },
        {
          "kind": "js",
          "name": "filterIcon",
          "declaration": {
            "name": "filterIcon",
            "module": "icon/shapes/filter.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/firewall.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "firewallIconName",
          "type": {
            "text": "string"
          },
          "default": "'firewall'"
        },
        {
          "kind": "variable",
          "name": "firewallIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[firewallIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "firewallIconName",
          "declaration": {
            "name": "firewallIconName",
            "module": "icon/shapes/firewall.js"
          }
        },
        {
          "kind": "js",
          "name": "firewallIcon",
          "declaration": {
            "name": "firewallIcon",
            "module": "icon/shapes/firewall.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/first-aid.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "firstAidIconName",
          "type": {
            "text": "string"
          },
          "default": "'first-aid'"
        },
        {
          "kind": "variable",
          "name": "firstAidIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[firstAidIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "firstAidIconName",
          "declaration": {
            "name": "firstAidIconName",
            "module": "icon/shapes/first-aid.js"
          }
        },
        {
          "kind": "js",
          "name": "firstAidIcon",
          "declaration": {
            "name": "firstAidIcon",
            "module": "icon/shapes/first-aid.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/fish.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "fishIconName",
          "type": {
            "text": "string"
          },
          "default": "'fish'"
        },
        {
          "kind": "variable",
          "name": "fishIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[fishIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fishIconName",
          "declaration": {
            "name": "fishIconName",
            "module": "icon/shapes/fish.js"
          }
        },
        {
          "kind": "js",
          "name": "fishIcon",
          "declaration": {
            "name": "fishIcon",
            "module": "icon/shapes/fish.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/flag.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "flagIconName",
          "type": {
            "text": "string"
          },
          "default": "'flag'"
        },
        {
          "kind": "variable",
          "name": "flagIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[flagIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "flagIconName",
          "declaration": {
            "name": "flagIconName",
            "module": "icon/shapes/flag.js"
          }
        },
        {
          "kind": "js",
          "name": "flagIcon",
          "declaration": {
            "name": "flagIcon",
            "module": "icon/shapes/flag.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/flame.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "flameIconName",
          "type": {
            "text": "string"
          },
          "default": "'flame'"
        },
        {
          "kind": "variable",
          "name": "flameIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[flameIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "flameIconName",
          "declaration": {
            "name": "flameIconName",
            "module": "icon/shapes/flame.js"
          }
        },
        {
          "kind": "js",
          "name": "flameIcon",
          "declaration": {
            "name": "flameIcon",
            "module": "icon/shapes/flame.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/flask.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "flaskIconName",
          "type": {
            "text": "string"
          },
          "default": "'flask'"
        },
        {
          "kind": "variable",
          "name": "flaskIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[flaskIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "flaskIconName",
          "declaration": {
            "name": "flaskIconName",
            "module": "icon/shapes/flask.js"
          }
        },
        {
          "kind": "js",
          "name": "flaskIcon",
          "declaration": {
            "name": "flaskIcon",
            "module": "icon/shapes/flask.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/floppy.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "floppyIconName",
          "type": {
            "text": "string"
          },
          "default": "'floppy'"
        },
        {
          "kind": "variable",
          "name": "floppyIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[floppyIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "floppyIconName",
          "declaration": {
            "name": "floppyIconName",
            "module": "icon/shapes/floppy.js"
          }
        },
        {
          "kind": "js",
          "name": "floppyIcon",
          "declaration": {
            "name": "floppyIcon",
            "module": "icon/shapes/floppy.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/folder-open.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "folderOpenIconName",
          "type": {
            "text": "string"
          },
          "default": "'folder-open'"
        },
        {
          "kind": "variable",
          "name": "folderOpenIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[folderOpenIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "folderOpenIconName",
          "declaration": {
            "name": "folderOpenIconName",
            "module": "icon/shapes/folder-open.js"
          }
        },
        {
          "kind": "js",
          "name": "folderOpenIcon",
          "declaration": {
            "name": "folderOpenIcon",
            "module": "icon/shapes/folder-open.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/folder.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "folderIconName",
          "type": {
            "text": "string"
          },
          "default": "'folder'"
        },
        {
          "kind": "variable",
          "name": "folderIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[folderIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "folderIconName",
          "declaration": {
            "name": "folderIconName",
            "module": "icon/shapes/folder.js"
          }
        },
        {
          "kind": "js",
          "name": "folderIcon",
          "declaration": {
            "name": "folderIcon",
            "module": "icon/shapes/folder.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/font-size.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "fontSizeIconName",
          "type": {
            "text": "string"
          },
          "default": "'font-size'"
        },
        {
          "kind": "variable",
          "name": "fontSizeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[fontSizeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fontSizeIconName",
          "declaration": {
            "name": "fontSizeIconName",
            "module": "icon/shapes/font-size.js"
          }
        },
        {
          "kind": "js",
          "name": "fontSizeIcon",
          "declaration": {
            "name": "fontSizeIcon",
            "module": "icon/shapes/font-size.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/forking.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "forkingIconName",
          "type": {
            "text": "string"
          },
          "default": "'forking'"
        },
        {
          "kind": "variable",
          "name": "forkingIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[forkingIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "forkingIconName",
          "declaration": {
            "name": "forkingIconName",
            "module": "icon/shapes/forking.js"
          }
        },
        {
          "kind": "js",
          "name": "forkingIcon",
          "declaration": {
            "name": "forkingIcon",
            "module": "icon/shapes/forking.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/form.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "formIconName",
          "type": {
            "text": "string"
          },
          "default": "'form'"
        },
        {
          "kind": "variable",
          "name": "formIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[formIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "formIconName",
          "declaration": {
            "name": "formIconName",
            "module": "icon/shapes/form.js"
          }
        },
        {
          "kind": "js",
          "name": "formIcon",
          "declaration": {
            "name": "formIcon",
            "module": "icon/shapes/form.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/fuel.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "fuelIconName",
          "type": {
            "text": "string"
          },
          "default": "'fuel'"
        },
        {
          "kind": "variable",
          "name": "fuelIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[fuelIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fuelIconName",
          "declaration": {
            "name": "fuelIconName",
            "module": "icon/shapes/fuel.js"
          }
        },
        {
          "kind": "js",
          "name": "fuelIcon",
          "declaration": {
            "name": "fuelIcon",
            "module": "icon/shapes/fuel.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/gavel.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "gavelIconName",
          "type": {
            "text": "string"
          },
          "default": "'gavel'"
        },
        {
          "kind": "variable",
          "name": "gavelIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[gavelIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "gavelIconName",
          "declaration": {
            "name": "gavelIconName",
            "module": "icon/shapes/gavel.js"
          }
        },
        {
          "kind": "js",
          "name": "gavelIcon",
          "declaration": {
            "name": "gavelIcon",
            "module": "icon/shapes/gavel.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/grid-chart.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "gridChartIconName",
          "type": {
            "text": "string"
          },
          "default": "'grid-chart'"
        },
        {
          "kind": "variable",
          "name": "gridChartIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[gridChartIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "gridChartIconName",
          "declaration": {
            "name": "gridChartIconName",
            "module": "icon/shapes/grid-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "gridChartIcon",
          "declaration": {
            "name": "gridChartIcon",
            "module": "icon/shapes/grid-chart.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/grid-view.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "gridViewIconName",
          "type": {
            "text": "string"
          },
          "default": "'grid-view'"
        },
        {
          "kind": "variable",
          "name": "gridViewIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[gridViewIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "gridViewIconName",
          "declaration": {
            "name": "gridViewIconName",
            "module": "icon/shapes/grid-view.js"
          }
        },
        {
          "kind": "js",
          "name": "gridViewIcon",
          "declaration": {
            "name": "gridViewIcon",
            "module": "icon/shapes/grid-view.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/half-star.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "halfStarIconName",
          "type": {
            "text": "string"
          },
          "default": "'half-star'"
        },
        {
          "kind": "variable",
          "name": "halfStarIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[halfStarIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "halfStarIconName",
          "declaration": {
            "name": "halfStarIconName",
            "module": "icon/shapes/half-star.js"
          }
        },
        {
          "kind": "js",
          "name": "halfStarIcon",
          "declaration": {
            "name": "halfStarIcon",
            "module": "icon/shapes/half-star.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/happy-face.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "happyFaceIconName",
          "type": {
            "text": "string"
          },
          "default": "'happy-face'"
        },
        {
          "kind": "variable",
          "name": "happyFaceIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[happyFaceIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "happyFaceIconName",
          "declaration": {
            "name": "happyFaceIconName",
            "module": "icon/shapes/happy-face.js"
          }
        },
        {
          "kind": "js",
          "name": "happyFaceIcon",
          "declaration": {
            "name": "happyFaceIcon",
            "module": "icon/shapes/happy-face.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/hard-disk.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "hardDiskIconName",
          "type": {
            "text": "string"
          },
          "default": "'hard-disk'"
        },
        {
          "kind": "variable",
          "name": "hardDiskIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[hardDiskIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hardDiskIconName",
          "declaration": {
            "name": "hardDiskIconName",
            "module": "icon/shapes/hard-disk.js"
          }
        },
        {
          "kind": "js",
          "name": "hardDiskIcon",
          "declaration": {
            "name": "hardDiskIcon",
            "module": "icon/shapes/hard-disk.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/hard-drive-disks.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "hardDriveDisksIconName",
          "type": {
            "text": "string"
          },
          "default": "'hard-drive-disks'"
        },
        {
          "kind": "variable",
          "name": "hardDriveDisksIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[hardDriveDisksIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hardDriveDisksIconName",
          "declaration": {
            "name": "hardDriveDisksIconName",
            "module": "icon/shapes/hard-drive-disks.js"
          }
        },
        {
          "kind": "js",
          "name": "hardDriveDisksIcon",
          "declaration": {
            "name": "hardDriveDisksIcon",
            "module": "icon/shapes/hard-drive-disks.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/hard-drive.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "hardDriveIconName",
          "type": {
            "text": "string"
          },
          "default": "'hard-drive'"
        },
        {
          "kind": "variable",
          "name": "hardDriveIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[hardDriveIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hardDriveIconName",
          "declaration": {
            "name": "hardDriveIconName",
            "module": "icon/shapes/hard-drive.js"
          }
        },
        {
          "kind": "js",
          "name": "hardDriveIcon",
          "declaration": {
            "name": "hardDriveIcon",
            "module": "icon/shapes/hard-drive.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/hashtag.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "hashtagIconName",
          "type": {
            "text": "string"
          },
          "default": "'hashtag'"
        },
        {
          "kind": "variable",
          "name": "hashtagIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[hashtagIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hashtagIconName",
          "declaration": {
            "name": "hashtagIconName",
            "module": "icon/shapes/hashtag.js"
          }
        },
        {
          "kind": "js",
          "name": "hashtagIcon",
          "declaration": {
            "name": "hashtagIcon",
            "module": "icon/shapes/hashtag.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/headphones.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "headphonesIconName",
          "type": {
            "text": "string"
          },
          "default": "'headphones'"
        },
        {
          "kind": "variable",
          "name": "headphonesIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[headphonesIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "headphonesIconName",
          "declaration": {
            "name": "headphonesIconName",
            "module": "icon/shapes/headphones.js"
          }
        },
        {
          "kind": "js",
          "name": "headphonesIcon",
          "declaration": {
            "name": "headphonesIcon",
            "module": "icon/shapes/headphones.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/heart-broken.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "heartBrokenIconName",
          "type": {
            "text": "string"
          },
          "default": "'heart-broken'"
        },
        {
          "kind": "variable",
          "name": "heartBrokenIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[heartBrokenIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "heartBrokenIconName",
          "declaration": {
            "name": "heartBrokenIconName",
            "module": "icon/shapes/heart-broken.js"
          }
        },
        {
          "kind": "js",
          "name": "heartBrokenIcon",
          "declaration": {
            "name": "heartBrokenIcon",
            "module": "icon/shapes/heart-broken.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/heart.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "heartIconName",
          "type": {
            "text": "string"
          },
          "default": "'heart'"
        },
        {
          "kind": "variable",
          "name": "heartIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[heartIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "heartIconName",
          "declaration": {
            "name": "heartIconName",
            "module": "icon/shapes/heart.js"
          }
        },
        {
          "kind": "js",
          "name": "heartIcon",
          "declaration": {
            "name": "heartIcon",
            "module": "icon/shapes/heart.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/heat-map.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "heatMapIconName",
          "type": {
            "text": "string"
          },
          "default": "'heat-map'"
        },
        {
          "kind": "variable",
          "name": "heatMapIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[heatMapIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "heatMapIconName",
          "declaration": {
            "name": "heatMapIconName",
            "module": "icon/shapes/heat-map.js"
          }
        },
        {
          "kind": "js",
          "name": "heatMapIcon",
          "declaration": {
            "name": "heatMapIcon",
            "module": "icon/shapes/heat-map.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/helix.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "helixIconName",
          "type": {
            "text": "string"
          },
          "default": "'helix'"
        },
        {
          "kind": "variable",
          "name": "helixIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[helixIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "helixIconName",
          "declaration": {
            "name": "helixIconName",
            "module": "icon/shapes/helix.js"
          }
        },
        {
          "kind": "js",
          "name": "helixIcon",
          "declaration": {
            "name": "helixIcon",
            "module": "icon/shapes/helix.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/help-info.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "helpInfoIconName",
          "type": {
            "text": "string"
          },
          "default": "'help-info'"
        },
        {
          "kind": "variable",
          "name": "helpInfoIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[helpInfoIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "helpInfoIconName",
          "declaration": {
            "name": "helpInfoIconName",
            "module": "icon/shapes/help-info.js"
          }
        },
        {
          "kind": "js",
          "name": "helpInfoIcon",
          "declaration": {
            "name": "helpInfoIcon",
            "module": "icon/shapes/help-info.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/help.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "helpIconName",
          "type": {
            "text": "string"
          },
          "default": "'help'"
        },
        {
          "kind": "variable",
          "name": "helpIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[helpIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "helpIconName",
          "declaration": {
            "name": "helpIconName",
            "module": "icon/shapes/help.js"
          }
        },
        {
          "kind": "js",
          "name": "helpIcon",
          "declaration": {
            "name": "helpIcon",
            "module": "icon/shapes/help.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/highlighter.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "highlighterIconName",
          "type": {
            "text": "string"
          },
          "default": "'highlighter'"
        },
        {
          "kind": "variable",
          "name": "highlighterIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[highlighterIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "highlighterIconName",
          "declaration": {
            "name": "highlighterIconName",
            "module": "icon/shapes/highlighter.js"
          }
        },
        {
          "kind": "js",
          "name": "highlighterIcon",
          "declaration": {
            "name": "highlighterIcon",
            "module": "icon/shapes/highlighter.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/history.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "historyIconName",
          "type": {
            "text": "string"
          },
          "default": "'history'"
        },
        {
          "kind": "variable",
          "name": "historyIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[historyIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "historyIconName",
          "declaration": {
            "name": "historyIconName",
            "module": "icon/shapes/history.js"
          }
        },
        {
          "kind": "js",
          "name": "historyIcon",
          "declaration": {
            "name": "historyIcon",
            "module": "icon/shapes/history.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/home.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "homeIconName",
          "type": {
            "text": "string"
          },
          "default": "'home'"
        },
        {
          "kind": "variable",
          "name": "homeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[homeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "homeIconName",
          "declaration": {
            "name": "homeIconName",
            "module": "icon/shapes/home.js"
          }
        },
        {
          "kind": "js",
          "name": "homeIcon",
          "declaration": {
            "name": "homeIcon",
            "module": "icon/shapes/home.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/host-group.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "hostGroupIconName",
          "type": {
            "text": "string"
          },
          "default": "'host-group'"
        },
        {
          "kind": "variable",
          "name": "hostGroupIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[hostGroupIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hostGroupIconName",
          "declaration": {
            "name": "hostGroupIconName",
            "module": "icon/shapes/host-group.js"
          }
        },
        {
          "kind": "js",
          "name": "hostGroupIcon",
          "declaration": {
            "name": "hostGroupIcon",
            "module": "icon/shapes/host-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/host.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "hostIconName",
          "type": {
            "text": "string"
          },
          "default": "'host'"
        },
        {
          "kind": "variable",
          "name": "hostIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[hostIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hostIconName",
          "declaration": {
            "name": "hostIconName",
            "module": "icon/shapes/host.js"
          }
        },
        {
          "kind": "js",
          "name": "hostIcon",
          "declaration": {
            "name": "hostIcon",
            "module": "icon/shapes/host.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/hourglass.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "hourglassIconName",
          "type": {
            "text": "string"
          },
          "default": "'hourglass'"
        },
        {
          "kind": "variable",
          "name": "hourglassIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[hourglassIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hourglassIconName",
          "declaration": {
            "name": "hourglassIconName",
            "module": "icon/shapes/hourglass.js"
          }
        },
        {
          "kind": "js",
          "name": "hourglassIcon",
          "declaration": {
            "name": "hourglassIcon",
            "module": "icon/shapes/hourglass.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/iconTemplate.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "tmplIconName",
          "type": {
            "text": "string"
          },
          "default": "'tmpl'"
        },
        {
          "kind": "variable",
          "name": "tmplIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[tmplIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tmplIconName",
          "declaration": {
            "name": "tmplIconName",
            "module": "icon/shapes/iconTemplate.js"
          }
        },
        {
          "kind": "js",
          "name": "tmplIcon",
          "declaration": {
            "name": "tmplIcon",
            "module": "icon/shapes/iconTemplate.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/id-badge.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "idBadgeIconName",
          "type": {
            "text": "string"
          },
          "default": "'id-badge'"
        },
        {
          "kind": "variable",
          "name": "idBadgeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[idBadgeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "idBadgeIconName",
          "declaration": {
            "name": "idBadgeIconName",
            "module": "icon/shapes/id-badge.js"
          }
        },
        {
          "kind": "js",
          "name": "idBadgeIcon",
          "declaration": {
            "name": "idBadgeIcon",
            "module": "icon/shapes/id-badge.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/image-gallery.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "imageGalleryIconName",
          "type": {
            "text": "string"
          },
          "default": "'image-gallery'"
        },
        {
          "kind": "variable",
          "name": "imageGalleryIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[imageGalleryIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "imageGalleryIconName",
          "declaration": {
            "name": "imageGalleryIconName",
            "module": "icon/shapes/image-gallery.js"
          }
        },
        {
          "kind": "js",
          "name": "imageGalleryIcon",
          "declaration": {
            "name": "imageGalleryIcon",
            "module": "icon/shapes/image-gallery.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/image.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "imageIconName",
          "type": {
            "text": "string"
          },
          "default": "'image'"
        },
        {
          "kind": "variable",
          "name": "imageIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[imageIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "imageIconName",
          "declaration": {
            "name": "imageIconName",
            "module": "icon/shapes/image.js"
          }
        },
        {
          "kind": "js",
          "name": "imageIcon",
          "declaration": {
            "name": "imageIcon",
            "module": "icon/shapes/image.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/import.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "importIconName",
          "type": {
            "text": "string"
          },
          "default": "'import'"
        },
        {
          "kind": "variable",
          "name": "importIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[importIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "importIconName",
          "declaration": {
            "name": "importIconName",
            "module": "icon/shapes/import.js"
          }
        },
        {
          "kind": "js",
          "name": "importIcon",
          "declaration": {
            "name": "importIcon",
            "module": "icon/shapes/import.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/inbox.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "inboxIconName",
          "type": {
            "text": "string"
          },
          "default": "'inbox'"
        },
        {
          "kind": "variable",
          "name": "inboxIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[inboxIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "inboxIconName",
          "declaration": {
            "name": "inboxIconName",
            "module": "icon/shapes/inbox.js"
          }
        },
        {
          "kind": "js",
          "name": "inboxIcon",
          "declaration": {
            "name": "inboxIcon",
            "module": "icon/shapes/inbox.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/indent.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "indentIconName",
          "type": {
            "text": "string"
          },
          "default": "'indent'"
        },
        {
          "kind": "variable",
          "name": "indentIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[indentIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "indentIconName",
          "declaration": {
            "name": "indentIconName",
            "module": "icon/shapes/indent.js"
          }
        },
        {
          "kind": "js",
          "name": "indentIcon",
          "declaration": {
            "name": "indentIcon",
            "module": "icon/shapes/indent.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/inductor.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "inductorIconName",
          "type": {
            "text": "string"
          },
          "default": "'inductor'"
        },
        {
          "kind": "variable",
          "name": "inductorIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[inductorIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "inductorIconName",
          "declaration": {
            "name": "inductorIconName",
            "module": "icon/shapes/inductor.js"
          }
        },
        {
          "kind": "js",
          "name": "inductorIcon",
          "declaration": {
            "name": "inductorIcon",
            "module": "icon/shapes/inductor.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/info-circle-mini.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "infoCircleMiniIconName",
          "type": {
            "text": "string"
          },
          "default": "'info-circle-mini'"
        },
        {
          "kind": "variable",
          "name": "infoCircleMiniIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[infoCircleMiniIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "infoCircleMiniIconName",
          "declaration": {
            "name": "infoCircleMiniIconName",
            "module": "icon/shapes/info-circle-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "infoCircleMiniIcon",
          "declaration": {
            "name": "infoCircleMiniIcon",
            "module": "icon/shapes/info-circle-mini.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/info-circle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "infoCircleIconName",
          "type": {
            "text": "string"
          },
          "default": "'info-circle'"
        },
        {
          "kind": "variable",
          "name": "infoCircleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[infoCircleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "infoCircleIconName",
          "declaration": {
            "name": "infoCircleIconName",
            "module": "icon/shapes/info-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "infoCircleIcon",
          "declaration": {
            "name": "infoCircleIcon",
            "module": "icon/shapes/info-circle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/info-standard.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "infoStandardIconName",
          "type": {
            "text": "string"
          },
          "default": "'info-standard'"
        },
        {
          "kind": "variable",
          "name": "infoStandardIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[infoStandardIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "infoStandardIconName",
          "declaration": {
            "name": "infoStandardIconName",
            "module": "icon/shapes/info-standard.js"
          }
        },
        {
          "kind": "js",
          "name": "infoStandardIcon",
          "declaration": {
            "name": "infoStandardIcon",
            "module": "icon/shapes/info-standard.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/install.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "installIconName",
          "type": {
            "text": "string"
          },
          "default": "'install'"
        },
        {
          "kind": "variable",
          "name": "installIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[installIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "installIconName",
          "declaration": {
            "name": "installIconName",
            "module": "icon/shapes/install.js"
          }
        },
        {
          "kind": "js",
          "name": "installIcon",
          "declaration": {
            "name": "installIcon",
            "module": "icon/shapes/install.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/internet-of-things.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "internetOfThingsIconName",
          "type": {
            "text": "string"
          },
          "default": "'internet-of-things'"
        },
        {
          "kind": "variable",
          "name": "internetOfThingsIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[internetOfThingsIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "internetOfThingsIconName",
          "declaration": {
            "name": "internetOfThingsIconName",
            "module": "icon/shapes/internet-of-things.js"
          }
        },
        {
          "kind": "js",
          "name": "internetOfThingsIcon",
          "declaration": {
            "name": "internetOfThingsIcon",
            "module": "icon/shapes/internet-of-things.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/italic.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "italicIconName",
          "type": {
            "text": "string"
          },
          "default": "'italic'"
        },
        {
          "kind": "variable",
          "name": "italicIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[italicIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "italicIconName",
          "declaration": {
            "name": "italicIconName",
            "module": "icon/shapes/italic.js"
          }
        },
        {
          "kind": "js",
          "name": "italicIcon",
          "declaration": {
            "name": "italicIcon",
            "module": "icon/shapes/italic.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/justify-text.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "justifyTextIconName",
          "type": {
            "text": "string"
          },
          "default": "'justify-text'"
        },
        {
          "kind": "variable",
          "name": "justifyTextIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[justifyTextIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "justifyTextIconName",
          "declaration": {
            "name": "justifyTextIconName",
            "module": "icon/shapes/justify-text.js"
          }
        },
        {
          "kind": "js",
          "name": "justifyTextIcon",
          "declaration": {
            "name": "justifyTextIcon",
            "module": "icon/shapes/justify-text.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/key.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "keyIconName",
          "type": {
            "text": "string"
          },
          "default": "'key'"
        },
        {
          "kind": "variable",
          "name": "keyIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[keyIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "keyIconName",
          "declaration": {
            "name": "keyIconName",
            "module": "icon/shapes/key.js"
          }
        },
        {
          "kind": "js",
          "name": "keyIcon",
          "declaration": {
            "name": "keyIcon",
            "module": "icon/shapes/key.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/keyboard.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "keyboardIconName",
          "type": {
            "text": "string"
          },
          "default": "'keyboard'"
        },
        {
          "kind": "variable",
          "name": "keyboardIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[keyboardIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "keyboardIconName",
          "declaration": {
            "name": "keyboardIconName",
            "module": "icon/shapes/keyboard.js"
          }
        },
        {
          "kind": "js",
          "name": "keyboardIcon",
          "declaration": {
            "name": "keyboardIcon",
            "module": "icon/shapes/keyboard.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/landscape.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "landscapeIconName",
          "type": {
            "text": "string"
          },
          "default": "'landscape'"
        },
        {
          "kind": "variable",
          "name": "landscapeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[landscapeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "landscapeIconName",
          "declaration": {
            "name": "landscapeIconName",
            "module": "icon/shapes/landscape.js"
          }
        },
        {
          "kind": "js",
          "name": "landscapeIcon",
          "declaration": {
            "name": "landscapeIcon",
            "module": "icon/shapes/landscape.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/language.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "languageIconName",
          "type": {
            "text": "string"
          },
          "default": "'language'"
        },
        {
          "kind": "variable",
          "name": "languageIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[languageIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "languageIconName",
          "declaration": {
            "name": "languageIconName",
            "module": "icon/shapes/language.js"
          }
        },
        {
          "kind": "js",
          "name": "languageIcon",
          "declaration": {
            "name": "languageIcon",
            "module": "icon/shapes/language.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/layers.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "layersIconName",
          "type": {
            "text": "string"
          },
          "default": "'layers'"
        },
        {
          "kind": "variable",
          "name": "layersIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[layersIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "layersIconName",
          "declaration": {
            "name": "layersIconName",
            "module": "icon/shapes/layers.js"
          }
        },
        {
          "kind": "js",
          "name": "layersIcon",
          "declaration": {
            "name": "layersIcon",
            "module": "icon/shapes/layers.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/library.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "libraryIconName",
          "type": {
            "text": "string"
          },
          "default": "'library'"
        },
        {
          "kind": "variable",
          "name": "libraryIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[libraryIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "libraryIconName",
          "declaration": {
            "name": "libraryIconName",
            "module": "icon/shapes/library.js"
          }
        },
        {
          "kind": "js",
          "name": "libraryIcon",
          "declaration": {
            "name": "libraryIcon",
            "module": "icon/shapes/library.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/lightbulb.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "lightbulbIconName",
          "type": {
            "text": "string"
          },
          "default": "'lightbulb'"
        },
        {
          "kind": "variable",
          "name": "lightbulbIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[lightbulbIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "lightbulbIconName",
          "declaration": {
            "name": "lightbulbIconName",
            "module": "icon/shapes/lightbulb.js"
          }
        },
        {
          "kind": "js",
          "name": "lightbulbIcon",
          "declaration": {
            "name": "lightbulbIcon",
            "module": "icon/shapes/lightbulb.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/line-chart.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "lineChartIconName",
          "type": {
            "text": "string"
          },
          "default": "'line-chart'"
        },
        {
          "kind": "variable",
          "name": "lineChartIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[lineChartIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "lineChartIconName",
          "declaration": {
            "name": "lineChartIconName",
            "module": "icon/shapes/line-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "lineChartIcon",
          "declaration": {
            "name": "lineChartIcon",
            "module": "icon/shapes/line-chart.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/link.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "linkIconName",
          "type": {
            "text": "string"
          },
          "default": "'link'"
        },
        {
          "kind": "variable",
          "name": "linkIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[linkIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "linkIconName",
          "declaration": {
            "name": "linkIconName",
            "module": "icon/shapes/link.js"
          }
        },
        {
          "kind": "js",
          "name": "linkIcon",
          "declaration": {
            "name": "linkIcon",
            "module": "icon/shapes/link.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/list.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "listIconName",
          "type": {
            "text": "string"
          },
          "default": "'list'"
        },
        {
          "kind": "variable",
          "name": "listIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[listIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "listIconName",
          "declaration": {
            "name": "listIconName",
            "module": "icon/shapes/list.js"
          }
        },
        {
          "kind": "js",
          "name": "listIcon",
          "declaration": {
            "name": "listIcon",
            "module": "icon/shapes/list.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/lock.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "lockIconName",
          "type": {
            "text": "string"
          },
          "default": "'lock'"
        },
        {
          "kind": "variable",
          "name": "lockIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[lockIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "lockIconName",
          "declaration": {
            "name": "lockIconName",
            "module": "icon/shapes/lock.js"
          }
        },
        {
          "kind": "js",
          "name": "lockIcon",
          "declaration": {
            "name": "lockIcon",
            "module": "icon/shapes/lock.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/login.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "loginIconName",
          "type": {
            "text": "string"
          },
          "default": "'login'"
        },
        {
          "kind": "variable",
          "name": "loginIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[loginIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "loginIconName",
          "declaration": {
            "name": "loginIconName",
            "module": "icon/shapes/login.js"
          }
        },
        {
          "kind": "js",
          "name": "loginIcon",
          "declaration": {
            "name": "loginIcon",
            "module": "icon/shapes/login.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/logout.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "logoutIconName",
          "type": {
            "text": "string"
          },
          "default": "'logout'"
        },
        {
          "kind": "variable",
          "name": "logoutIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[logoutIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "logoutIconName",
          "declaration": {
            "name": "logoutIconName",
            "module": "icon/shapes/logout.js"
          }
        },
        {
          "kind": "js",
          "name": "logoutIcon",
          "declaration": {
            "name": "logoutIcon",
            "module": "icon/shapes/logout.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/map-marker.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "mapMarkerIconName",
          "type": {
            "text": "string"
          },
          "default": "'map-marker'"
        },
        {
          "kind": "variable",
          "name": "mapMarkerIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[mapMarkerIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "mapMarkerIconName",
          "declaration": {
            "name": "mapMarkerIconName",
            "module": "icon/shapes/map-marker.js"
          }
        },
        {
          "kind": "js",
          "name": "mapMarkerIcon",
          "declaration": {
            "name": "mapMarkerIcon",
            "module": "icon/shapes/map-marker.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/map.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "mapIconName",
          "type": {
            "text": "string"
          },
          "default": "'map'"
        },
        {
          "kind": "variable",
          "name": "mapIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[mapIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "mapIconName",
          "declaration": {
            "name": "mapIconName",
            "module": "icon/shapes/map.js"
          }
        },
        {
          "kind": "js",
          "name": "mapIcon",
          "declaration": {
            "name": "mapIcon",
            "module": "icon/shapes/map.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/media-changer.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "mediaChangerIconName",
          "type": {
            "text": "string"
          },
          "default": "'media-changer'"
        },
        {
          "kind": "variable",
          "name": "mediaChangerIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[mediaChangerIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "mediaChangerIconName",
          "declaration": {
            "name": "mediaChangerIconName",
            "module": "icon/shapes/media-changer.js"
          }
        },
        {
          "kind": "js",
          "name": "mediaChangerIcon",
          "declaration": {
            "name": "mediaChangerIcon",
            "module": "icon/shapes/media-changer.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/memory.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "memoryIconName",
          "type": {
            "text": "string"
          },
          "default": "'memory'"
        },
        {
          "kind": "variable",
          "name": "memoryIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[memoryIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "memoryIconName",
          "declaration": {
            "name": "memoryIconName",
            "module": "icon/shapes/memory.js"
          }
        },
        {
          "kind": "js",
          "name": "memoryIcon",
          "declaration": {
            "name": "memoryIcon",
            "module": "icon/shapes/memory.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/microphone-mute.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "microphoneMuteIconName",
          "type": {
            "text": "string"
          },
          "default": "'microphone-mute'"
        },
        {
          "kind": "variable",
          "name": "microphoneMuteIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[microphoneMuteIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "microphoneMuteIconName",
          "declaration": {
            "name": "microphoneMuteIconName",
            "module": "icon/shapes/microphone-mute.js"
          }
        },
        {
          "kind": "js",
          "name": "microphoneMuteIcon",
          "declaration": {
            "name": "microphoneMuteIcon",
            "module": "icon/shapes/microphone-mute.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/microphone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "microphoneIconName",
          "type": {
            "text": "string"
          },
          "default": "'microphone'"
        },
        {
          "kind": "variable",
          "name": "microphoneIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[microphoneIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "microphoneIconName",
          "declaration": {
            "name": "microphoneIconName",
            "module": "icon/shapes/microphone.js"
          }
        },
        {
          "kind": "js",
          "name": "microphoneIcon",
          "declaration": {
            "name": "microphoneIcon",
            "module": "icon/shapes/microphone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/minus-circle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "minusCircleIconName",
          "type": {
            "text": "string"
          },
          "default": "'minus-circle'"
        },
        {
          "kind": "variable",
          "name": "minusCircleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[minusCircleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "minusCircleIconName",
          "declaration": {
            "name": "minusCircleIconName",
            "module": "icon/shapes/minus-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "minusCircleIcon",
          "declaration": {
            "name": "minusCircleIcon",
            "module": "icon/shapes/minus-circle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/minus.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "minusIconName",
          "type": {
            "text": "string"
          },
          "default": "'minus'"
        },
        {
          "kind": "variable",
          "name": "minusIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[minusIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "minusIconName",
          "declaration": {
            "name": "minusIconName",
            "module": "icon/shapes/minus.js"
          }
        },
        {
          "kind": "js",
          "name": "minusIcon",
          "declaration": {
            "name": "minusIcon",
            "module": "icon/shapes/minus.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/mobile.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "mobileIconName",
          "type": {
            "text": "string"
          },
          "default": "'mobile'"
        },
        {
          "kind": "variable",
          "name": "mobileIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[mobileIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "mobileIconName",
          "declaration": {
            "name": "mobileIconName",
            "module": "icon/shapes/mobile.js"
          }
        },
        {
          "kind": "js",
          "name": "mobileIcon",
          "declaration": {
            "name": "mobileIcon",
            "module": "icon/shapes/mobile.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/moon.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "moonIconName",
          "type": {
            "text": "string"
          },
          "default": "'moon'"
        },
        {
          "kind": "variable",
          "name": "moonIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[moonIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "moonIconName",
          "declaration": {
            "name": "moonIconName",
            "module": "icon/shapes/moon.js"
          }
        },
        {
          "kind": "js",
          "name": "moonIcon",
          "declaration": {
            "name": "moonIcon",
            "module": "icon/shapes/moon.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/mouse.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "mouseIconName",
          "type": {
            "text": "string"
          },
          "default": "'mouse'"
        },
        {
          "kind": "variable",
          "name": "mouseIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[mouseIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "mouseIconName",
          "declaration": {
            "name": "mouseIconName",
            "module": "icon/shapes/mouse.js"
          }
        },
        {
          "kind": "js",
          "name": "mouseIcon",
          "declaration": {
            "name": "mouseIcon",
            "module": "icon/shapes/mouse.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/music-note.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "musicNoteIconName",
          "type": {
            "text": "string"
          },
          "default": "'music-note'"
        },
        {
          "kind": "variable",
          "name": "musicNoteIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[musicNoteIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "musicNoteIconName",
          "declaration": {
            "name": "musicNoteIconName",
            "module": "icon/shapes/music-note.js"
          }
        },
        {
          "kind": "js",
          "name": "musicNoteIcon",
          "declaration": {
            "name": "musicNoteIcon",
            "module": "icon/shapes/music-note.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/namespace.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "namespaceIconName",
          "type": {
            "text": "string"
          },
          "default": "'namespace'"
        },
        {
          "kind": "variable",
          "name": "namespaceIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[namespaceIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "namespaceIconName",
          "declaration": {
            "name": "namespaceIconName",
            "module": "icon/shapes/namespace.js"
          }
        },
        {
          "kind": "js",
          "name": "namespaceIcon",
          "declaration": {
            "name": "namespaceIcon",
            "module": "icon/shapes/namespace.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/network-globe.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "networkGlobeIconName",
          "type": {
            "text": "string"
          },
          "default": "'network-globe'"
        },
        {
          "kind": "variable",
          "name": "networkGlobeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[networkGlobeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "networkGlobeIconName",
          "declaration": {
            "name": "networkGlobeIconName",
            "module": "icon/shapes/network-globe.js"
          }
        },
        {
          "kind": "js",
          "name": "networkGlobeIcon",
          "declaration": {
            "name": "networkGlobeIcon",
            "module": "icon/shapes/network-globe.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/network-settings.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "networkSettingsIconName",
          "type": {
            "text": "string"
          },
          "default": "'network-settings'"
        },
        {
          "kind": "variable",
          "name": "networkSettingsIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[networkSettingsIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "networkSettingsIconName",
          "declaration": {
            "name": "networkSettingsIconName",
            "module": "icon/shapes/network-settings.js"
          }
        },
        {
          "kind": "js",
          "name": "networkSettingsIcon",
          "declaration": {
            "name": "networkSettingsIcon",
            "module": "icon/shapes/network-settings.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/network-switch.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "networkSwitchIconName",
          "type": {
            "text": "string"
          },
          "default": "'network-switch'"
        },
        {
          "kind": "variable",
          "name": "networkSwitchIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[networkSwitchIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "networkSwitchIconName",
          "declaration": {
            "name": "networkSwitchIconName",
            "module": "icon/shapes/network-switch.js"
          }
        },
        {
          "kind": "js",
          "name": "networkSwitchIcon",
          "declaration": {
            "name": "networkSwitchIcon",
            "module": "icon/shapes/network-switch.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/neutral-face.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "neutralFaceIconName",
          "type": {
            "text": "string"
          },
          "default": "'neutral-face'"
        },
        {
          "kind": "variable",
          "name": "neutralFaceIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[neutralFaceIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "neutralFaceIconName",
          "declaration": {
            "name": "neutralFaceIconName",
            "module": "icon/shapes/neutral-face.js"
          }
        },
        {
          "kind": "js",
          "name": "neutralFaceIcon",
          "declaration": {
            "name": "neutralFaceIcon",
            "module": "icon/shapes/neutral-face.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/new.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "newIconName",
          "type": {
            "text": "string"
          },
          "default": "'new'"
        },
        {
          "kind": "variable",
          "name": "newIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[newIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "newIconName",
          "declaration": {
            "name": "newIconName",
            "module": "icon/shapes/new.js"
          }
        },
        {
          "kind": "js",
          "name": "newIcon",
          "declaration": {
            "name": "newIcon",
            "module": "icon/shapes/new.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/no-access.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "noAccessIconName",
          "type": {
            "text": "string"
          },
          "default": "'no-access'"
        },
        {
          "kind": "variable",
          "name": "noAccessIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[noAccessIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "noAccessIconName",
          "declaration": {
            "name": "noAccessIconName",
            "module": "icon/shapes/no-access.js"
          }
        },
        {
          "kind": "js",
          "name": "noAccessIcon",
          "declaration": {
            "name": "noAccessIcon",
            "module": "icon/shapes/no-access.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/no-wifi.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "noWifiIconName",
          "type": {
            "text": "string"
          },
          "default": "'no-wifi'"
        },
        {
          "kind": "variable",
          "name": "noWifiIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[noWifiIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "noWifiIconName",
          "declaration": {
            "name": "noWifiIconName",
            "module": "icon/shapes/no-wifi.js"
          }
        },
        {
          "kind": "js",
          "name": "noWifiIcon",
          "declaration": {
            "name": "noWifiIcon",
            "module": "icon/shapes/no-wifi.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/node-group.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "nodeGroupIconName",
          "type": {
            "text": "string"
          },
          "default": "'node-group'"
        },
        {
          "kind": "variable",
          "name": "nodeGroupIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[nodeGroupIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "nodeGroupIconName",
          "declaration": {
            "name": "nodeGroupIconName",
            "module": "icon/shapes/node-group.js"
          }
        },
        {
          "kind": "js",
          "name": "nodeGroupIcon",
          "declaration": {
            "name": "nodeGroupIcon",
            "module": "icon/shapes/node-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/node.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "nodeIconName",
          "type": {
            "text": "string"
          },
          "default": "'node'"
        },
        {
          "kind": "variable",
          "name": "nodeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[nodeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "nodeIconName",
          "declaration": {
            "name": "nodeIconName",
            "module": "icon/shapes/node.js"
          }
        },
        {
          "kind": "js",
          "name": "nodeIcon",
          "declaration": {
            "name": "nodeIcon",
            "module": "icon/shapes/node.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/nodes.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "nodesIconName",
          "type": {
            "text": "string"
          },
          "default": "'nodes'"
        },
        {
          "kind": "variable",
          "name": "nodesIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[nodesIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "nodesIconName",
          "declaration": {
            "name": "nodesIconName",
            "module": "icon/shapes/nodes.js"
          }
        },
        {
          "kind": "js",
          "name": "nodesIcon",
          "declaration": {
            "name": "nodesIcon",
            "module": "icon/shapes/nodes.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/note.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "noteIconName",
          "type": {
            "text": "string"
          },
          "default": "'note'"
        },
        {
          "kind": "variable",
          "name": "noteIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[noteIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "noteIconName",
          "declaration": {
            "name": "noteIconName",
            "module": "icon/shapes/note.js"
          }
        },
        {
          "kind": "js",
          "name": "noteIcon",
          "declaration": {
            "name": "noteIcon",
            "module": "icon/shapes/note.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/number-list.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "numberListIconName",
          "type": {
            "text": "string"
          },
          "default": "'number-list'"
        },
        {
          "kind": "variable",
          "name": "numberListIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[numberListIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "numberListIconName",
          "declaration": {
            "name": "numberListIconName",
            "module": "icon/shapes/number-list.js"
          }
        },
        {
          "kind": "js",
          "name": "numberListIcon",
          "declaration": {
            "name": "numberListIcon",
            "module": "icon/shapes/number-list.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/nvme.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "nvmeIconName",
          "type": {
            "text": "string"
          },
          "default": "'nvme'"
        },
        {
          "kind": "variable",
          "name": "nvmeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[nvmeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "nvmeIconName",
          "declaration": {
            "name": "nvmeIconName",
            "module": "icon/shapes/nvme.js"
          }
        },
        {
          "kind": "js",
          "name": "nvmeIcon",
          "declaration": {
            "name": "nvmeIcon",
            "module": "icon/shapes/nvme.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/objects.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "objectsIconName",
          "type": {
            "text": "string"
          },
          "default": "'objects'"
        },
        {
          "kind": "variable",
          "name": "objectsIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[objectsIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "objectsIconName",
          "declaration": {
            "name": "objectsIconName",
            "module": "icon/shapes/objects.js"
          }
        },
        {
          "kind": "js",
          "name": "objectsIcon",
          "declaration": {
            "name": "objectsIcon",
            "module": "icon/shapes/objects.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/on-holiday.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "onHolidayIconName",
          "type": {
            "text": "string"
          },
          "default": "'on-holiday'"
        },
        {
          "kind": "variable",
          "name": "onHolidayIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[onHolidayIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "onHolidayIconName",
          "declaration": {
            "name": "onHolidayIconName",
            "module": "icon/shapes/on-holiday.js"
          }
        },
        {
          "kind": "js",
          "name": "onHolidayIcon",
          "declaration": {
            "name": "onHolidayIcon",
            "module": "icon/shapes/on-holiday.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/organization.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "organizationIconName",
          "type": {
            "text": "string"
          },
          "default": "'organization'"
        },
        {
          "kind": "variable",
          "name": "organizationIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[organizationIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "organizationIconName",
          "declaration": {
            "name": "organizationIconName",
            "module": "icon/shapes/organization.js"
          }
        },
        {
          "kind": "js",
          "name": "organizationIcon",
          "declaration": {
            "name": "organizationIcon",
            "module": "icon/shapes/organization.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/outdent.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "outdentIconName",
          "type": {
            "text": "string"
          },
          "default": "'outdent'"
        },
        {
          "kind": "variable",
          "name": "outdentIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[outdentIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "outdentIconName",
          "declaration": {
            "name": "outdentIconName",
            "module": "icon/shapes/outdent.js"
          }
        },
        {
          "kind": "js",
          "name": "outdentIcon",
          "declaration": {
            "name": "outdentIcon",
            "module": "icon/shapes/outdent.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/paint-roller.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "paintRollerIconName",
          "type": {
            "text": "string"
          },
          "default": "'paint-roller'"
        },
        {
          "kind": "variable",
          "name": "paintRollerIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[paintRollerIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "paintRollerIconName",
          "declaration": {
            "name": "paintRollerIconName",
            "module": "icon/shapes/paint-roller.js"
          }
        },
        {
          "kind": "js",
          "name": "paintRollerIcon",
          "declaration": {
            "name": "paintRollerIcon",
            "module": "icon/shapes/paint-roller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/paperclip.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "paperclipIconName",
          "type": {
            "text": "string"
          },
          "default": "'paperclip'"
        },
        {
          "kind": "variable",
          "name": "paperclipIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[paperclipIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "paperclipIconName",
          "declaration": {
            "name": "paperclipIconName",
            "module": "icon/shapes/paperclip.js"
          }
        },
        {
          "kind": "js",
          "name": "paperclipIcon",
          "declaration": {
            "name": "paperclipIcon",
            "module": "icon/shapes/paperclip.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/paste.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "pasteIconName",
          "type": {
            "text": "string"
          },
          "default": "'paste'"
        },
        {
          "kind": "variable",
          "name": "pasteIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[pasteIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pasteIconName",
          "declaration": {
            "name": "pasteIconName",
            "module": "icon/shapes/paste.js"
          }
        },
        {
          "kind": "js",
          "name": "pasteIcon",
          "declaration": {
            "name": "pasteIcon",
            "module": "icon/shapes/paste.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/pause.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "pauseIconName",
          "type": {
            "text": "string"
          },
          "default": "'pause'"
        },
        {
          "kind": "variable",
          "name": "pauseIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[pauseIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pauseIconName",
          "declaration": {
            "name": "pauseIconName",
            "module": "icon/shapes/pause.js"
          }
        },
        {
          "kind": "js",
          "name": "pauseIcon",
          "declaration": {
            "name": "pauseIcon",
            "module": "icon/shapes/pause.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/pdf-file.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "pdfFileIconName",
          "type": {
            "text": "string"
          },
          "default": "'pdf-file'"
        },
        {
          "kind": "variable",
          "name": "pdfFileIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[pdfFileIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pdfFileIconName",
          "declaration": {
            "name": "pdfFileIconName",
            "module": "icon/shapes/pdf-file.js"
          }
        },
        {
          "kind": "js",
          "name": "pdfFileIcon",
          "declaration": {
            "name": "pdfFileIcon",
            "module": "icon/shapes/pdf-file.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/pencil.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "pencilIconName",
          "type": {
            "text": "string"
          },
          "default": "'pencil'"
        },
        {
          "kind": "variable",
          "name": "pencilIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[pencilIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pencilIconName",
          "declaration": {
            "name": "pencilIconName",
            "module": "icon/shapes/pencil.js"
          }
        },
        {
          "kind": "js",
          "name": "pencilIcon",
          "declaration": {
            "name": "pencilIcon",
            "module": "icon/shapes/pencil.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/peso.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "pesoIconName",
          "type": {
            "text": "string"
          },
          "default": "'peso'"
        },
        {
          "kind": "variable",
          "name": "pesoIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[pesoIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pesoIconName",
          "declaration": {
            "name": "pesoIconName",
            "module": "icon/shapes/peso.js"
          }
        },
        {
          "kind": "js",
          "name": "pesoIcon",
          "declaration": {
            "name": "pesoIcon",
            "module": "icon/shapes/peso.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/phone-handset.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "phoneHandsetIconName",
          "type": {
            "text": "string"
          },
          "default": "'phone-handset'"
        },
        {
          "kind": "variable",
          "name": "phoneHandsetIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[phoneHandsetIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "phoneHandsetIconName",
          "declaration": {
            "name": "phoneHandsetIconName",
            "module": "icon/shapes/phone-handset.js"
          }
        },
        {
          "kind": "js",
          "name": "phoneHandsetIcon",
          "declaration": {
            "name": "phoneHandsetIcon",
            "module": "icon/shapes/phone-handset.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/picture.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "pictureIconName",
          "type": {
            "text": "string"
          },
          "default": "'picture'"
        },
        {
          "kind": "variable",
          "name": "pictureIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[pictureIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pictureIconName",
          "declaration": {
            "name": "pictureIconName",
            "module": "icon/shapes/picture.js"
          }
        },
        {
          "kind": "js",
          "name": "pictureIcon",
          "declaration": {
            "name": "pictureIcon",
            "module": "icon/shapes/picture.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/pie-chart.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "pieChartIconName",
          "type": {
            "text": "string"
          },
          "default": "'pie-chart'"
        },
        {
          "kind": "variable",
          "name": "pieChartIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[pieChartIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pieChartIconName",
          "declaration": {
            "name": "pieChartIconName",
            "module": "icon/shapes/pie-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "pieChartIcon",
          "declaration": {
            "name": "pieChartIcon",
            "module": "icon/shapes/pie-chart.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/piggy-bank.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "piggyBankIconName",
          "type": {
            "text": "string"
          },
          "default": "'piggy-bank'"
        },
        {
          "kind": "variable",
          "name": "piggyBankIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[piggyBankIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "piggyBankIconName",
          "declaration": {
            "name": "piggyBankIconName",
            "module": "icon/shapes/piggy-bank.js"
          }
        },
        {
          "kind": "js",
          "name": "piggyBankIcon",
          "declaration": {
            "name": "piggyBankIcon",
            "module": "icon/shapes/piggy-bank.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/pin.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "pinIconName",
          "type": {
            "text": "string"
          },
          "default": "'pin'"
        },
        {
          "kind": "variable",
          "name": "pinIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[pinIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pinIconName",
          "declaration": {
            "name": "pinIconName",
            "module": "icon/shapes/pin.js"
          }
        },
        {
          "kind": "js",
          "name": "pinIcon",
          "declaration": {
            "name": "pinIcon",
            "module": "icon/shapes/pin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/pinboard.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "pinboardIconName",
          "type": {
            "text": "string"
          },
          "default": "'pinboard'"
        },
        {
          "kind": "variable",
          "name": "pinboardIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[pinboardIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pinboardIconName",
          "declaration": {
            "name": "pinboardIconName",
            "module": "icon/shapes/pinboard.js"
          }
        },
        {
          "kind": "js",
          "name": "pinboardIcon",
          "declaration": {
            "name": "pinboardIcon",
            "module": "icon/shapes/pinboard.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/play.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "playIconName",
          "type": {
            "text": "string"
          },
          "default": "'play'"
        },
        {
          "kind": "variable",
          "name": "playIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[playIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "playIconName",
          "declaration": {
            "name": "playIconName",
            "module": "icon/shapes/play.js"
          }
        },
        {
          "kind": "js",
          "name": "playIcon",
          "declaration": {
            "name": "playIcon",
            "module": "icon/shapes/play.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/plugin.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "pluginIconName",
          "type": {
            "text": "string"
          },
          "default": "'plugin'"
        },
        {
          "kind": "variable",
          "name": "pluginIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[pluginIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pluginIconName",
          "declaration": {
            "name": "pluginIconName",
            "module": "icon/shapes/plugin.js"
          }
        },
        {
          "kind": "js",
          "name": "pluginIcon",
          "declaration": {
            "name": "pluginIcon",
            "module": "icon/shapes/plugin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/plus-circle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "plusCircleIconName",
          "type": {
            "text": "string"
          },
          "default": "'plus-circle'"
        },
        {
          "kind": "variable",
          "name": "plusCircleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[plusCircleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "plusCircleIconName",
          "declaration": {
            "name": "plusCircleIconName",
            "module": "icon/shapes/plus-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "plusCircleIcon",
          "declaration": {
            "name": "plusCircleIcon",
            "module": "icon/shapes/plus-circle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/plus.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "plusIconName",
          "type": {
            "text": "string"
          },
          "default": "'plus'"
        },
        {
          "kind": "variable",
          "name": "plusIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[plusIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "plusIconName",
          "declaration": {
            "name": "plusIconName",
            "module": "icon/shapes/plus.js"
          }
        },
        {
          "kind": "js",
          "name": "plusIcon",
          "declaration": {
            "name": "plusIcon",
            "module": "icon/shapes/plus.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/pod.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "podIconName",
          "type": {
            "text": "string"
          },
          "default": "'pod'"
        },
        {
          "kind": "variable",
          "name": "podIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[podIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "podIconName",
          "declaration": {
            "name": "podIconName",
            "module": "icon/shapes/pod.js"
          }
        },
        {
          "kind": "js",
          "name": "podIcon",
          "declaration": {
            "name": "podIcon",
            "module": "icon/shapes/pod.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/pop-out.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "popOutIconName",
          "type": {
            "text": "string"
          },
          "default": "'pop-out'"
        },
        {
          "kind": "variable",
          "name": "popOutIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[popOutIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "popOutIconName",
          "declaration": {
            "name": "popOutIconName",
            "module": "icon/shapes/pop-out.js"
          }
        },
        {
          "kind": "js",
          "name": "popOutIcon",
          "declaration": {
            "name": "popOutIcon",
            "module": "icon/shapes/pop-out.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/portrait.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "portraitIconName",
          "type": {
            "text": "string"
          },
          "default": "'portrait'"
        },
        {
          "kind": "variable",
          "name": "portraitIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[portraitIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "portraitIconName",
          "declaration": {
            "name": "portraitIconName",
            "module": "icon/shapes/portrait.js"
          }
        },
        {
          "kind": "js",
          "name": "portraitIcon",
          "declaration": {
            "name": "portraitIcon",
            "module": "icon/shapes/portrait.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/pound.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "poundIconName",
          "type": {
            "text": "string"
          },
          "default": "'pound'"
        },
        {
          "kind": "variable",
          "name": "poundIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[poundIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "poundIconName",
          "declaration": {
            "name": "poundIconName",
            "module": "icon/shapes/pound.js"
          }
        },
        {
          "kind": "js",
          "name": "poundIcon",
          "declaration": {
            "name": "poundIcon",
            "module": "icon/shapes/pound.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/power.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "powerIconName",
          "type": {
            "text": "string"
          },
          "default": "'power'"
        },
        {
          "kind": "variable",
          "name": "powerIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[powerIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "powerIconName",
          "declaration": {
            "name": "powerIconName",
            "module": "icon/shapes/power.js"
          }
        },
        {
          "kind": "js",
          "name": "powerIcon",
          "declaration": {
            "name": "powerIcon",
            "module": "icon/shapes/power.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/printer.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "printerIconName",
          "type": {
            "text": "string"
          },
          "default": "'printer'"
        },
        {
          "kind": "variable",
          "name": "printerIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[printerIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "printerIconName",
          "declaration": {
            "name": "printerIconName",
            "module": "icon/shapes/printer.js"
          }
        },
        {
          "kind": "js",
          "name": "printerIcon",
          "declaration": {
            "name": "printerIcon",
            "module": "icon/shapes/printer.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/process-on-vm.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "processOnVmIconName",
          "type": {
            "text": "string"
          },
          "default": "'process-on-vm'"
        },
        {
          "kind": "variable",
          "name": "processOnVmIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[processOnVmIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "processOnVmIconName",
          "declaration": {
            "name": "processOnVmIconName",
            "module": "icon/shapes/process-on-vm.js"
          }
        },
        {
          "kind": "js",
          "name": "processOnVmIcon",
          "declaration": {
            "name": "processOnVmIcon",
            "module": "icon/shapes/process-on-vm.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/qr-code.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "qrCodeIconName",
          "type": {
            "text": "string"
          },
          "default": "'qr-code'"
        },
        {
          "kind": "variable",
          "name": "qrCodeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[qrCodeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "qrCodeIconName",
          "declaration": {
            "name": "qrCodeIconName",
            "module": "icon/shapes/qr-code.js"
          }
        },
        {
          "kind": "js",
          "name": "qrCodeIcon",
          "declaration": {
            "name": "qrCodeIcon",
            "module": "icon/shapes/qr-code.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/rack-server.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "rackServerIconName",
          "type": {
            "text": "string"
          },
          "default": "'rack-server'"
        },
        {
          "kind": "variable",
          "name": "rackServerIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[rackServerIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rackServerIconName",
          "declaration": {
            "name": "rackServerIconName",
            "module": "icon/shapes/rack-server.js"
          }
        },
        {
          "kind": "js",
          "name": "rackServerIcon",
          "declaration": {
            "name": "rackServerIcon",
            "module": "icon/shapes/rack-server.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/radar.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "radarIconName",
          "type": {
            "text": "string"
          },
          "default": "'radar'"
        },
        {
          "kind": "variable",
          "name": "radarIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[radarIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "radarIconName",
          "declaration": {
            "name": "radarIconName",
            "module": "icon/shapes/radar.js"
          }
        },
        {
          "kind": "js",
          "name": "radarIcon",
          "declaration": {
            "name": "radarIcon",
            "module": "icon/shapes/radar.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/recycle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "recycleIconName",
          "type": {
            "text": "string"
          },
          "default": "'recycle'"
        },
        {
          "kind": "variable",
          "name": "recycleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[recycleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "recycleIconName",
          "declaration": {
            "name": "recycleIconName",
            "module": "icon/shapes/recycle.js"
          }
        },
        {
          "kind": "js",
          "name": "recycleIcon",
          "declaration": {
            "name": "recycleIcon",
            "module": "icon/shapes/recycle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/redo.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "redoIconName",
          "type": {
            "text": "string"
          },
          "default": "'redo'"
        },
        {
          "kind": "variable",
          "name": "redoIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[redoIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "redoIconName",
          "declaration": {
            "name": "redoIconName",
            "module": "icon/shapes/redo.js"
          }
        },
        {
          "kind": "js",
          "name": "redoIcon",
          "declaration": {
            "name": "redoIcon",
            "module": "icon/shapes/redo.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/refresh.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "refreshIconName",
          "type": {
            "text": "string"
          },
          "default": "'refresh'"
        },
        {
          "kind": "variable",
          "name": "refreshIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[refreshIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "refreshIconName",
          "declaration": {
            "name": "refreshIconName",
            "module": "icon/shapes/refresh.js"
          }
        },
        {
          "kind": "js",
          "name": "refreshIcon",
          "declaration": {
            "name": "refreshIcon",
            "module": "icon/shapes/refresh.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/repeat.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "repeatIconName",
          "type": {
            "text": "string"
          },
          "default": "'repeat'"
        },
        {
          "kind": "variable",
          "name": "repeatIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[repeatIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "repeatIconName",
          "declaration": {
            "name": "repeatIconName",
            "module": "icon/shapes/repeat.js"
          }
        },
        {
          "kind": "js",
          "name": "repeatIcon",
          "declaration": {
            "name": "repeatIcon",
            "module": "icon/shapes/repeat.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/replay-all.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "replayAllIconName",
          "type": {
            "text": "string"
          },
          "default": "'replay-all'"
        },
        {
          "kind": "variable",
          "name": "replayAllIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[replayAllIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "replayAllIconName",
          "declaration": {
            "name": "replayAllIconName",
            "module": "icon/shapes/replay-all.js"
          }
        },
        {
          "kind": "js",
          "name": "replayAllIcon",
          "declaration": {
            "name": "replayAllIcon",
            "module": "icon/shapes/replay-all.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/replay-one.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "replayOneIconName",
          "type": {
            "text": "string"
          },
          "default": "'replay-one'"
        },
        {
          "kind": "variable",
          "name": "replayOneIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[replayOneIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "replayOneIconName",
          "declaration": {
            "name": "replayOneIconName",
            "module": "icon/shapes/replay-one.js"
          }
        },
        {
          "kind": "js",
          "name": "replayOneIcon",
          "declaration": {
            "name": "replayOneIcon",
            "module": "icon/shapes/replay-one.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/resistor.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "resistorIconName",
          "type": {
            "text": "string"
          },
          "default": "'resistor'"
        },
        {
          "kind": "variable",
          "name": "resistorIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[resistorIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resistorIconName",
          "declaration": {
            "name": "resistorIconName",
            "module": "icon/shapes/resistor.js"
          }
        },
        {
          "kind": "js",
          "name": "resistorIcon",
          "declaration": {
            "name": "resistorIcon",
            "module": "icon/shapes/resistor.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/resize.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "resizeIconName",
          "type": {
            "text": "string"
          },
          "default": "'resize'"
        },
        {
          "kind": "variable",
          "name": "resizeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[resizeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resizeIconName",
          "declaration": {
            "name": "resizeIconName",
            "module": "icon/shapes/resize.js"
          }
        },
        {
          "kind": "js",
          "name": "resizeIcon",
          "declaration": {
            "name": "resizeIcon",
            "module": "icon/shapes/resize.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/resource-pool.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "resourcePoolIconName",
          "type": {
            "text": "string"
          },
          "default": "'resource-pool'"
        },
        {
          "kind": "variable",
          "name": "resourcePoolIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[resourcePoolIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resourcePoolIconName",
          "declaration": {
            "name": "resourcePoolIconName",
            "module": "icon/shapes/resource-pool.js"
          }
        },
        {
          "kind": "js",
          "name": "resourcePoolIcon",
          "declaration": {
            "name": "resourcePoolIcon",
            "module": "icon/shapes/resource-pool.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/rewind.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "rewindIconName",
          "type": {
            "text": "string"
          },
          "default": "'rewind'"
        },
        {
          "kind": "variable",
          "name": "rewindIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[rewindIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rewindIconName",
          "declaration": {
            "name": "rewindIconName",
            "module": "icon/shapes/rewind.js"
          }
        },
        {
          "kind": "js",
          "name": "rewindIcon",
          "declaration": {
            "name": "rewindIcon",
            "module": "icon/shapes/rewind.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/router.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "routerIconName",
          "type": {
            "text": "string"
          },
          "default": "'router'"
        },
        {
          "kind": "variable",
          "name": "routerIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[routerIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "routerIconName",
          "declaration": {
            "name": "routerIconName",
            "module": "icon/shapes/router.js"
          }
        },
        {
          "kind": "js",
          "name": "routerIcon",
          "declaration": {
            "name": "routerIcon",
            "module": "icon/shapes/router.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/ruble.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "rubleIconName",
          "type": {
            "text": "string"
          },
          "default": "'ruble'"
        },
        {
          "kind": "variable",
          "name": "rubleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[rubleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rubleIconName",
          "declaration": {
            "name": "rubleIconName",
            "module": "icon/shapes/ruble.js"
          }
        },
        {
          "kind": "js",
          "name": "rubleIcon",
          "declaration": {
            "name": "rubleIcon",
            "module": "icon/shapes/ruble.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/ruler-pencil.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "rulerPencilIconName",
          "type": {
            "text": "string"
          },
          "default": "'ruler-pencil'"
        },
        {
          "kind": "variable",
          "name": "rulerPencilIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[rulerPencilIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rulerPencilIconName",
          "declaration": {
            "name": "rulerPencilIconName",
            "module": "icon/shapes/ruler-pencil.js"
          }
        },
        {
          "kind": "js",
          "name": "rulerPencilIcon",
          "declaration": {
            "name": "rulerPencilIcon",
            "module": "icon/shapes/ruler-pencil.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/rupee.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "rupeeIconName",
          "type": {
            "text": "string"
          },
          "default": "'rupee'"
        },
        {
          "kind": "variable",
          "name": "rupeeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[rupeeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rupeeIconName",
          "declaration": {
            "name": "rupeeIconName",
            "module": "icon/shapes/rupee.js"
          }
        },
        {
          "kind": "js",
          "name": "rupeeIcon",
          "declaration": {
            "name": "rupeeIcon",
            "module": "icon/shapes/rupee.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/sad-face.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "sadFaceIconName",
          "type": {
            "text": "string"
          },
          "default": "'sad-face'"
        },
        {
          "kind": "variable",
          "name": "sadFaceIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[sadFaceIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sadFaceIconName",
          "declaration": {
            "name": "sadFaceIconName",
            "module": "icon/shapes/sad-face.js"
          }
        },
        {
          "kind": "js",
          "name": "sadFaceIcon",
          "declaration": {
            "name": "sadFaceIcon",
            "module": "icon/shapes/sad-face.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/scatter-plot.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "scatterPlotIconName",
          "type": {
            "text": "string"
          },
          "default": "'scatter-plot'"
        },
        {
          "kind": "variable",
          "name": "scatterPlotIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[scatterPlotIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "scatterPlotIconName",
          "declaration": {
            "name": "scatterPlotIconName",
            "module": "icon/shapes/scatter-plot.js"
          }
        },
        {
          "kind": "js",
          "name": "scatterPlotIcon",
          "declaration": {
            "name": "scatterPlotIcon",
            "module": "icon/shapes/scatter-plot.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/scissors.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "scissorsIconName",
          "type": {
            "text": "string"
          },
          "default": "'scissors'"
        },
        {
          "kind": "variable",
          "name": "scissorsIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[scissorsIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "scissorsIconName",
          "declaration": {
            "name": "scissorsIconName",
            "module": "icon/shapes/scissors.js"
          }
        },
        {
          "kind": "js",
          "name": "scissorsIcon",
          "declaration": {
            "name": "scissorsIcon",
            "module": "icon/shapes/scissors.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/script-execute.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "scriptExecuteIconName",
          "type": {
            "text": "string"
          },
          "default": "'script-execute'"
        },
        {
          "kind": "variable",
          "name": "scriptExecuteIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[scriptExecuteIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "scriptExecuteIconName",
          "declaration": {
            "name": "scriptExecuteIconName",
            "module": "icon/shapes/script-execute.js"
          }
        },
        {
          "kind": "js",
          "name": "scriptExecuteIcon",
          "declaration": {
            "name": "scriptExecuteIcon",
            "module": "icon/shapes/script-execute.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/script-schedule.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "scriptScheduleIconName",
          "type": {
            "text": "string"
          },
          "default": "'script-schedule'"
        },
        {
          "kind": "variable",
          "name": "scriptScheduleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[scriptScheduleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "scriptScheduleIconName",
          "declaration": {
            "name": "scriptScheduleIconName",
            "module": "icon/shapes/script-schedule.js"
          }
        },
        {
          "kind": "js",
          "name": "scriptScheduleIcon",
          "declaration": {
            "name": "scriptScheduleIcon",
            "module": "icon/shapes/script-schedule.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/scroll.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "scrollIconName",
          "type": {
            "text": "string"
          },
          "default": "'scroll'"
        },
        {
          "kind": "variable",
          "name": "scrollIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[scrollIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "scrollIconName",
          "declaration": {
            "name": "scrollIconName",
            "module": "icon/shapes/scroll.js"
          }
        },
        {
          "kind": "js",
          "name": "scrollIcon",
          "declaration": {
            "name": "scrollIcon",
            "module": "icon/shapes/scroll.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/search.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "searchIconName",
          "type": {
            "text": "string"
          },
          "default": "'search'"
        },
        {
          "kind": "variable",
          "name": "searchIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[searchIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "searchIconName",
          "declaration": {
            "name": "searchIconName",
            "module": "icon/shapes/search.js"
          }
        },
        {
          "kind": "js",
          "name": "searchIcon",
          "declaration": {
            "name": "searchIcon",
            "module": "icon/shapes/search.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/share.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "shareIconName",
          "type": {
            "text": "string"
          },
          "default": "'share'"
        },
        {
          "kind": "variable",
          "name": "shareIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[shareIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "shareIconName",
          "declaration": {
            "name": "shareIconName",
            "module": "icon/shapes/share.js"
          }
        },
        {
          "kind": "js",
          "name": "shareIcon",
          "declaration": {
            "name": "shareIcon",
            "module": "icon/shapes/share.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/shield-check.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "shieldCheckIconName",
          "type": {
            "text": "string"
          },
          "default": "'shield-check'"
        },
        {
          "kind": "variable",
          "name": "shieldCheckIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[shieldCheckIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "shieldCheckIconName",
          "declaration": {
            "name": "shieldCheckIconName",
            "module": "icon/shapes/shield-check.js"
          }
        },
        {
          "kind": "js",
          "name": "shieldCheckIcon",
          "declaration": {
            "name": "shieldCheckIcon",
            "module": "icon/shapes/shield-check.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/shield-x.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "shieldXIconName",
          "type": {
            "text": "string"
          },
          "default": "'shield-x'"
        },
        {
          "kind": "variable",
          "name": "shieldXIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[shieldXIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "shieldXIconName",
          "declaration": {
            "name": "shieldXIconName",
            "module": "icon/shapes/shield-x.js"
          }
        },
        {
          "kind": "js",
          "name": "shieldXIcon",
          "declaration": {
            "name": "shieldXIcon",
            "module": "icon/shapes/shield-x.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/shield.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "shieldIconName",
          "type": {
            "text": "string"
          },
          "default": "'shield'"
        },
        {
          "kind": "variable",
          "name": "shieldIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[shieldIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "shieldIconName",
          "declaration": {
            "name": "shieldIconName",
            "module": "icon/shapes/shield.js"
          }
        },
        {
          "kind": "js",
          "name": "shieldIcon",
          "declaration": {
            "name": "shieldIcon",
            "module": "icon/shapes/shield.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/shopping-bag.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "shoppingBagIconName",
          "type": {
            "text": "string"
          },
          "default": "'shopping-bag'"
        },
        {
          "kind": "variable",
          "name": "shoppingBagIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[shoppingBagIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "shoppingBagIconName",
          "declaration": {
            "name": "shoppingBagIconName",
            "module": "icon/shapes/shopping-bag.js"
          }
        },
        {
          "kind": "js",
          "name": "shoppingBagIcon",
          "declaration": {
            "name": "shoppingBagIcon",
            "module": "icon/shapes/shopping-bag.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/shopping-cart.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "shoppingCartIconName",
          "type": {
            "text": "string"
          },
          "default": "'shopping-cart'"
        },
        {
          "kind": "variable",
          "name": "shoppingCartIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[shoppingCartIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "shoppingCartIconName",
          "declaration": {
            "name": "shoppingCartIconName",
            "module": "icon/shapes/shopping-cart.js"
          }
        },
        {
          "kind": "js",
          "name": "shoppingCartIcon",
          "declaration": {
            "name": "shoppingCartIcon",
            "module": "icon/shapes/shopping-cart.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/shrink.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "shrinkIconName",
          "type": {
            "text": "string"
          },
          "default": "'shrink'"
        },
        {
          "kind": "variable",
          "name": "shrinkIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[shrinkIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "shrinkIconName",
          "declaration": {
            "name": "shrinkIconName",
            "module": "icon/shapes/shrink.js"
          }
        },
        {
          "kind": "js",
          "name": "shrinkIcon",
          "declaration": {
            "name": "shrinkIcon",
            "module": "icon/shapes/shrink.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/shuffle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "shuffleIconName",
          "type": {
            "text": "string"
          },
          "default": "'shuffle'"
        },
        {
          "kind": "variable",
          "name": "shuffleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[shuffleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "shuffleIconName",
          "declaration": {
            "name": "shuffleIconName",
            "module": "icon/shapes/shuffle.js"
          }
        },
        {
          "kind": "js",
          "name": "shuffleIcon",
          "declaration": {
            "name": "shuffleIcon",
            "module": "icon/shapes/shuffle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/slider.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "sliderIconName",
          "type": {
            "text": "string"
          },
          "default": "'slider'"
        },
        {
          "kind": "variable",
          "name": "sliderIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[sliderIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sliderIconName",
          "declaration": {
            "name": "sliderIconName",
            "module": "icon/shapes/slider.js"
          }
        },
        {
          "kind": "js",
          "name": "sliderIcon",
          "declaration": {
            "name": "sliderIcon",
            "module": "icon/shapes/slider.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/snowflake.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "snowflakeIconName",
          "type": {
            "text": "string"
          },
          "default": "'snowflake'"
        },
        {
          "kind": "variable",
          "name": "snowflakeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[snowflakeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "snowflakeIconName",
          "declaration": {
            "name": "snowflakeIconName",
            "module": "icon/shapes/snowflake.js"
          }
        },
        {
          "kind": "js",
          "name": "snowflakeIcon",
          "declaration": {
            "name": "snowflakeIcon",
            "module": "icon/shapes/snowflake.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/sort-by.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "sortByIconName",
          "type": {
            "text": "string"
          },
          "default": "'sort-by'"
        },
        {
          "kind": "variable",
          "name": "sortByIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[sortByIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sortByIconName",
          "declaration": {
            "name": "sortByIconName",
            "module": "icon/shapes/sort-by.js"
          }
        },
        {
          "kind": "js",
          "name": "sortByIcon",
          "declaration": {
            "name": "sortByIcon",
            "module": "icon/shapes/sort-by.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/squid.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "squidIconName",
          "type": {
            "text": "string"
          },
          "default": "'squid'"
        },
        {
          "kind": "variable",
          "name": "squidIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[squidIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "squidIconName",
          "declaration": {
            "name": "squidIconName",
            "module": "icon/shapes/squid.js"
          }
        },
        {
          "kind": "js",
          "name": "squidIcon",
          "declaration": {
            "name": "squidIcon",
            "module": "icon/shapes/squid.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/ssd.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ssdIconName",
          "type": {
            "text": "string"
          },
          "default": "'ssd'"
        },
        {
          "kind": "variable",
          "name": "ssdIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[ssdIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ssdIconName",
          "declaration": {
            "name": "ssdIconName",
            "module": "icon/shapes/ssd.js"
          }
        },
        {
          "kind": "js",
          "name": "ssdIcon",
          "declaration": {
            "name": "ssdIcon",
            "module": "icon/shapes/ssd.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/star.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "starIconName",
          "type": {
            "text": "string"
          },
          "default": "'star'"
        },
        {
          "kind": "variable",
          "name": "starIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[starIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "starIconName",
          "declaration": {
            "name": "starIconName",
            "module": "icon/shapes/star.js"
          }
        },
        {
          "kind": "js",
          "name": "starIcon",
          "declaration": {
            "name": "starIcon",
            "module": "icon/shapes/star.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/step-forward-2.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "stepForward2IconName",
          "type": {
            "text": "string"
          },
          "default": "'step-forward-2'"
        },
        {
          "kind": "variable",
          "name": "stepForward2Icon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[stepForward2IconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stepForward2IconName",
          "declaration": {
            "name": "stepForward2IconName",
            "module": "icon/shapes/step-forward-2.js"
          }
        },
        {
          "kind": "js",
          "name": "stepForward2Icon",
          "declaration": {
            "name": "stepForward2Icon",
            "module": "icon/shapes/step-forward-2.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/step-forward.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "stepForwardIconName",
          "type": {
            "text": "string"
          },
          "default": "'step-forward'"
        },
        {
          "kind": "variable",
          "name": "stepForwardIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[stepForwardIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stepForwardIconName",
          "declaration": {
            "name": "stepForwardIconName",
            "module": "icon/shapes/step-forward.js"
          }
        },
        {
          "kind": "js",
          "name": "stepForwardIcon",
          "declaration": {
            "name": "stepForwardIcon",
            "module": "icon/shapes/step-forward.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/stop.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "stopIconName",
          "type": {
            "text": "string"
          },
          "default": "'stop'"
        },
        {
          "kind": "variable",
          "name": "stopIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[stopIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stopIconName",
          "declaration": {
            "name": "stopIconName",
            "module": "icon/shapes/stop.js"
          }
        },
        {
          "kind": "js",
          "name": "stopIcon",
          "declaration": {
            "name": "stopIcon",
            "module": "icon/shapes/stop.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/storage-adapter.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "storageAdapterIconName",
          "type": {
            "text": "string"
          },
          "default": "'storage-adapter'"
        },
        {
          "kind": "variable",
          "name": "storageAdapterIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[storageAdapterIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "storageAdapterIconName",
          "declaration": {
            "name": "storageAdapterIconName",
            "module": "icon/shapes/storage-adapter.js"
          }
        },
        {
          "kind": "js",
          "name": "storageAdapterIcon",
          "declaration": {
            "name": "storageAdapterIcon",
            "module": "icon/shapes/storage-adapter.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/storage.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "storageIconName",
          "type": {
            "text": "string"
          },
          "default": "'storage'"
        },
        {
          "kind": "variable",
          "name": "storageIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[storageIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "storageIconName",
          "declaration": {
            "name": "storageIconName",
            "module": "icon/shapes/storage.js"
          }
        },
        {
          "kind": "js",
          "name": "storageIcon",
          "declaration": {
            "name": "storageIcon",
            "module": "icon/shapes/storage.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/store.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "storeIconName",
          "type": {
            "text": "string"
          },
          "default": "'store'"
        },
        {
          "kind": "variable",
          "name": "storeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[storeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "storeIconName",
          "declaration": {
            "name": "storeIconName",
            "module": "icon/shapes/store.js"
          }
        },
        {
          "kind": "js",
          "name": "storeIcon",
          "declaration": {
            "name": "storeIcon",
            "module": "icon/shapes/store.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/strikethrough.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "strikethroughIconName",
          "type": {
            "text": "string"
          },
          "default": "'strikethrough'"
        },
        {
          "kind": "variable",
          "name": "strikethroughIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[strikethroughIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "strikethroughIconName",
          "declaration": {
            "name": "strikethroughIconName",
            "module": "icon/shapes/strikethrough.js"
          }
        },
        {
          "kind": "js",
          "name": "strikethroughIcon",
          "declaration": {
            "name": "strikethroughIcon",
            "module": "icon/shapes/strikethrough.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/subscript.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "subscriptIconName",
          "type": {
            "text": "string"
          },
          "default": "'subscript'"
        },
        {
          "kind": "variable",
          "name": "subscriptIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[subscriptIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "subscriptIconName",
          "declaration": {
            "name": "subscriptIconName",
            "module": "icon/shapes/subscript.js"
          }
        },
        {
          "kind": "js",
          "name": "subscriptIcon",
          "declaration": {
            "name": "subscriptIcon",
            "module": "icon/shapes/subscript.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/success-standard.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "successStandardIconName",
          "type": {
            "text": "string"
          },
          "default": "'success-standard'"
        },
        {
          "kind": "variable",
          "name": "successStandardIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[successStandardIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "successStandardIconName",
          "declaration": {
            "name": "successStandardIconName",
            "module": "icon/shapes/success-standard.js"
          }
        },
        {
          "kind": "js",
          "name": "successStandardIcon",
          "declaration": {
            "name": "successStandardIcon",
            "module": "icon/shapes/success-standard.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/sun.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "sunIconName",
          "type": {
            "text": "string"
          },
          "default": "'sun'"
        },
        {
          "kind": "variable",
          "name": "sunIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[sunIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sunIconName",
          "declaration": {
            "name": "sunIconName",
            "module": "icon/shapes/sun.js"
          }
        },
        {
          "kind": "js",
          "name": "sunIcon",
          "declaration": {
            "name": "sunIcon",
            "module": "icon/shapes/sun.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/superscript.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "superscriptIconName",
          "type": {
            "text": "string"
          },
          "default": "'superscript'"
        },
        {
          "kind": "variable",
          "name": "superscriptIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[superscriptIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "superscriptIconName",
          "declaration": {
            "name": "superscriptIconName",
            "module": "icon/shapes/superscript.js"
          }
        },
        {
          "kind": "js",
          "name": "superscriptIcon",
          "declaration": {
            "name": "superscriptIcon",
            "module": "icon/shapes/superscript.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/switch.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "switchIconName",
          "type": {
            "text": "string"
          },
          "default": "'switch'"
        },
        {
          "kind": "variable",
          "name": "switchIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[switchIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "switchIconName",
          "declaration": {
            "name": "switchIconName",
            "module": "icon/shapes/switch.js"
          }
        },
        {
          "kind": "js",
          "name": "switchIcon",
          "declaration": {
            "name": "switchIcon",
            "module": "icon/shapes/switch.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/sync.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "syncIconName",
          "type": {
            "text": "string"
          },
          "default": "'sync'"
        },
        {
          "kind": "variable",
          "name": "syncIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[syncIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "syncIconName",
          "declaration": {
            "name": "syncIconName",
            "module": "icon/shapes/sync.js"
          }
        },
        {
          "kind": "js",
          "name": "syncIcon",
          "declaration": {
            "name": "syncIcon",
            "module": "icon/shapes/sync.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/table.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "tableIconName",
          "type": {
            "text": "string"
          },
          "default": "'table'"
        },
        {
          "kind": "variable",
          "name": "tableIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[tableIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tableIconName",
          "declaration": {
            "name": "tableIconName",
            "module": "icon/shapes/table.js"
          }
        },
        {
          "kind": "js",
          "name": "tableIcon",
          "declaration": {
            "name": "tableIcon",
            "module": "icon/shapes/table.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/tablet.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "tabletIconName",
          "type": {
            "text": "string"
          },
          "default": "'tablet'"
        },
        {
          "kind": "variable",
          "name": "tabletIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[tabletIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tabletIconName",
          "declaration": {
            "name": "tabletIconName",
            "module": "icon/shapes/tablet.js"
          }
        },
        {
          "kind": "js",
          "name": "tabletIcon",
          "declaration": {
            "name": "tabletIcon",
            "module": "icon/shapes/tablet.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/tag.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "tagIconName",
          "type": {
            "text": "string"
          },
          "default": "'tag'"
        },
        {
          "kind": "variable",
          "name": "tagIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[tagIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tagIconName",
          "declaration": {
            "name": "tagIconName",
            "module": "icon/shapes/tag.js"
          }
        },
        {
          "kind": "js",
          "name": "tagIcon",
          "declaration": {
            "name": "tagIcon",
            "module": "icon/shapes/tag.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/tags.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "tagsIconName",
          "type": {
            "text": "string"
          },
          "default": "'tags'"
        },
        {
          "kind": "variable",
          "name": "tagsIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[tagsIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tagsIconName",
          "declaration": {
            "name": "tagsIconName",
            "module": "icon/shapes/tags.js"
          }
        },
        {
          "kind": "js",
          "name": "tagsIcon",
          "declaration": {
            "name": "tagsIcon",
            "module": "icon/shapes/tags.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/talk-bubbles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "talkBubblesIconName",
          "type": {
            "text": "string"
          },
          "default": "'talk-bubbles'"
        },
        {
          "kind": "variable",
          "name": "talkBubblesIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[talkBubblesIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "talkBubblesIconName",
          "declaration": {
            "name": "talkBubblesIconName",
            "module": "icon/shapes/talk-bubbles.js"
          }
        },
        {
          "kind": "js",
          "name": "talkBubblesIcon",
          "declaration": {
            "name": "talkBubblesIcon",
            "module": "icon/shapes/talk-bubbles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/tape-drive.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "tapeDriveIconName",
          "type": {
            "text": "string"
          },
          "default": "'tape-drive'"
        },
        {
          "kind": "variable",
          "name": "tapeDriveIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[tapeDriveIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tapeDriveIconName",
          "declaration": {
            "name": "tapeDriveIconName",
            "module": "icon/shapes/tape-drive.js"
          }
        },
        {
          "kind": "js",
          "name": "tapeDriveIcon",
          "declaration": {
            "name": "tapeDriveIcon",
            "module": "icon/shapes/tape-drive.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/target.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "targetIconName",
          "type": {
            "text": "string"
          },
          "default": "'target'"
        },
        {
          "kind": "variable",
          "name": "targetIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[targetIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "targetIconName",
          "declaration": {
            "name": "targetIconName",
            "module": "icon/shapes/target.js"
          }
        },
        {
          "kind": "js",
          "name": "targetIcon",
          "declaration": {
            "name": "targetIcon",
            "module": "icon/shapes/target.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/tasks.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "tasksIconName",
          "type": {
            "text": "string"
          },
          "default": "'tasks'"
        },
        {
          "kind": "variable",
          "name": "tasksIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[tasksIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tasksIconName",
          "declaration": {
            "name": "tasksIconName",
            "module": "icon/shapes/tasks.js"
          }
        },
        {
          "kind": "js",
          "name": "tasksIcon",
          "declaration": {
            "name": "tasksIcon",
            "module": "icon/shapes/tasks.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/terminal.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "terminalIconName",
          "type": {
            "text": "string"
          },
          "default": "'terminal'"
        },
        {
          "kind": "variable",
          "name": "terminalIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[terminalIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "terminalIconName",
          "declaration": {
            "name": "terminalIconName",
            "module": "icon/shapes/terminal.js"
          }
        },
        {
          "kind": "js",
          "name": "terminalIcon",
          "declaration": {
            "name": "terminalIcon",
            "module": "icon/shapes/terminal.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/test.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "testIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "['test', renderIcon('test')]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "testIcon",
          "declaration": {
            "name": "testIcon",
            "module": "icon/shapes/test.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/text-color.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "textColorIconName",
          "type": {
            "text": "string"
          },
          "default": "'text-color'"
        },
        {
          "kind": "variable",
          "name": "textColorIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[textColorIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "textColorIconName",
          "declaration": {
            "name": "textColorIconName",
            "module": "icon/shapes/text-color.js"
          }
        },
        {
          "kind": "js",
          "name": "textColorIcon",
          "declaration": {
            "name": "textColorIcon",
            "module": "icon/shapes/text-color.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/text.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "textIconName",
          "type": {
            "text": "string"
          },
          "default": "'text'"
        },
        {
          "kind": "variable",
          "name": "textIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[textIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "textIconName",
          "declaration": {
            "name": "textIconName",
            "module": "icon/shapes/text.js"
          }
        },
        {
          "kind": "js",
          "name": "textIcon",
          "declaration": {
            "name": "textIcon",
            "module": "icon/shapes/text.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/thermometer.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "thermometerIconName",
          "type": {
            "text": "string"
          },
          "default": "'thermometer'"
        },
        {
          "kind": "variable",
          "name": "thermometerIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[thermometerIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "thermometerIconName",
          "declaration": {
            "name": "thermometerIconName",
            "module": "icon/shapes/thermometer.js"
          }
        },
        {
          "kind": "js",
          "name": "thermometerIcon",
          "declaration": {
            "name": "thermometerIcon",
            "module": "icon/shapes/thermometer.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/thin-client.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "thinClientIconName",
          "type": {
            "text": "string"
          },
          "default": "'thin-client'"
        },
        {
          "kind": "variable",
          "name": "thinClientIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[thinClientIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "thinClientIconName",
          "declaration": {
            "name": "thinClientIconName",
            "module": "icon/shapes/thin-client.js"
          }
        },
        {
          "kind": "js",
          "name": "thinClientIcon",
          "declaration": {
            "name": "thinClientIcon",
            "module": "icon/shapes/thin-client.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/thumbs-down.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "thumbsDownIconName",
          "type": {
            "text": "string"
          },
          "default": "'thumbs-down'"
        },
        {
          "kind": "variable",
          "name": "thumbsDownIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[thumbsDownIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "thumbsDownIconName",
          "declaration": {
            "name": "thumbsDownIconName",
            "module": "icon/shapes/thumbs-down.js"
          }
        },
        {
          "kind": "js",
          "name": "thumbsDownIcon",
          "declaration": {
            "name": "thumbsDownIcon",
            "module": "icon/shapes/thumbs-down.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/thumbs-up.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "thumbsUpIconName",
          "type": {
            "text": "string"
          },
          "default": "'thumbs-up'"
        },
        {
          "kind": "variable",
          "name": "thumbsUpIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[thumbsUpIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "thumbsUpIconName",
          "declaration": {
            "name": "thumbsUpIconName",
            "module": "icon/shapes/thumbs-up.js"
          }
        },
        {
          "kind": "js",
          "name": "thumbsUpIcon",
          "declaration": {
            "name": "thumbsUpIcon",
            "module": "icon/shapes/thumbs-up.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/tick-chart.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "tickChartIconName",
          "type": {
            "text": "string"
          },
          "default": "'tick-chart'"
        },
        {
          "kind": "variable",
          "name": "tickChartIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[tickChartIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tickChartIconName",
          "declaration": {
            "name": "tickChartIconName",
            "module": "icon/shapes/tick-chart.js"
          }
        },
        {
          "kind": "js",
          "name": "tickChartIcon",
          "declaration": {
            "name": "tickChartIcon",
            "module": "icon/shapes/tick-chart.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/timeline.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "timelineIconName",
          "type": {
            "text": "string"
          },
          "default": "'timeline'"
        },
        {
          "kind": "variable",
          "name": "timelineIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[timelineIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "timelineIconName",
          "declaration": {
            "name": "timelineIconName",
            "module": "icon/shapes/timeline.js"
          }
        },
        {
          "kind": "js",
          "name": "timelineIcon",
          "declaration": {
            "name": "timelineIcon",
            "module": "icon/shapes/timeline.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/times-circle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "timesCircleIconName",
          "type": {
            "text": "string"
          },
          "default": "'times-circle'"
        },
        {
          "kind": "variable",
          "name": "timesCircleIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[timesCircleIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "timesCircleIconName",
          "declaration": {
            "name": "timesCircleIconName",
            "module": "icon/shapes/times-circle.js"
          }
        },
        {
          "kind": "js",
          "name": "timesCircleIcon",
          "declaration": {
            "name": "timesCircleIcon",
            "module": "icon/shapes/times-circle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/times-mini.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "timesMiniIconName",
          "type": {
            "text": "string"
          },
          "default": "'times-mini'"
        },
        {
          "kind": "variable",
          "name": "timesMiniIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[timesMiniIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "timesMiniIconName",
          "declaration": {
            "name": "timesMiniIconName",
            "module": "icon/shapes/times-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "timesMiniIcon",
          "declaration": {
            "name": "timesMiniIcon",
            "module": "icon/shapes/times-mini.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/times.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "timesIconName",
          "type": {
            "text": "string"
          },
          "default": "'times'"
        },
        {
          "kind": "variable",
          "name": "timesIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[timesIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "timesIconName",
          "declaration": {
            "name": "timesIconName",
            "module": "icon/shapes/times.js"
          }
        },
        {
          "kind": "js",
          "name": "timesIcon",
          "declaration": {
            "name": "timesIcon",
            "module": "icon/shapes/times.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/tools.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "toolsIconName",
          "type": {
            "text": "string"
          },
          "default": "'tools'"
        },
        {
          "kind": "variable",
          "name": "toolsIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[toolsIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toolsIconName",
          "declaration": {
            "name": "toolsIconName",
            "module": "icon/shapes/tools.js"
          }
        },
        {
          "kind": "js",
          "name": "toolsIcon",
          "declaration": {
            "name": "toolsIcon",
            "module": "icon/shapes/tools.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/trailer.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "trailerIconName",
          "type": {
            "text": "string"
          },
          "default": "'trailer'"
        },
        {
          "kind": "variable",
          "name": "trailerIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[trailerIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "trailerIconName",
          "declaration": {
            "name": "trailerIconName",
            "module": "icon/shapes/trailer.js"
          }
        },
        {
          "kind": "js",
          "name": "trailerIcon",
          "declaration": {
            "name": "trailerIcon",
            "module": "icon/shapes/trailer.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/trash.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "trashIconName",
          "type": {
            "text": "string"
          },
          "default": "'trash'"
        },
        {
          "kind": "variable",
          "name": "trashIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[trashIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "trashIconName",
          "declaration": {
            "name": "trashIconName",
            "module": "icon/shapes/trash.js"
          }
        },
        {
          "kind": "js",
          "name": "trashIcon",
          "declaration": {
            "name": "trashIcon",
            "module": "icon/shapes/trash.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/tree-view.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "treeViewIconName",
          "type": {
            "text": "string"
          },
          "default": "'tree-view'"
        },
        {
          "kind": "variable",
          "name": "treeViewIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[treeViewIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "treeViewIconName",
          "declaration": {
            "name": "treeViewIconName",
            "module": "icon/shapes/tree-view.js"
          }
        },
        {
          "kind": "js",
          "name": "treeViewIcon",
          "declaration": {
            "name": "treeViewIcon",
            "module": "icon/shapes/tree-view.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/tree.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "treeIconName",
          "type": {
            "text": "string"
          },
          "default": "'tree'"
        },
        {
          "kind": "variable",
          "name": "treeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[treeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "treeIconName",
          "declaration": {
            "name": "treeIconName",
            "module": "icon/shapes/tree.js"
          }
        },
        {
          "kind": "js",
          "name": "treeIcon",
          "declaration": {
            "name": "treeIcon",
            "module": "icon/shapes/tree.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/truck.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "truckIconName",
          "type": {
            "text": "string"
          },
          "default": "'truck'"
        },
        {
          "kind": "variable",
          "name": "truckIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[truckIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "truckIconName",
          "declaration": {
            "name": "truckIconName",
            "module": "icon/shapes/truck.js"
          }
        },
        {
          "kind": "js",
          "name": "truckIcon",
          "declaration": {
            "name": "truckIcon",
            "module": "icon/shapes/truck.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/two-way-arrows.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "twoWayArrowsIconName",
          "type": {
            "text": "string"
          },
          "default": "'two-way-arrows'"
        },
        {
          "kind": "variable",
          "name": "twoWayArrowsIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[twoWayArrowsIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "twoWayArrowsIconName",
          "declaration": {
            "name": "twoWayArrowsIconName",
            "module": "icon/shapes/two-way-arrows.js"
          }
        },
        {
          "kind": "js",
          "name": "twoWayArrowsIcon",
          "declaration": {
            "name": "twoWayArrowsIcon",
            "module": "icon/shapes/two-way-arrows.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/unarchive.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "unarchiveIconName",
          "type": {
            "text": "string"
          },
          "default": "'unarchive'"
        },
        {
          "kind": "variable",
          "name": "unarchiveIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[unarchiveIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "unarchiveIconName",
          "declaration": {
            "name": "unarchiveIconName",
            "module": "icon/shapes/unarchive.js"
          }
        },
        {
          "kind": "js",
          "name": "unarchiveIcon",
          "declaration": {
            "name": "unarchiveIcon",
            "module": "icon/shapes/unarchive.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/underline.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "underlineIconName",
          "type": {
            "text": "string"
          },
          "default": "'underline'"
        },
        {
          "kind": "variable",
          "name": "underlineIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[underlineIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "underlineIconName",
          "declaration": {
            "name": "underlineIconName",
            "module": "icon/shapes/underline.js"
          }
        },
        {
          "kind": "js",
          "name": "underlineIcon",
          "declaration": {
            "name": "underlineIcon",
            "module": "icon/shapes/underline.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/undo.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "undoIconName",
          "type": {
            "text": "string"
          },
          "default": "'undo'"
        },
        {
          "kind": "variable",
          "name": "undoIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[undoIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "undoIconName",
          "declaration": {
            "name": "undoIconName",
            "module": "icon/shapes/undo.js"
          }
        },
        {
          "kind": "js",
          "name": "undoIcon",
          "declaration": {
            "name": "undoIcon",
            "module": "icon/shapes/undo.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/uninstall.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "uninstallIconName",
          "type": {
            "text": "string"
          },
          "default": "'uninstall'"
        },
        {
          "kind": "variable",
          "name": "uninstallIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[uninstallIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "uninstallIconName",
          "declaration": {
            "name": "uninstallIconName",
            "module": "icon/shapes/uninstall.js"
          }
        },
        {
          "kind": "js",
          "name": "uninstallIcon",
          "declaration": {
            "name": "uninstallIcon",
            "module": "icon/shapes/uninstall.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/unknown-status.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "unknownStatusIconName",
          "type": {
            "text": "string"
          },
          "default": "'unknown-status'"
        },
        {
          "kind": "variable",
          "name": "unknownStatusIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[unknownStatusIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "unknownStatusIconName",
          "declaration": {
            "name": "unknownStatusIconName",
            "module": "icon/shapes/unknown-status.js"
          }
        },
        {
          "kind": "js",
          "name": "unknownStatusIcon",
          "declaration": {
            "name": "unknownStatusIcon",
            "module": "icon/shapes/unknown-status.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/unknown.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "unknownIconName",
          "type": {
            "text": "string"
          },
          "default": "'unknown'"
        },
        {
          "kind": "variable",
          "name": "unknownIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[unknownIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "unknownIconName",
          "declaration": {
            "name": "unknownIconName",
            "module": "icon/shapes/unknown.js"
          }
        },
        {
          "kind": "js",
          "name": "unknownIcon",
          "declaration": {
            "name": "unknownIcon",
            "module": "icon/shapes/unknown.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/unlink.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "unlinkIconName",
          "type": {
            "text": "string"
          },
          "default": "'unlink'"
        },
        {
          "kind": "variable",
          "name": "unlinkIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[unlinkIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "unlinkIconName",
          "declaration": {
            "name": "unlinkIconName",
            "module": "icon/shapes/unlink.js"
          }
        },
        {
          "kind": "js",
          "name": "unlinkIcon",
          "declaration": {
            "name": "unlinkIcon",
            "module": "icon/shapes/unlink.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/unlock.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "unlockIconName",
          "type": {
            "text": "string"
          },
          "default": "'unlock'"
        },
        {
          "kind": "variable",
          "name": "unlockIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[unlockIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "unlockIconName",
          "declaration": {
            "name": "unlockIconName",
            "module": "icon/shapes/unlock.js"
          }
        },
        {
          "kind": "js",
          "name": "unlockIcon",
          "declaration": {
            "name": "unlockIcon",
            "module": "icon/shapes/unlock.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/update.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "updateIconName",
          "type": {
            "text": "string"
          },
          "default": "'update'"
        },
        {
          "kind": "variable",
          "name": "updateIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[updateIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "updateIconName",
          "declaration": {
            "name": "updateIconName",
            "module": "icon/shapes/update.js"
          }
        },
        {
          "kind": "js",
          "name": "updateIcon",
          "declaration": {
            "name": "updateIcon",
            "module": "icon/shapes/update.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/upload-cloud.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "uploadCloudIconName",
          "type": {
            "text": "string"
          },
          "default": "'upload-cloud'"
        },
        {
          "kind": "variable",
          "name": "uploadCloudIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[uploadCloudIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "uploadCloudIconName",
          "declaration": {
            "name": "uploadCloudIconName",
            "module": "icon/shapes/upload-cloud.js"
          }
        },
        {
          "kind": "js",
          "name": "uploadCloudIcon",
          "declaration": {
            "name": "uploadCloudIcon",
            "module": "icon/shapes/upload-cloud.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/upload.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "uploadIconName",
          "type": {
            "text": "string"
          },
          "default": "'upload'"
        },
        {
          "kind": "variable",
          "name": "uploadIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[uploadIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "uploadIconName",
          "declaration": {
            "name": "uploadIconName",
            "module": "icon/shapes/upload.js"
          }
        },
        {
          "kind": "js",
          "name": "uploadIcon",
          "declaration": {
            "name": "uploadIcon",
            "module": "icon/shapes/upload.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/usb.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "usbIconName",
          "type": {
            "text": "string"
          },
          "default": "'usb'"
        },
        {
          "kind": "variable",
          "name": "usbIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[usbIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "usbIconName",
          "declaration": {
            "name": "usbIconName",
            "module": "icon/shapes/usb.js"
          }
        },
        {
          "kind": "js",
          "name": "usbIcon",
          "declaration": {
            "name": "usbIcon",
            "module": "icon/shapes/usb.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/user.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "userIconName",
          "type": {
            "text": "string"
          },
          "default": "'user'"
        },
        {
          "kind": "variable",
          "name": "userIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[userIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "userIconName",
          "declaration": {
            "name": "userIconName",
            "module": "icon/shapes/user.js"
          }
        },
        {
          "kind": "js",
          "name": "userIcon",
          "declaration": {
            "name": "userIcon",
            "module": "icon/shapes/user.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/users.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "usersIconName",
          "type": {
            "text": "string"
          },
          "default": "'users'"
        },
        {
          "kind": "variable",
          "name": "usersIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[usersIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "usersIconName",
          "declaration": {
            "name": "usersIconName",
            "module": "icon/shapes/users.js"
          }
        },
        {
          "kind": "js",
          "name": "usersIcon",
          "declaration": {
            "name": "usersIcon",
            "module": "icon/shapes/users.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/video-camera.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "videoCameraIconName",
          "type": {
            "text": "string"
          },
          "default": "'video-camera'"
        },
        {
          "kind": "variable",
          "name": "videoCameraIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[videoCameraIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "videoCameraIconName",
          "declaration": {
            "name": "videoCameraIconName",
            "module": "icon/shapes/video-camera.js"
          }
        },
        {
          "kind": "js",
          "name": "videoCameraIcon",
          "declaration": {
            "name": "videoCameraIcon",
            "module": "icon/shapes/video-camera.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/video-gallery.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "videoGalleryIconName",
          "type": {
            "text": "string"
          },
          "default": "'video-gallery'"
        },
        {
          "kind": "variable",
          "name": "videoGalleryIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[videoGalleryIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "videoGalleryIconName",
          "declaration": {
            "name": "videoGalleryIconName",
            "module": "icon/shapes/video-gallery.js"
          }
        },
        {
          "kind": "js",
          "name": "videoGalleryIcon",
          "declaration": {
            "name": "videoGalleryIcon",
            "module": "icon/shapes/video-gallery.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/view-cards.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "viewCardsIconName",
          "type": {
            "text": "string"
          },
          "default": "'view-cards'"
        },
        {
          "kind": "variable",
          "name": "viewCardsIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[viewCardsIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "viewCardsIconName",
          "declaration": {
            "name": "viewCardsIconName",
            "module": "icon/shapes/view-cards.js"
          }
        },
        {
          "kind": "js",
          "name": "viewCardsIcon",
          "declaration": {
            "name": "viewCardsIcon",
            "module": "icon/shapes/view-cards.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/view-columns.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "viewColumnsIconName",
          "type": {
            "text": "string"
          },
          "default": "'view-columns'"
        },
        {
          "kind": "variable",
          "name": "viewColumnsIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[viewColumnsIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "viewColumnsIconName",
          "declaration": {
            "name": "viewColumnsIconName",
            "module": "icon/shapes/view-columns.js"
          }
        },
        {
          "kind": "js",
          "name": "viewColumnsIcon",
          "declaration": {
            "name": "viewColumnsIcon",
            "module": "icon/shapes/view-columns.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/view-list.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "viewListIconName",
          "type": {
            "text": "string"
          },
          "default": "'view-list'"
        },
        {
          "kind": "variable",
          "name": "viewListIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[viewListIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "viewListIconName",
          "declaration": {
            "name": "viewListIconName",
            "module": "icon/shapes/view-list.js"
          }
        },
        {
          "kind": "js",
          "name": "viewListIcon",
          "declaration": {
            "name": "viewListIcon",
            "module": "icon/shapes/view-list.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/vm-bug-inverse.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "vmBugInverseIconName",
          "type": {
            "text": "string"
          },
          "default": "'vm-bug-inverse'"
        },
        {
          "kind": "variable",
          "name": "vmBugInverseIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[vmBugInverseIconName, icon]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "vmBugInverseIconName",
          "declaration": {
            "name": "vmBugInverseIconName",
            "module": "icon/shapes/vm-bug-inverse.js"
          }
        },
        {
          "kind": "js",
          "name": "vmBugInverseIcon",
          "declaration": {
            "name": "vmBugInverseIcon",
            "module": "icon/shapes/vm-bug-inverse.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/vm-bug.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "vmBugIconName",
          "type": {
            "text": "string"
          },
          "default": "'vm-bug'"
        },
        {
          "kind": "variable",
          "name": "vmBugIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[vmBugIconName, icon]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "vmBugIconName",
          "declaration": {
            "name": "vmBugIconName",
            "module": "icon/shapes/vm-bug.js"
          }
        },
        {
          "kind": "js",
          "name": "vmBugIcon",
          "declaration": {
            "name": "vmBugIcon",
            "module": "icon/shapes/vm-bug.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/vm.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "vmIconName",
          "type": {
            "text": "string"
          },
          "default": "'vm'"
        },
        {
          "kind": "variable",
          "name": "vmIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[vmIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "vmIconName",
          "declaration": {
            "name": "vmIconName",
            "module": "icon/shapes/vm.js"
          }
        },
        {
          "kind": "js",
          "name": "vmIcon",
          "declaration": {
            "name": "vmIcon",
            "module": "icon/shapes/vm.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/vmw-app.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "vmwAppIconName",
          "type": {
            "text": "string"
          },
          "default": "'vmw-app'"
        },
        {
          "kind": "variable",
          "name": "vmwAppIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[vmwAppIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "vmwAppIconName",
          "declaration": {
            "name": "vmwAppIconName",
            "module": "icon/shapes/vmw-app.js"
          }
        },
        {
          "kind": "js",
          "name": "vmwAppIcon",
          "declaration": {
            "name": "vmwAppIcon",
            "module": "icon/shapes/vmw-app.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/volume-down.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "volumeDownIconName",
          "type": {
            "text": "string"
          },
          "default": "'volume-down'"
        },
        {
          "kind": "variable",
          "name": "volumeDownIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[volumeDownIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "volumeDownIconName",
          "declaration": {
            "name": "volumeDownIconName",
            "module": "icon/shapes/volume-down.js"
          }
        },
        {
          "kind": "js",
          "name": "volumeDownIcon",
          "declaration": {
            "name": "volumeDownIcon",
            "module": "icon/shapes/volume-down.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/volume-mute.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "volumeMuteIconName",
          "type": {
            "text": "string"
          },
          "default": "'volume-mute'"
        },
        {
          "kind": "variable",
          "name": "volumeMuteIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[volumeMuteIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "volumeMuteIconName",
          "declaration": {
            "name": "volumeMuteIconName",
            "module": "icon/shapes/volume-mute.js"
          }
        },
        {
          "kind": "js",
          "name": "volumeMuteIcon",
          "declaration": {
            "name": "volumeMuteIcon",
            "module": "icon/shapes/volume-mute.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/volume-up.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "volumeUpIconName",
          "type": {
            "text": "string"
          },
          "default": "'volume-up'"
        },
        {
          "kind": "variable",
          "name": "volumeUpIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[volumeUpIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "volumeUpIconName",
          "declaration": {
            "name": "volumeUpIconName",
            "module": "icon/shapes/volume-up.js"
          }
        },
        {
          "kind": "js",
          "name": "volumeUpIcon",
          "declaration": {
            "name": "volumeUpIcon",
            "module": "icon/shapes/volume-up.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/volume.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "volumeIconName",
          "type": {
            "text": "string"
          },
          "default": "'volume'"
        },
        {
          "kind": "variable",
          "name": "volumeIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[volumeIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "volumeIconName",
          "declaration": {
            "name": "volumeIconName",
            "module": "icon/shapes/volume.js"
          }
        },
        {
          "kind": "js",
          "name": "volumeIcon",
          "declaration": {
            "name": "volumeIcon",
            "module": "icon/shapes/volume.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/wallet.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "walletIconName",
          "type": {
            "text": "string"
          },
          "default": "'wallet'"
        },
        {
          "kind": "variable",
          "name": "walletIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[walletIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "walletIconName",
          "declaration": {
            "name": "walletIconName",
            "module": "icon/shapes/wallet.js"
          }
        },
        {
          "kind": "js",
          "name": "walletIcon",
          "declaration": {
            "name": "walletIcon",
            "module": "icon/shapes/wallet.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/wand.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "wandIconName",
          "type": {
            "text": "string"
          },
          "default": "'wand'"
        },
        {
          "kind": "variable",
          "name": "wandIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[wandIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "wandIconName",
          "declaration": {
            "name": "wandIconName",
            "module": "icon/shapes/wand.js"
          }
        },
        {
          "kind": "js",
          "name": "wandIcon",
          "declaration": {
            "name": "wandIcon",
            "module": "icon/shapes/wand.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/warning-mini.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "warningMiniIconName",
          "type": {
            "text": "string"
          },
          "default": "'warning-mini'"
        },
        {
          "kind": "variable",
          "name": "warningMiniIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[warningMiniIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "warningMiniIconName",
          "declaration": {
            "name": "warningMiniIconName",
            "module": "icon/shapes/warning-mini.js"
          }
        },
        {
          "kind": "js",
          "name": "warningMiniIcon",
          "declaration": {
            "name": "warningMiniIcon",
            "module": "icon/shapes/warning-mini.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/warning-standard.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "warningStandardIconName",
          "type": {
            "text": "string"
          },
          "default": "'warning-standard'"
        },
        {
          "kind": "variable",
          "name": "warningStandardIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[warningStandardIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "warningStandardIconName",
          "declaration": {
            "name": "warningStandardIconName",
            "module": "icon/shapes/warning-standard.js"
          }
        },
        {
          "kind": "js",
          "name": "warningStandardIcon",
          "declaration": {
            "name": "warningStandardIcon",
            "module": "icon/shapes/warning-standard.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/wifi.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "wifiIconName",
          "type": {
            "text": "string"
          },
          "default": "'wifi'"
        },
        {
          "kind": "variable",
          "name": "wifiIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[wifiIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "wifiIconName",
          "declaration": {
            "name": "wifiIconName",
            "module": "icon/shapes/wifi.js"
          }
        },
        {
          "kind": "js",
          "name": "wifiIcon",
          "declaration": {
            "name": "wifiIcon",
            "module": "icon/shapes/wifi.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/window-close.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "windowCloseIconName",
          "type": {
            "text": "string"
          },
          "default": "'window-close'"
        },
        {
          "kind": "variable",
          "name": "windowCloseIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[windowCloseIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "windowCloseIconName",
          "declaration": {
            "name": "windowCloseIconName",
            "module": "icon/shapes/window-close.js"
          }
        },
        {
          "kind": "js",
          "name": "windowCloseIcon",
          "declaration": {
            "name": "windowCloseIcon",
            "module": "icon/shapes/window-close.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/window-max.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "windowMaxIconName",
          "type": {
            "text": "string"
          },
          "default": "'window-max'"
        },
        {
          "kind": "variable",
          "name": "windowMaxIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[windowMaxIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "windowMaxIconName",
          "declaration": {
            "name": "windowMaxIconName",
            "module": "icon/shapes/window-max.js"
          }
        },
        {
          "kind": "js",
          "name": "windowMaxIcon",
          "declaration": {
            "name": "windowMaxIcon",
            "module": "icon/shapes/window-max.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/window-min.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "windowMinIconName",
          "type": {
            "text": "string"
          },
          "default": "'window-min'"
        },
        {
          "kind": "variable",
          "name": "windowMinIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[windowMinIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "windowMinIconName",
          "declaration": {
            "name": "windowMinIconName",
            "module": "icon/shapes/window-min.js"
          }
        },
        {
          "kind": "js",
          "name": "windowMinIcon",
          "declaration": {
            "name": "windowMinIcon",
            "module": "icon/shapes/window-min.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/window-restore.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "windowRestoreIconName",
          "type": {
            "text": "string"
          },
          "default": "'window-restore'"
        },
        {
          "kind": "variable",
          "name": "windowRestoreIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[windowRestoreIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "windowRestoreIconName",
          "declaration": {
            "name": "windowRestoreIconName",
            "module": "icon/shapes/window-restore.js"
          }
        },
        {
          "kind": "js",
          "name": "windowRestoreIcon",
          "declaration": {
            "name": "windowRestoreIcon",
            "module": "icon/shapes/window-restore.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/won.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "wonIconName",
          "type": {
            "text": "string"
          },
          "default": "'won'"
        },
        {
          "kind": "variable",
          "name": "wonIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[wonIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "wonIconName",
          "declaration": {
            "name": "wonIconName",
            "module": "icon/shapes/won.js"
          }
        },
        {
          "kind": "js",
          "name": "wonIcon",
          "declaration": {
            "name": "wonIcon",
            "module": "icon/shapes/won.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/world.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "worldIconName",
          "type": {
            "text": "string"
          },
          "default": "'world'"
        },
        {
          "kind": "variable",
          "name": "worldIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[worldIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "worldIconName",
          "declaration": {
            "name": "worldIconName",
            "module": "icon/shapes/world.js"
          }
        },
        {
          "kind": "js",
          "name": "worldIcon",
          "declaration": {
            "name": "worldIcon",
            "module": "icon/shapes/world.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/wrench.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "wrenchIconName",
          "type": {
            "text": "string"
          },
          "default": "'wrench'"
        },
        {
          "kind": "variable",
          "name": "wrenchIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[wrenchIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "wrenchIconName",
          "declaration": {
            "name": "wrenchIconName",
            "module": "icon/shapes/wrench.js"
          }
        },
        {
          "kind": "js",
          "name": "wrenchIcon",
          "declaration": {
            "name": "wrenchIcon",
            "module": "icon/shapes/wrench.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/xls-file.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "xlsFileIconName",
          "type": {
            "text": "string"
          },
          "default": "'xls-file'"
        },
        {
          "kind": "variable",
          "name": "xlsFileIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[xlsFileIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "xlsFileIconName",
          "declaration": {
            "name": "xlsFileIconName",
            "module": "icon/shapes/xls-file.js"
          }
        },
        {
          "kind": "js",
          "name": "xlsFileIcon",
          "declaration": {
            "name": "xlsFileIcon",
            "module": "icon/shapes/xls-file.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/yen.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "yenIconName",
          "type": {
            "text": "string"
          },
          "default": "'yen'"
        },
        {
          "kind": "variable",
          "name": "yenIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[yenIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "yenIconName",
          "declaration": {
            "name": "yenIconName",
            "module": "icon/shapes/yen.js"
          }
        },
        {
          "kind": "js",
          "name": "yenIcon",
          "declaration": {
            "name": "yenIcon",
            "module": "icon/shapes/yen.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/zoom-in.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "zoomInIconName",
          "type": {
            "text": "string"
          },
          "default": "'zoom-in'"
        },
        {
          "kind": "variable",
          "name": "zoomInIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[zoomInIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "zoomInIconName",
          "declaration": {
            "name": "zoomInIconName",
            "module": "icon/shapes/zoom-in.js"
          }
        },
        {
          "kind": "js",
          "name": "zoomInIcon",
          "declaration": {
            "name": "zoomInIcon",
            "module": "icon/shapes/zoom-in.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/shapes/zoom-out.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "zoomOutIconName",
          "type": {
            "text": "string"
          },
          "default": "'zoom-out'"
        },
        {
          "kind": "variable",
          "name": "zoomOutIcon",
          "type": {
            "text": "IconShapeTuple"
          },
          "default": "[zoomOutIconName, renderIcon(icon)]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "zoomOutIconName",
          "declaration": {
            "name": "zoomOutIconName",
            "module": "icon/shapes/zoom-out.js"
          }
        },
        {
          "kind": "js",
          "name": "zoomOutIcon",
          "declaration": {
            "name": "zoomOutIcon",
            "module": "icon/shapes/zoom-out.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/utils/icon.classnames.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getUpdateSizeStrategy",
          "parameters": [
            {
              "name": "size",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getSizeValue",
          "parameters": [
            {
              "name": "size",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "updateIconSizeStyle",
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "CdsIcon"
              }
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getUpdateSizeStrategy",
          "declaration": {
            "name": "getUpdateSizeStrategy",
            "module": "icon/utils/icon.classnames.js"
          }
        },
        {
          "kind": "js",
          "name": "getSizeValue",
          "declaration": {
            "name": "getSizeValue",
            "module": "icon/utils/icon.classnames.js"
          }
        },
        {
          "kind": "js",
          "name": "updateIconSizeStyle",
          "declaration": {
            "name": "updateIconSizeStyle",
            "module": "icon/utils/icon.classnames.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/utils/icon.svg-helpers.js",
      "declarations": [
        {
          "kind": "function",
          "name": "hasAlertBadge",
          "parameters": [
            {
              "name": "icon",
              "type": {
                "text": "CdsIcon"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getIconBadgeSVG",
          "parameters": [
            {
              "name": "icon",
              "type": {
                "text": "CdsIcon"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getIconSVG",
          "parameters": [
            {
              "name": "icon",
              "type": {
                "text": "CdsIcon"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasAlertBadge",
          "declaration": {
            "name": "hasAlertBadge",
            "module": "icon/utils/icon.svg-helpers.js"
          }
        },
        {
          "kind": "js",
          "name": "getIconBadgeSVG",
          "declaration": {
            "name": "getIconBadgeSVG",
            "module": "icon/utils/icon.svg-helpers.js"
          }
        },
        {
          "kind": "js",
          "name": "getIconSVG",
          "declaration": {
            "name": "getIconSVG",
            "module": "icon/utils/icon.svg-helpers.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "icon/utils/test-icons.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "dummyIconShape",
          "type": {
            "text": "string"
          },
          "default": "'<path d=\"...\"/><path d=\"...\"/><path d=\"...\"/>'"
        },
        {
          "kind": "variable",
          "name": "testIcons",
          "type": {
            "text": "any"
          },
          "default": "{\n  badgedIcon: [\n    'badged',\n    {\n      outline: dummyIconShape,\n      outlineBadged: dummyIconShape,\n    },\n  ],\n\n  badgedIcon2: [\n    'badgedToo',\n    {\n      solid: dummyIconShape,\n      solidBadged: dummyIconShape,\n    },\n  ],\n\n  nonBadgedIcon: [\n    'non-badged',\n    {\n      outline: dummyIconShape,\n      outlineAlerted: dummyIconShape,\n    },\n  ],\n\n  alertedIcon: [\n    'alerted',\n    {\n      outline: dummyIconShape,\n      outlineAlerted: dummyIconShape,\n    },\n  ],\n\n  alertedIcon2: [\n    'alertedToo',\n    {\n      solid: dummyIconShape,\n      solidAlerted: dummyIconShape,\n    },\n  ],\n\n  nonAlertedIcon: [\n    'non-alerted',\n    {\n      outline: dummyIconShape,\n      outlineBadged: dummyIconShape,\n    },\n  ],\n\n  solidIcon: [\n    'solid',\n    {\n      outline: dummyIconShape,\n      solid: dummyIconShape,\n    },\n  ],\n\n  solidIcon2: [\n    'solidToo',\n    {\n      solidAlerted: dummyIconShape,\n    },\n  ],\n\n  solidIcon3: [\n    'solidThree',\n    {\n      solidBadged: dummyIconShape,\n    },\n  ],\n\n  justOutline: [\n    'not-solid',\n    {\n      outline: dummyIconShape,\n    },\n  ],\n\n  allIcon: [\n    'all',\n    {\n      outline: dummyIconShape,\n      outlineAlerted: dummyIconShape,\n      outlineBadged: dummyIconShape,\n      solid: dummyIconShape,\n      solidAlerted: dummyIconShape,\n      solidBadged: dummyIconShape,\n    },\n  ],\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "dummyIconShape",
          "declaration": {
            "name": "dummyIconShape",
            "module": "icon/utils/test-icons.js"
          }
        },
        {
          "kind": "js",
          "name": "testIcons",
          "declaration": {
            "name": "testIcons",
            "module": "icon/utils/test-icons.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "I18nService",
          "declaration": {
            "name": "I18nService",
            "package": "@cds/core/internal"
          }
        },
        {
          "kind": "js",
          "name": "componentStringsDefault",
          "declaration": {
            "name": "componentStringsDefault",
            "package": "@cds/core/internal"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "input/index.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "inputStyles",
          "default": "styles"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./input.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./input-group.element.js"
          }
        },
        {
          "kind": "js",
          "name": "inputStyles",
          "declaration": {
            "name": "inputStyles",
            "module": "input/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "input/input-group.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Input Group\n\n```typescript\nimport '@cds/core/input/register.js';\n```\n\n```html\n<cds-input-group>\n  <label>Host URL</label>\n  <cds-select cds-layout=\"align:shrink\">\n    <label>URL Protocol</label>\n    <select>\n      <option>https://</option>\n      <option>http://</option>\n    </select>\n  </cds-select>\n  <cds-input>\n    <label>Host URL</label>\n    <input placeholder=\"example.com\" type=\"url\" />\n  </cds-input>\n  <cds-control-message>Host ID: 123456</cds-control-message>\n</cds-input-group>\n```",
          "name": "CdsInputGroup",
          "slots": [
            {
              "description": "For projecting inputs",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "controls",
              "type": {
                "text": "NodeListOf<CdsControl | CdsInternalControlInline>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isInlineControlGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of control group validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "horizontal | horizontal"
              },
              "default": "defaultFormLayout",
              "description": "-inline | vertical | vertical-inline | compact}",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "attribute": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disable all controls within a control group or omit and disable controls individually",
              "attribute": "disabled",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "groupLabelId",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<FormLayout>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isControlGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlsTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inlineControlLayout",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelLayout",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlMessageLayout",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateLabelAndGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "method",
              "name": "updateControlMessages",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsInternalControlGroup",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-input-group",
          "customElement": true,
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of control group validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "horizontal | horizontal"
              },
              "default": "defaultFormLayout",
              "description": "-inline | vertical | vertical-inline | compact}",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "fieldName": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disable all controls within a control group or omit and disable controls individually",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsInputGroup",
          "declaration": {
            "name": "CdsInputGroup",
            "module": "input/input-group.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "input/input.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Input\n\n```typescript\nimport '@cds/core/input/register.js';\n```\n\n```html\n<cds-input>\n  <label>input</label>\n  <input type=\"text\" />\n</cds-input>\n```",
          "name": "CdsInput",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--background-size"
            },
            {
              "name": "--border"
            },
            {
              "name": "--border-color"
            },
            {
              "name": "--border-bottom"
            },
            {
              "name": "--outline"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--color"
            },
            {
              "name": "--line-height"
            },
            {
              "name": "--transition"
            }
          ],
          "slots": [
            {
              "description": "For projecting input and label",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              },
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsControl",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-input",
          "customElement": true,
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsInput",
          "declaration": {
            "name": "CdsInput",
            "module": "input/input.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "input/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "internal-components/close-button/close-button.element.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "CdsCloseButtonTagName",
          "type": {
            "text": "string"
          },
          "default": "'cds-internal-close-button'"
        },
        {
          "kind": "function",
          "name": "appendCloseButton",
          "parameters": [
            {
              "name": "hostElement",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "attributes",
              "optional": true,
              "type": {
                "text": "HTMLAttributeTuple[]"
              }
            },
            {
              "name": "clickHandler",
              "optional": true,
              "type": {
                "text": "() => void"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "removeCloseButton",
          "parameters": [
            {
              "name": "hostElement",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "Standard close button for Clarity Components\n\n```typescript\nimport '@cds/core/internal-components/close-button/register.js';\n```\n\n```html\n<cds-internal-close-button></cds-internal-close-button>\n```",
          "name": "CdsInternalCloseButton",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--opacity"
            },
            {
              "name": "--padding"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "iconSize",
              "type": {
                "text": "string"
              },
              "default": "'18'",
              "attribute": "iconSize"
            },
            {
              "kind": "field",
              "name": "iconShape",
              "type": {
                "text": "string"
              },
              "default": "'times'",
              "attribute": "iconShape"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "readonly",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "attribute": "type",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "attribute": "name",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "attribute": "value",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "tabIndexAttr",
              "type": {
                "text": "number | null"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "isAnchor",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "badge",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "marker",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "explicitClick",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "markerSignificantProperties",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "['type', 'name', 'value', 'disabled']",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateActiveMouseDown",
              "privacy": "private",
              "description": "This mimics the mouse-click visual behavior for keyboard only users and screen readers.\nBrowsers do not apply the CSS psuedo-selector :active in those instances. So we need this\nfor our :active styles to show.\n\nMake sure to update a component's CSS to account for the presence of the [_active] attribute\nin all instance where :active is defined.",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateActiveMouseUp",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "setupNativeButtonBehavior",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "triggerNativeButtonBehavior",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "description": "We have to append a hidden button outside the web component in the light DOM\nThis allows us to trigger native submit events within a form element.",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "createMarker",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "markerAttached",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "hasMarkerSignificantProperty",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "props",
                  "type": {
                    "text": "PropertyValues<any>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateKeyBoardEventBehavior",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "updateButtonAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "addDefaultSubmitBehavior",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "iconSize",
              "type": {
                "text": "string"
              },
              "default": "'18'",
              "fieldName": "iconSize"
            },
            {
              "name": "iconShape",
              "type": {
                "text": "string"
              },
              "default": "'times'",
              "fieldName": "iconShape"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "fieldName": "type",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "fieldName": "name",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "fieldName": "value",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsBaseButton",
            "package": "@cds/core/internal"
          },
          "tagName": "cds-internal-close-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsCloseButtonTagName",
          "declaration": {
            "name": "CdsCloseButtonTagName",
            "module": "internal-components/close-button/close-button.element.js"
          }
        },
        {
          "kind": "js",
          "name": "appendCloseButton",
          "declaration": {
            "name": "appendCloseButton",
            "module": "internal-components/close-button/close-button.element.js"
          }
        },
        {
          "kind": "js",
          "name": "removeCloseButton",
          "declaration": {
            "name": "removeCloseButton",
            "module": "internal-components/close-button/close-button.element.js"
          }
        },
        {
          "kind": "js",
          "name": "CdsInternalCloseButton",
          "declaration": {
            "name": "CdsInternalCloseButton",
            "module": "internal-components/close-button/close-button.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal-components/close-button/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./close-button.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal-components/close-button/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "internal-components/overlay/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./overlay.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal-components/overlay/overlay.element.js",
      "declarations": [
        {
          "kind": "function",
          "name": "isNestedOverlay",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "myId",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "overlayPrefix",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "trapIds",
              "type": {
                "text": "string[]"
              }
            },
            {
              "name": "previousValue",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "overlayIsActive",
          "parameters": [
            {
              "name": "overlayId",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "focusTrapService",
              "default": "FocusTrapTrackerService"
            }
          ]
        },
        {
          "kind": "class",
          "description": "\n```typescript\nimport '@cds/core/internal-components/overlay/register.js';\n```\n\n```html\n<cds-internal-overlay>\n <section cds-layout=\"vertical align:horizontal-stretch\">\n   <div cds-layout=\"vertical pad:md gap:md\">\n     <h2 cds-text=\"display\">A Title</h2>\n     <div>\n       <p cds-text=\"body\">\n         Content inside a generic overlay.\n       </p>\n     </div>\n   </div>\n </section>\n</cds-internal-overlay>\n```",
          "name": "CdsInternalOverlay",
          "cssProperties": [
            {
              "name": "--backdrop-background"
            },
            {
              "name": "--layered-backdrop-background"
            },
            {
              "name": "--animation-duration"
            },
            {
              "description": "KNOWN ISSUE: Safari jumps through the exit animation but only when the ESC key is pressed.",
              "name": "--animation-easing"
            }
          ],
          "slots": [
            {
              "description": "Content slot for the content inside the overlay's panel",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "cdsMotion",
              "type": {
                "text": "string"
              },
              "default": "'on'",
              "attribute": "cdsMotion"
            },
            {
              "kind": "field",
              "name": "cdsMotionChange",
              "type": {
                "text": "EventEmitter<string>"
              }
            },
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "any"
              },
              "static": true,
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "overlayIdPrefix",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "'_overlay-'"
            },
            {
              "kind": "field",
              "name": "closeChange",
              "type": {
                "text": "EventEmitter<CloseChangeSources>"
              }
            },
            {
              "kind": "field",
              "name": "isLayered",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "backdrop",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "closeOverlay",
              "parameters": [
                {
                  "name": "trigger",
                  "default": "'custom'",
                  "type": {
                    "text": "CloseChangeSources"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "backdropTemplate",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "fireEventOnBackdropClick",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "fireEventOnEscape",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "focusTrapId",
              "type": {
                "text": "string"
              },
              "attribute": "focusTrapId",
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            },
            {
              "kind": "field",
              "name": "focusTrap",
              "type": {
                "text": "FocusTrap"
              },
              "default": "new FocusTrap(this)",
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            },
            {
              "kind": "field",
              "name": "topReboundElement",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            },
            {
              "kind": "field",
              "name": "bottomReboundElement",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            },
            {
              "kind": "field",
              "name": "hidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Its recommended to remove or add a focus trap element from the DOM\nsome SSR systems can have technical constraints where the item can\nonly be removed via CSS/hidden.",
              "attribute": "hidden",
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            },
            {
              "kind": "field",
              "name": "demoMode",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            },
            {
              "kind": "method",
              "name": "toggleFocusTrap",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            }
          ],
          "events": [
            {
              "description": "Notify user when close event has occurred",
              "name": "closeChange"
            }
          ],
          "attributes": [
            {
              "name": "cdsMotion",
              "type": {
                "text": "string"
              },
              "default": "'on'",
              "fieldName": "cdsMotion"
            },
            {
              "name": "hidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Its recommended to remove or add a focus trap element from the DOM\nsome SSR systems can have technical constraints where the item can\nonly be removed via CSS/hidden.",
              "fieldName": "hidden",
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            },
            {
              "name": "focusTrapId",
              "type": {
                "text": "string"
              },
              "fieldName": "focusTrapId",
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsBaseFocusTrap",
            "package": "@cds/core/internal"
          },
          "tagName": "cds-internal-overlay",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isNestedOverlay",
          "declaration": {
            "name": "isNestedOverlay",
            "module": "internal-components/overlay/overlay.element.js"
          }
        },
        {
          "kind": "js",
          "name": "overlayIsActive",
          "declaration": {
            "name": "overlayIsActive",
            "module": "internal-components/overlay/overlay.element.js"
          }
        },
        {
          "kind": "js",
          "name": "CdsInternalOverlay",
          "declaration": {
            "name": "CdsInternalOverlay",
            "module": "internal-components/overlay/overlay.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal-components/overlay/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "internal-components/panel/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./panel.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal-components/panel/panel.element.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "CdsInternalPanelTagName",
          "type": {
            "text": "string"
          },
          "default": "'cds-internal-panel'"
        },
        {
          "kind": "class",
          "description": "\n```typescript\nimport '@cds/core/internal-components/panel/register.js';\n```\n\n```html\n<cds-internal-panel>\n // content\n</cds-internal-panel>\n```",
          "name": "CdsInternalPanel",
          "cssProperties": [
            {
              "name": "--width"
            },
            {
              "name": "--height"
            },
            {
              "name": "--color"
            },
            {
              "name": "--overflow"
            },
            {
              "name": "--overflow-x"
            },
            {
              "name": "--overflow-y"
            },
            {
              "name": "--background"
            },
            {
              "name": "--border"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--box-shadow"
            }
          ],
          "slots": [
            {
              "description": "Content slot for the content inside the panel",
              "name": ""
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-internal-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsInternalPanelTagName",
          "declaration": {
            "name": "CdsInternalPanelTagName",
            "module": "internal-components/panel/panel.element.js"
          }
        },
        {
          "kind": "js",
          "name": "CdsInternalPanel",
          "declaration": {
            "name": "CdsInternalPanel",
            "module": "internal-components/panel/panel.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal-components/panel/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "internal-components/visual-checkbox/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./visual-checkbox.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal-components/visual-checkbox/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "internal-components/visual-checkbox/visual-checkbox.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CdsInternalVisualCheckbox",
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "indeterminate",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "selected",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "indeterminate"
            },
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "selected"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsInternalVisualCheckbox",
          "declaration": {
            "name": "CdsInternalVisualCheckbox",
            "module": "internal-components/visual-checkbox/visual-checkbox.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/base/button.base.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CdsBaseButton",
          "members": [
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "tabIndexAttr",
              "type": {
                "text": "number | null"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "isAnchor",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "badge",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "marker",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "explicitClick",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "markerSignificantProperties",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "['type', 'name', 'value', 'disabled']"
            },
            {
              "kind": "method",
              "name": "emulateActiveMouseDown",
              "privacy": "private",
              "description": "This mimics the mouse-click visual behavior for keyboard only users and screen readers.\nBrowsers do not apply the CSS psuedo-selector :active in those instances. So we need this\nfor our :active styles to show.\n\nMake sure to update a component's CSS to account for the presence of the [_active] attribute\nin all instance where :active is defined."
            },
            {
              "kind": "method",
              "name": "emulateActiveMouseUp",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setupNativeButtonBehavior",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "triggerNativeButtonBehavior",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "description": "We have to append a hidden button outside the web component in the light DOM\nThis allows us to trigger native submit events within a form element."
            },
            {
              "kind": "method",
              "name": "createMarker",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "markerAttached",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hasMarkerSignificantProperty",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "props",
                  "type": {
                    "text": "PropertyValues<any>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emulateKeyBoardEventBehavior",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateButtonAttributes",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "addDefaultSubmitBehavior",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly"
            },
            {
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "fieldName": "type"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "fieldName": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "fieldName": "value"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsBaseButton",
          "declaration": {
            "name": "CdsBaseButton",
            "module": "internal/base/button.base.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/base/css-gap.base.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "internal/base/focus-trap.base.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CdsBaseFocusTrap",
          "members": [
            {
              "kind": "field",
              "name": "focusTrap",
              "type": {
                "text": "FocusTrap"
              },
              "default": "new FocusTrap(this)"
            },
            {
              "kind": "field",
              "name": "topReboundElement",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "bottomReboundElement",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "hidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Its recommended to remove or add a focus trap element from the DOM\nsome SSR systems can have technical constraints where the item can\nonly be removed via CSS/hidden.",
              "attribute": "hidden"
            },
            {
              "kind": "field",
              "name": "demoMode",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "focusTrapId",
              "type": {
                "text": "string"
              },
              "attribute": "focusTrapId"
            },
            {
              "kind": "method",
              "name": "toggleFocusTrap",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "hidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Its recommended to remove or add a focus trap element from the DOM\nsome SSR systems can have technical constraints where the item can\nonly be removed via CSS/hidden.",
              "fieldName": "hidden"
            },
            {
              "name": "focusTrapId",
              "type": {
                "text": "string"
              },
              "fieldName": "focusTrapId"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsBaseFocusTrap",
          "declaration": {
            "name": "CdsBaseFocusTrap",
            "module": "internal/base/focus-trap.base.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/decorators/animate.js",
      "declarations": [
        {
          "kind": "function",
          "name": "animate",
          "parameters": [
            {
              "name": "config",
              "type": {
                "text": "PropertyDrivenAnimation"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "animate",
          "declaration": {
            "name": "animate",
            "module": "internal/decorators/animate.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/decorators/element.js",
      "declarations": [
        {
          "kind": "function",
          "name": "customElement",
          "parameters": [
            {
              "name": "tagName",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "customElement",
          "declaration": {
            "name": "customElement",
            "module": "internal/decorators/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/decorators/event.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "EventEmitter",
          "members": [
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "EventOptions"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "event"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EventEmitter",
          "declaration": {
            "name": "EventEmitter",
            "module": "internal/decorators/event.js"
          }
        },
        {
          "kind": "js",
          "name": "event",
          "declaration": {
            "name": "event",
            "module": "internal/decorators/event.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/decorators/global-style.js",
      "declarations": [
        {
          "kind": "function",
          "name": "globalStyle",
          "description": "Appends a global `<style>` tag to the light DOM of a given custom element.\nThis is useful for when styles need to be applied that are not supported\nwithing a `::slotted()` selector such as ::-vendor style selectors."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "globalStyle",
          "declaration": {
            "name": "globalStyle",
            "module": "internal/decorators/global-style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/decorators/i18n.js",
      "declarations": [
        {
          "kind": "function",
          "name": "i18n",
          "description": "A property decorator which accesses a set of string values for use\ninside the element's template. The values can be overridden at runtime\nby changing the property value that's reflected through the attribute value."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "i18n",
          "declaration": {
            "name": "i18n",
            "module": "internal/decorators/i18n.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/decorators/id.js",
      "declarations": [
        {
          "kind": "function",
          "name": "id"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "id",
          "declaration": {
            "name": "id",
            "module": "internal/decorators/id.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/decorators/property.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getDefaultOptions",
          "return": {
            "type": {
              "text": "PropertyDeclaration"
            }
          },
          "parameters": [
            {
              "name": "propertyKey",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "PropertyConfig"
              }
            }
          ],
          "description": "https://developers.google.com/web/fundamentals/web-components/best-practices"
        },
        {
          "kind": "function",
          "name": "requirePropertyCheck",
          "parameters": [
            {
              "name": "protoOrDescriptor",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "PropertyConfig"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "property",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "PropertyConfig"
              }
            }
          ],
          "description": "lit @property decorator with custom defaults specific to Clarity.\nhttps://lit.dev/docs/components/properties/\n\nA property decorator which creates a LitElement property which reflects a\ncorresponding attribute value. A PropertyDeclaration may optionally be\nsupplied to configure property features."
        },
        {
          "kind": "function",
          "name": "state",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "PropertyConfig"
              }
            }
          ],
          "description": "lit @state decorator with custom defaults specific to Clarity.\n\nThis is used for communication between internal component properties\nthat are not exposed as part of the public component API.\n\nA internalProperty decorator which creates a LitElement property which will\ntrigger a re-render when set but not allow the value to be updated through\npublic attributes. https://lit.dev/docs/api/decorators/#state"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getDefaultOptions",
          "declaration": {
            "name": "getDefaultOptions",
            "module": "internal/decorators/property.js"
          }
        },
        {
          "kind": "js",
          "name": "requirePropertyCheck",
          "declaration": {
            "name": "requirePropertyCheck",
            "module": "internal/decorators/property.js"
          }
        },
        {
          "kind": "js",
          "name": "property",
          "declaration": {
            "name": "property",
            "module": "internal/decorators/property.js"
          }
        },
        {
          "kind": "js",
          "name": "state",
          "declaration": {
            "name": "state",
            "module": "internal/decorators/property.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/decorators/query-slot.js",
      "declarations": [
        {
          "kind": "function",
          "name": "querySlot",
          "parameters": [
            {
              "name": "selector",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "config",
              "optional": true,
              "type": {
                "text": "QuerySlotConfig"
              }
            }
          ],
          "description": "A property decorator that converts a class property into a getter that\nexecutes a querySelector on the element's light DOM Slot."
        },
        {
          "kind": "function",
          "name": "querySlotAll",
          "parameters": [
            {
              "name": "selector",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "config",
              "optional": true,
              "type": {
                "text": "QuerySlotConfig"
              }
            }
          ],
          "description": "A property decorator that converts a class property into a getter\nthat executes a querySelectorAll on the element's light DOM Slot."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "querySlot",
          "declaration": {
            "name": "querySlot",
            "module": "internal/decorators/query-slot.js"
          }
        },
        {
          "kind": "js",
          "name": "querySlotAll",
          "declaration": {
            "name": "querySlotAll",
            "module": "internal/decorators/query-slot.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/directives/spread-props.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SpreadProps",
          "members": [],
          "superclass": {
            "name": "Directive",
            "package": "lit/directive.js"
          }
        },
        {
          "kind": "variable",
          "name": "spreadProps",
          "type": {
            "text": "any"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SpreadProps",
          "declaration": {
            "name": "SpreadProps",
            "module": "internal/directives/spread-props.js"
          }
        },
        {
          "kind": "js",
          "name": "spreadProps",
          "declaration": {
            "name": "spreadProps",
            "module": "internal/directives/spread-props.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/enums/aria-roles.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "internal/i18n/utils.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getElementLanguageDirection",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getElementLanguageDirection",
          "declaration": {
            "name": "getElementLanguageDirection",
            "module": "internal/i18n/utils.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./base/button.base.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./base/focus-trap.base.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/color.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/css.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/registration.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./decorators/animate.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./decorators/query-slot.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./decorators/property.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./decorators/event.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./directives/spread-props.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./decorators/id.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./decorators/i18n.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./decorators/global-style.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./services/focus-trap-tracker.service.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./services/global.service.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./services/i18n.service.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./services/log.service.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/async.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/a11y.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/array.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./services/keycodes.service.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/conditional.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/exists.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/focus-trap.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/framework.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./i18n/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/keycodes.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/lit.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/metadata.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/responsive.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/size.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/supports.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/environment.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/events.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/event-subject.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./interfaces/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./motion/interfaces.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./motion/motion.service.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationModalEnterConfig",
          "declaration": {
            "name": "AnimationModalEnterConfig",
            "module": "./motion/animations/cds-modal-enter.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationModalEnterName",
          "declaration": {
            "name": "AnimationModalEnterName",
            "module": "./motion/animations/cds-modal-enter.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationAccordionPanelOpenConfig",
          "declaration": {
            "name": "AnimationAccordionPanelOpenConfig",
            "module": "./motion/animations/cds-accordion-panel-open.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationAccordionPanelOpenName",
          "declaration": {
            "name": "AnimationAccordionPanelOpenName",
            "module": "./motion/animations/cds-accordion-panel-open.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationHingeConfig",
          "declaration": {
            "name": "AnimationHingeConfig",
            "module": "./motion/animations/cds-overlay-hinge-example.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationHingeName",
          "declaration": {
            "name": "AnimationHingeName",
            "module": "./motion/animations/cds-overlay-hinge-example.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationShakeConfig",
          "declaration": {
            "name": "AnimationShakeConfig",
            "module": "./motion/animations/cds-component-shake.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationShakeName",
          "declaration": {
            "name": "AnimationShakeName",
            "module": "./motion/animations/cds-component-shake.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationNavigationGroupOpenConfig",
          "declaration": {
            "name": "AnimationNavigationGroupOpenConfig",
            "module": "./motion/animations/cds-navigation-group-open.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationNavigationGroupOpenName",
          "declaration": {
            "name": "AnimationNavigationGroupOpenName",
            "module": "./motion/animations/cds-navigation-group-open.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationNavigationOpenConfig",
          "declaration": {
            "name": "AnimationNavigationOpenConfig",
            "module": "./motion/animations/cds-navigation-open.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationNavigationOpenName",
          "declaration": {
            "name": "AnimationNavigationOpenName",
            "module": "./motion/animations/cds-navigation-open.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationTreeItemExpandConfig",
          "declaration": {
            "name": "AnimationTreeItemExpandConfig",
            "module": "./motion/animations/cds-tree-item-expand.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationTreeItemExpandName",
          "declaration": {
            "name": "AnimationTreeItemExpandName",
            "module": "./motion/animations/cds-tree-item-expand.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/interfaces/index.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "internal/motion/animations/cds-accordion-panel-open.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "AnimationAccordionPanelOpenName",
          "type": {
            "text": "string"
          },
          "default": "'cds-accordion-panel-open'"
        },
        {
          "kind": "variable",
          "name": "AnimationAccordionPanelOpenConfig",
          "type": {
            "text": "TargetedAnimation[]"
          },
          "default": "[\n  {\n    target: '.accordion-content',\n    animation: [\n      { opacity: 0, height: '0' },\n      { opacity: 1, height: 'from:cds-accordion-content' },\n    ],\n    options: {\n      duration: '--animation-duration',\n      easing: '--animation-easing',\n      fill: 'forwards',\n    },\n  },\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AnimationAccordionPanelOpenName",
          "declaration": {
            "name": "AnimationAccordionPanelOpenName",
            "module": "internal/motion/animations/cds-accordion-panel-open.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationAccordionPanelOpenConfig",
          "declaration": {
            "name": "AnimationAccordionPanelOpenConfig",
            "module": "internal/motion/animations/cds-accordion-panel-open.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/motion/animations/cds-component-shake.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "AnimationShakeName",
          "type": {
            "text": "string"
          },
          "default": "'cds-component-shake'"
        },
        {
          "kind": "variable",
          "name": "AnimationShakeConfig",
          "type": {
            "text": "TargetedAnimation[]"
          },
          "default": "[\n  {\n    target: '.private-host',\n    animation: shakeKeyframes,\n    options: {\n      duration: 1200,\n      easing: 'ease-in-out',\n      endDelay: 50,\n    },\n  },\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AnimationShakeName",
          "declaration": {
            "name": "AnimationShakeName",
            "module": "internal/motion/animations/cds-component-shake.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationShakeConfig",
          "declaration": {
            "name": "AnimationShakeConfig",
            "module": "internal/motion/animations/cds-component-shake.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/motion/animations/cds-modal-enter.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "AnimationModalEnterName",
          "type": {
            "text": "string"
          },
          "default": "'cds-modal-enter'"
        },
        {
          "kind": "variable",
          "name": "AnimationModalEnterConfig",
          "type": {
            "text": "TargetedAnimation[]"
          },
          "default": "[\n  {\n    target: '.overlay-backdrop',\n    onlyIf: 'isLayered:false',\n    animation: fadeInKeyframes,\n    options: {\n      duration: '--animation-duration',\n      easing: '--animation-easing',\n      fill: 'forwards',\n    },\n  },\n  {\n    target: '.private-host',\n    animation: fadeAndSlideInKeyframes,\n    options: {\n      duration: '--animation-duration',\n      easing: '--animation-easing',\n      fill: 'forwards',\n      endDelay: 50,\n    },\n  },\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AnimationModalEnterName",
          "declaration": {
            "name": "AnimationModalEnterName",
            "module": "internal/motion/animations/cds-modal-enter.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationModalEnterConfig",
          "declaration": {
            "name": "AnimationModalEnterConfig",
            "module": "internal/motion/animations/cds-modal-enter.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/motion/animations/cds-navigation-group-open.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "AnimationNavigationGroupOpenName",
          "type": {
            "text": "string"
          },
          "default": "'cds-navigation-group-open'"
        },
        {
          "kind": "variable",
          "name": "AnimationNavigationGroupOpenConfig",
          "type": {
            "text": "TargetedAnimation[]"
          },
          "default": "[\n  {\n    target: '.navigation-group-items',\n    animation: [\n      { opacity: 0, height: '0' },\n      { opacity: 1, height: 'from:cds-navigation-group' },\n    ],\n    options: {\n      duration: '--animation-duration',\n      easing: '--animation-easing',\n      fill: 'forwards',\n    },\n  },\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AnimationNavigationGroupOpenName",
          "declaration": {
            "name": "AnimationNavigationGroupOpenName",
            "module": "internal/motion/animations/cds-navigation-group-open.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationNavigationGroupOpenConfig",
          "declaration": {
            "name": "AnimationNavigationGroupOpenConfig",
            "module": "internal/motion/animations/cds-navigation-group-open.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/motion/animations/cds-navigation-open.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "AnimationNavigationOpenName",
          "type": {
            "text": "string"
          },
          "default": "'cds-navigation-open'"
        },
        {
          "kind": "variable",
          "name": "AnimationNavigationOpenConfig",
          "type": {
            "text": "TargetedAnimation[]"
          },
          "default": "[\n  {\n    target: 'cds-navigation',\n    animation: [{ width: 'var(--collapsed-width)' }, { width: 'var(--expanded-width)' }],\n    options: {\n      duration: '--animation-duration',\n      easing: '--animation-easing',\n      fill: 'forwards',\n    },\n  },\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AnimationNavigationOpenName",
          "declaration": {
            "name": "AnimationNavigationOpenName",
            "module": "internal/motion/animations/cds-navigation-open.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationNavigationOpenConfig",
          "declaration": {
            "name": "AnimationNavigationOpenConfig",
            "module": "internal/motion/animations/cds-navigation-open.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/motion/animations/cds-overlay-hinge-example.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "AnimationHingeName",
          "type": {
            "text": "string"
          },
          "default": "'cds-modal-hinge-exit'"
        },
        {
          "kind": "variable",
          "name": "AnimationHingeConfig",
          "type": {
            "text": "TargetedAnimation[]"
          },
          "default": "[\n  {\n    target: '.overlay-backdrop',\n    onlyIf: 'isLayered:false',\n    animation: [{ opacity: 1, offset: 0.8 }, { opacity: 0 }],\n    options: {\n      duration: 1200,\n      easing: 'ease-in-out',\n      fill: 'forwards',\n    },\n  },\n  {\n    target: '.private-host',\n    animation: hingeKeyframes,\n    options: {\n      duration: 1200,\n      easing: 'ease-in-out',\n      fill: 'forwards',\n      endDelay: 50,\n    },\n  },\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AnimationHingeName",
          "declaration": {
            "name": "AnimationHingeName",
            "module": "internal/motion/animations/cds-overlay-hinge-example.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationHingeConfig",
          "declaration": {
            "name": "AnimationHingeConfig",
            "module": "internal/motion/animations/cds-overlay-hinge-example.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/motion/animations/cds-tree-item-expand.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "AnimationTreeItemExpandName",
          "type": {
            "text": "string"
          },
          "default": "'cds-tree-item-expand'"
        },
        {
          "kind": "variable",
          "name": "AnimationTreeItemExpandConfig",
          "type": {
            "text": "TargetedAnimation[]"
          },
          "default": "[\n  {\n    target: '.item-children',\n    animation: [\n      { opacity: 0, height: '0' },\n      { opacity: 1, height: 'from:item-children' },\n    ],\n    options: {\n      duration: '--animation-duration',\n      easing: '--animation-easing',\n      fill: 'forwards',\n    },\n  },\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AnimationTreeItemExpandName",
          "declaration": {
            "name": "AnimationTreeItemExpandName",
            "module": "internal/motion/animations/cds-tree-item-expand.js"
          }
        },
        {
          "kind": "js",
          "name": "AnimationTreeItemExpandConfig",
          "declaration": {
            "name": "AnimationTreeItemExpandConfig",
            "module": "internal/motion/animations/cds-tree-item-expand.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/motion/animations/keyframes/fade-in-and-slide-down.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeAndSlideInKeyframes",
          "type": {
            "text": "array"
          },
          "default": "[\n  { opacity: 0, transform: 'translateY(-15rem)' },\n  { opacity: 1, transform: 'translateY(0)' },\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeAndSlideInKeyframes",
          "declaration": {
            "name": "fadeAndSlideInKeyframes",
            "module": "internal/motion/animations/keyframes/fade-in-and-slide-down.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/motion/animations/keyframes/fade-in.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "fadeInKeyframes",
          "type": {
            "text": "array"
          },
          "default": "[{ opacity: 0 }, { opacity: 1 }]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fadeInKeyframes",
          "declaration": {
            "name": "fadeInKeyframes",
            "module": "internal/motion/animations/keyframes/fade-in.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/motion/animations/keyframes/hinge.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "hingeKeyframes",
          "type": {
            "text": "array"
          },
          "default": "[\n  { transformOrigin: 'top left', transform: 'rotate3d(0, 0, 1, 80deg)', offset: 0.2 },\n  { transformOrigin: 'top left', transform: 'rotate3d(0, 0, 1, 60deg)', offset: 0.4 },\n  { transformOrigin: 'top left', transform: 'rotate3d(0, 0, 1, 80deg)', offset: 0.6 },\n  { transformOrigin: 'top left', transform: 'rotate3d(0, 0, 1, 60deg)', opacity: 1, offset: 0.8 },\n  { transformOrigin: 'top left', opacity: 0, transform: 'translate3d(0, 700px, 0)' },\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hingeKeyframes",
          "declaration": {
            "name": "hingeKeyframes",
            "module": "internal/motion/animations/keyframes/hinge.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/motion/animations/keyframes/shake.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "shakeKeyframes",
          "type": {
            "text": "array"
          },
          "default": "[\n  { transform: 'translate3d(0, 0, 0)' },\n  { transform: 'translate3d(-10px, 0, 0)', offset: 0.1 },\n  { transform: 'translate3d(10px, 0, 0)', offset: 0.2 },\n  { transform: 'translate3d(-10px, 0, 0)', offset: 0.3 },\n  { transform: 'translate3d(10px, 0, 0)', offset: 0.4 },\n  { transform: 'translate3d(-10px, 0, 0)', offset: 0.5 },\n  { transform: 'translate3d(10px, 0, 0)', offset: 0.6 },\n  { transform: 'translate3d(-10px, 0, 0)', offset: 0.7 },\n  { transform: 'translate3d(10px, 0, 0)', offset: 0.8 },\n  { transform: 'translate3d(-10px, 0, 0)', offset: 0.9 },\n  { transform: 'translate3d(0, 0, 0)' },\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "shakeKeyframes",
          "declaration": {
            "name": "shakeKeyframes",
            "module": "internal/motion/animations/keyframes/shake.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/motion/interfaces.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "CLARITY_MOTION_ENTER_LEAVE_PROPERTY",
          "type": {
            "text": "string"
          },
          "default": "'hidden'"
        },
        {
          "kind": "variable",
          "name": "CLARITY_MOTION_REVERSE_ANIMATION_LABEL",
          "type": {
            "text": "string"
          },
          "default": "'reverse'"
        },
        {
          "kind": "variable",
          "name": "CLARITY_MOTION_REVERSE_ANIMATION_SUFFIX"
        },
        {
          "kind": "variable",
          "name": "CLARITY_MOTION_FALLBACK_DURATION_IN_MS",
          "type": {
            "text": "number"
          },
          "default": "300"
        },
        {
          "kind": "variable",
          "name": "CLARITY_MOTION_FALLBACK_EASING",
          "type": {
            "text": "string"
          },
          "default": "'linear'"
        },
        {
          "kind": "variable",
          "name": "PRIVATE_ANIMATION_STATUS_ATTR_NAME",
          "type": {
            "text": "string"
          },
          "default": "'_cds-animation-status'"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CLARITY_MOTION_ENTER_LEAVE_PROPERTY",
          "declaration": {
            "name": "CLARITY_MOTION_ENTER_LEAVE_PROPERTY",
            "module": "internal/motion/interfaces.js"
          }
        },
        {
          "kind": "js",
          "name": "CLARITY_MOTION_REVERSE_ANIMATION_LABEL",
          "declaration": {
            "name": "CLARITY_MOTION_REVERSE_ANIMATION_LABEL",
            "module": "internal/motion/interfaces.js"
          }
        },
        {
          "kind": "js",
          "name": "CLARITY_MOTION_REVERSE_ANIMATION_SUFFIX",
          "declaration": {
            "name": "CLARITY_MOTION_REVERSE_ANIMATION_SUFFIX",
            "module": "internal/motion/interfaces.js"
          }
        },
        {
          "kind": "js",
          "name": "CLARITY_MOTION_FALLBACK_DURATION_IN_MS",
          "declaration": {
            "name": "CLARITY_MOTION_FALLBACK_DURATION_IN_MS",
            "module": "internal/motion/interfaces.js"
          }
        },
        {
          "kind": "js",
          "name": "CLARITY_MOTION_FALLBACK_EASING",
          "declaration": {
            "name": "CLARITY_MOTION_FALLBACK_EASING",
            "module": "internal/motion/interfaces.js"
          }
        },
        {
          "kind": "js",
          "name": "PRIVATE_ANIMATION_STATUS_ATTR_NAME",
          "declaration": {
            "name": "PRIVATE_ANIMATION_STATUS_ATTR_NAME",
            "module": "internal/motion/interfaces.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/motion/motion.service.js",
      "declarations": [
        {
          "kind": "class",
          "description": "\nThe ClarityMotion service is a static class that gives users the ability to retrieve\nand override animation configurations based on the Web Animations API that are targeted\nat a CSS selector defined in the configuration.",
          "name": "ClarityMotion",
          "members": [
            {
              "kind": "field",
              "name": "registry",
              "type": {
                "text": "Readonly<MotionRegistry>"
              },
              "static": true,
              "description": "Returns a readonly reference of the registry of animations.",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "has",
              "static": true,
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get",
              "static": true,
              "return": {
                "type": {
                  "text": "TargetedAnimation[]"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "add",
              "static": true,
              "parameters": [
                {
                  "name": "animationName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "animationConfig",
                  "type": {
                    "text": "TargetedAnimation[]"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClarityMotion",
          "declaration": {
            "name": "ClarityMotion",
            "module": "internal/motion/motion.service.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/motion/utils.js",
      "declarations": [
        {
          "kind": "function",
          "name": "setAnimationStartStatus",
          "parameters": [
            {
              "name": "animatedPropertyValueAsString",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "hostEl",
              "type": {
                "text": "AnimatableElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "resolveAnimationEndStatus",
          "parameters": [
            {
              "name": "animatedPropertyValueAsString",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "hostEl",
              "type": {
                "text": "AnimatableElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "setAnimationConfigOptions",
          "return": {
            "type": {
              "text": "TargetedAnimation[]"
            }
          },
          "parameters": [
            {
              "name": "motionName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "motionForMyValue",
              "type": {
                "text": "TargetedAnimation[]"
              }
            },
            {
              "name": "hostEl",
              "type": {
                "text": "AnimatableElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAnimationPromiseInstructions",
          "return": {
            "type": {
              "text": "Promise<unknown>[]"
            }
          },
          "parameters": [
            {
              "name": "animatedPropertyValueAsString",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "motionConfigs",
              "type": {
                "text": "TargetedAnimation[]"
              }
            },
            {
              "name": "hostEl",
              "type": {
                "text": "AnimatableElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAnimationTarget",
          "return": {
            "type": {
              "text": "Element"
            }
          },
          "parameters": [
            {
              "name": "hostEl",
              "type": {
                "text": "Element"
              }
            },
            {
              "name": "targetSelector",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAnimationKeyframesOrPropertyIndexedFrames",
          "return": {
            "type": {
              "text": "AnimationKeyframes | PropertyIndexedKeyframes"
            }
          },
          "parameters": [
            {
              "name": "animationConfig",
              "type": {
                "text": "AnimationKeyframes | PropertyIndexedKeyframes"
              }
            },
            {
              "name": "hostEl",
              "type": {
                "text": "Element"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "animationIsReversed",
          "parameters": [
            {
              "name": "nameOfAnimation",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "reverseAnimationConfig",
          "return": {
            "type": {
              "text": "TargetedAnimation[]"
            }
          },
          "parameters": [
            {
              "name": "config",
              "type": {
                "text": "TargetedAnimation[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "reverseAnimation",
          "parameters": [
            {
              "name": "animationName",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getInlineOverride",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "cdsMotionValue",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "propName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "propValue",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "extractAnimationNameIfReversed",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAnimationFromOverrideOrDecorator",
          "parameters": [
            {
              "name": "decoratorValue",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "overrideValue",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAnimationConfigForPropertyValue",
          "return": {
            "type": {
              "text": "[string, TargetedAnimation[]]"
            }
          },
          "parameters": [
            {
              "name": "nameOfAnimationFromObject",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "cdsMotionOverride",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "setAnimationDuration",
          "return": {
            "type": {
              "text": "TargetedAnimation[]"
            }
          },
          "parameters": [
            {
              "name": "config",
              "type": {
                "text": "TargetedAnimation[]"
              }
            },
            {
              "name": "hostEl",
              "type": {
                "text": "AnimatableElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "setAnimationEasing",
          "return": {
            "type": {
              "text": "TargetedAnimation[]"
            }
          },
          "parameters": [
            {
              "name": "config",
              "type": {
                "text": "TargetedAnimation[]"
              }
            },
            {
              "name": "hostEl",
              "type": {
                "text": "AnimatableElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "zeroOutAnimationConfig",
          "return": {
            "type": {
              "text": "TargetedAnimation[]"
            }
          },
          "parameters": [
            {
              "name": "config",
              "type": {
                "text": "TargetedAnimation[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "setAnimationProperty",
          "parameters": [
            {
              "name": "propertyName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "hostEl",
              "type": {
                "text": "AnimatableElement"
              }
            },
            {
              "name": "config",
              "type": {
                "text": "TargetedAnimation[]"
              }
            },
            {
              "name": "staticFallback",
              "type": {
                "text": "string | number"
              }
            },
            {
              "name": "valueConverter",
              "optional": true,
              "type": {
                "text": "(arg: string) => string | number"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "sizeDimensionKeyframes",
          "return": {
            "type": {
              "text": "AnimationKeyframes"
            }
          },
          "parameters": [
            {
              "name": "animationKeyframes",
              "type": {
                "text": "AnimationKeyframes"
              }
            },
            {
              "name": "hostEl",
              "type": {
                "text": "Element"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "filterAnimationsByUpdatedProperties",
          "return": {
            "type": {
              "text": "PropertyDrivenAnimation | null"
            }
          },
          "parameters": [
            {
              "name": "animations",
              "type": {
                "text": "PropertyDrivenAnimation"
              }
            },
            {
              "name": "updatingProps",
              "type": {
                "text": "PropertyValues<any>"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "flattenAndSortAnimations",
          "return": {
            "type": {
              "text": "TargetedAnimationAsPropertyTuple[]"
            }
          },
          "parameters": [
            {
              "name": "hiddenAndNotAnimationTuple",
              "type": {
                "text": "TupleOfHiddenAndOtherAnimations"
              }
            },
            {
              "name": "isHiding",
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getHidingAndNonHidingPropertyAnimations",
          "return": {
            "type": {
              "text": "[TargetedAnimationAsPropertyTuple[], TargetedAnimationAsPropertyTuple[]]"
            }
          },
          "parameters": [
            {
              "name": "animations",
              "type": {
                "text": "PropertyDrivenAnimation"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getPropertyAnimations",
          "return": {
            "type": {
              "text": "TargetedAnimationAsPropertyTuple[]"
            }
          },
          "parameters": [
            {
              "name": "animations",
              "type": {
                "text": "PropertyDrivenAnimation"
              }
            },
            {
              "name": "updatingProps",
              "type": {
                "text": "PropertyValues<any>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "setAnimationStartStatus",
          "declaration": {
            "name": "setAnimationStartStatus",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "resolveAnimationEndStatus",
          "declaration": {
            "name": "resolveAnimationEndStatus",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "setAnimationConfigOptions",
          "declaration": {
            "name": "setAnimationConfigOptions",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "getAnimationPromiseInstructions",
          "declaration": {
            "name": "getAnimationPromiseInstructions",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "getAnimationTarget",
          "declaration": {
            "name": "getAnimationTarget",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "getAnimationKeyframesOrPropertyIndexedFrames",
          "declaration": {
            "name": "getAnimationKeyframesOrPropertyIndexedFrames",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "animationIsReversed",
          "declaration": {
            "name": "animationIsReversed",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "reverseAnimationConfig",
          "declaration": {
            "name": "reverseAnimationConfig",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "reverseAnimation",
          "declaration": {
            "name": "reverseAnimation",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "getInlineOverride",
          "declaration": {
            "name": "getInlineOverride",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "extractAnimationNameIfReversed",
          "declaration": {
            "name": "extractAnimationNameIfReversed",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "getAnimationFromOverrideOrDecorator",
          "declaration": {
            "name": "getAnimationFromOverrideOrDecorator",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "getAnimationConfigForPropertyValue",
          "declaration": {
            "name": "getAnimationConfigForPropertyValue",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "setAnimationDuration",
          "declaration": {
            "name": "setAnimationDuration",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "setAnimationEasing",
          "declaration": {
            "name": "setAnimationEasing",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "zeroOutAnimationConfig",
          "declaration": {
            "name": "zeroOutAnimationConfig",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "setAnimationProperty",
          "declaration": {
            "name": "setAnimationProperty",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "sizeDimensionKeyframes",
          "declaration": {
            "name": "sizeDimensionKeyframes",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "filterAnimationsByUpdatedProperties",
          "declaration": {
            "name": "filterAnimationsByUpdatedProperties",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "flattenAndSortAnimations",
          "declaration": {
            "name": "flattenAndSortAnimations",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "getHidingAndNonHidingPropertyAnimations",
          "declaration": {
            "name": "getHidingAndNonHidingPropertyAnimations",
            "module": "internal/motion/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "getPropertyAnimations",
          "declaration": {
            "name": "getPropertyAnimations",
            "module": "internal/motion/utils.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/services/focus-trap-tracker.service.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "CDS_FOCUS_TRAP_DOCUMENT_ATTR",
          "type": {
            "text": "string"
          },
          "default": "'cds-focus-trap'"
        },
        {
          "kind": "class",
          "description": "FocusTrapTrackerService is a static class that keeps track of the active element with focus trap,\nin case there are multiple in a given page.",
          "name": "FocusTrapTrackerService",
          "members": [
            {
              "kind": "method",
              "name": "getTrapElements",
              "static": true,
              "return": {
                "type": {
                  "text": "{ focusTrapId: string }[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "setTrapElements",
              "static": true,
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "elements",
                  "type": {
                    "text": "{ focusTrapId: string }[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setCurrent",
              "static": true,
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "{ focusTrapId: string }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "activatePreviousCurrent",
              "static": true,
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "getCurrent",
              "static": true,
              "return": {
                "type": {
                  "text": "{ focusTrapId: string } | null"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CDS_FOCUS_TRAP_DOCUMENT_ATTR",
          "declaration": {
            "name": "CDS_FOCUS_TRAP_DOCUMENT_ATTR",
            "module": "internal/services/focus-trap-tracker.service.js"
          }
        },
        {
          "kind": "js",
          "name": "FocusTrapTrackerService",
          "declaration": {
            "name": "FocusTrapTrackerService",
            "module": "internal/services/focus-trap-tracker.service.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/services/global.service.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlobalStateService",
          "members": [
            {
              "kind": "field",
              "name": "stateUpdates",
              "static": true
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "CDSState"
              },
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "getValue",
              "static": true,
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "keyof CDSState"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setValue",
              "static": true,
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "keyof CDSState"
                  }
                },
                {
                  "name": "val",
                  "type": {
                    "text": "CDSState[keyof CDSState]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "log",
              "static": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlobalStateService",
          "declaration": {
            "name": "GlobalStateService",
            "module": "internal/services/global.service.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/services/i18n.service.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStringsDefault",
          "type": {
            "text": "object"
          },
          "default": "{\n  alert: {\n    closeButtonAriaLabel: 'Close',\n    loading: 'Loading',\n    info: 'Info',\n    success: 'Success',\n    warning: 'Warning',\n    danger: 'Error',\n  },\n  dropdown: {\n    open: 'Open',\n  },\n  file: {\n    browse: 'browse',\n    files: 'files',\n    removeFile: 'remove file',\n  },\n  modal: {\n    closeButtonAriaLabel: 'Close modal',\n    contentStart: 'Beginning of Modal Content',\n    contentBox: 'Scrollable Modal Body',\n    contentEnd: 'End of Modal Content',\n  },\n  navigation: {\n    navigationElement: 'navigation',\n    navigationLabel: 'navigation menu',\n    navigationAbridgedText: 'View abridged menu',\n    navigationUnabridgedText: 'View unabridged menu',\n  },\n  password: {\n    showButtonAriaLabel: 'Show password',\n    hideButtonAriaLabel: 'Hide password',\n  },\n  progress: {\n    loading: 'Loading',\n    looping: 'Loading',\n  },\n  treeview: {\n    loading: 'Loading',\n  },\n}"
        },
        {
          "kind": "class",
          "description": "I18nService is a static class that gives users the ability to use and override\nstrings within the components for internationalization / globalization. One\ncan override default values globally for their application or override per\ncomponent instance as needed.\n\nUse the localize method to override values globally. For per component instance,\nuse the i18n decorator.",
          "name": "I18nService",
          "members": [
            {
              "kind": "field",
              "name": "keys",
              "type": {
                "text": "Readonly<I18nStrings>"
              },
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "localize",
              "static": true,
              "parameters": [
                {
                  "name": "overrides",
                  "type": {
                    "text": "PartialRecursive<I18nStrings>"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStringsDefault",
          "declaration": {
            "name": "componentStringsDefault",
            "module": "internal/services/i18n.service.js"
          }
        },
        {
          "kind": "js",
          "name": "I18nService",
          "declaration": {
            "name": "I18nService",
            "module": "internal/services/i18n.service.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/services/keycodes.service.js",
      "declarations": [
        {
          "kind": "class",
          "description": "KeyCodes is a static class that gives users the ability to lookup and even store\nkeycodes for their applications.",
          "name": "KeyCodeService",
          "members": [
            {
              "kind": "field",
              "name": "keycodes",
              "type": {
                "text": "KeyCodeValues"
              },
              "static": true,
              "description": "keycodes() returns a clone of the key codes dictionary/hashmap, not the actual registry.\nPerforming actions on the return value of the keycodes getter will not be reflected in the\nactual keycodes dictionary!",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "add",
              "static": true,
              "parameters": [
                {
                  "name": "keycode",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "code",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "has",
              "static": true,
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "keycode",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getCode",
              "static": true,
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "keycode",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "keyCodeRegistry",
                  "default": "this.keycodes"
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "getKeycodeFromRegistry",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "codeToLookup",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "registry",
              "type": {
                "text": "KeyCodeValues"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyCodeService",
          "declaration": {
            "name": "KeyCodeService",
            "module": "internal/services/keycodes.service.js"
          }
        },
        {
          "kind": "js",
          "name": "getKeycodeFromRegistry",
          "declaration": {
            "name": "getKeycodeFromRegistry",
            "module": "internal/services/keycodes.service.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/services/log.service.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LogService",
          "members": [
            {
              "kind": "method",
              "name": "log",
              "static": true,
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "warn",
              "static": true,
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "error",
              "static": true,
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "notProductionEnvironment"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LogService",
          "declaration": {
            "name": "LogService",
            "module": "internal/services/log.service.js"
          }
        },
        {
          "kind": "js",
          "name": "notProductionEnvironment",
          "declaration": {
            "name": "notProductionEnvironment",
            "module": "internal/services/log.service.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/__.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "internal/utils/__.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/a11y.js",
      "declarations": [
        {
          "kind": "function",
          "name": "describeElementByElements",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "messages",
              "type": {
                "text": "HTMLElement[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "hasAriaLabelTypeAttr",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "describeElementByElements",
          "declaration": {
            "name": "describeElementByElements",
            "module": "internal/utils/a11y.js"
          }
        },
        {
          "kind": "js",
          "name": "hasAriaLabelTypeAttr",
          "declaration": {
            "name": "hasAriaLabelTypeAttr",
            "module": "internal/utils/a11y.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/array.js",
      "declarations": [
        {
          "kind": "function",
          "name": "arrayToObject",
          "parameters": [
            {
              "name": "arr",
              "type": {
                "text": "any[]"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "arrayTail",
          "parameters": [
            {
              "name": "arr",
              "type": {
                "text": "any[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "arrayHead",
          "parameters": [
            {
              "name": "arr",
              "type": {
                "text": "any[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "previousInArray",
          "parameters": [
            {
              "name": "current",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "arr",
              "type": {
                "text": "any[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "nextInArray",
          "parameters": [
            {
              "name": "current",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "arr",
              "type": {
                "text": "any[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "arrayToObject",
          "declaration": {
            "name": "arrayToObject",
            "module": "internal/utils/array.js"
          }
        },
        {
          "kind": "js",
          "name": "arrayTail",
          "declaration": {
            "name": "arrayTail",
            "module": "internal/utils/array.js"
          }
        },
        {
          "kind": "js",
          "name": "arrayHead",
          "declaration": {
            "name": "arrayHead",
            "module": "internal/utils/array.js"
          }
        },
        {
          "kind": "js",
          "name": "previousInArray",
          "declaration": {
            "name": "previousInArray",
            "module": "internal/utils/array.js"
          }
        },
        {
          "kind": "js",
          "name": "nextInArray",
          "declaration": {
            "name": "nextInArray",
            "module": "internal/utils/array.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/async.js",
      "declarations": [
        {
          "kind": "function",
          "name": "sleep",
          "parameters": [
            {
              "name": "millisecondsToWait",
              "default": "10"
            }
          ],
          "description": "sleep() is used in animation code and also in some unit tests where async behavior needs to\nbe tested.\n\nUse sleep() inside an async function to delay execution for a short period of time.\n\n```\nasync function ohai() {\n   await sleep(55); // delays execution by at least 55 ms\n   return 'ohai';\n}\n```\n\nNOTE: the time sent to sleep is the MINIMUM time duration to execution. It is not and will not\nbe the exact time to execution."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sleep",
          "declaration": {
            "name": "sleep",
            "module": "internal/utils/async.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/color.js",
      "declarations": [
        {
          "kind": "function",
          "name": "hslToRgb",
          "parameters": [
            {
              "name": "h",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "s",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "l",
              "type": {
                "text": "number"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "rgbToHex",
          "parameters": [
            {
              "name": "red",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "green",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "blue",
              "type": {
                "text": "number"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hslToRgb",
          "declaration": {
            "name": "hslToRgb",
            "module": "internal/utils/color.js"
          }
        },
        {
          "kind": "js",
          "name": "rgbToHex",
          "declaration": {
            "name": "rgbToHex",
            "module": "internal/utils/color.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/conditional.js",
      "declarations": [
        {
          "kind": "function",
          "name": "returnOrFallthrough",
          "parameters": [
            {
              "name": "conditions",
              "type": {
                "text": "any[]"
              }
            },
            {
              "name": "fallthrough",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "returnOrFallthrough",
          "declaration": {
            "name": "returnOrFallthrough",
            "module": "internal/utils/conditional.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/css.js",
      "declarations": [
        {
          "kind": "function",
          "name": "hasClassnames",
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "classNames",
              "type": {
                "text": "string[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "addClassnames",
          "return": {
            "type": {
              "text": "HTMLElement"
            }
          },
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "classNames",
              "type": {
                "text": "string[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "removeClassnames",
          "return": {
            "type": {
              "text": "HTMLElement"
            }
          },
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "classNames",
              "type": {
                "text": "string[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "removeClassnamesUnless",
          "return": {
            "type": {
              "text": "HTMLElement"
            }
          },
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "classnamesToRemove",
              "type": {
                "text": "string[]"
              }
            },
            {
              "name": "classnamesToKeep",
              "type": {
                "text": "string[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "updateElementStyles",
          "return": {
            "type": {
              "text": "HTMLElement"
            }
          },
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "styleTuples",
              "type": {
                "text": "[string, string][]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "unsetElementStyles",
          "return": {
            "type": {
              "text": "HTMLElement"
            }
          },
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "styleProperties",
              "type": {
                "text": "string[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "pxToRem",
          "parameters": [
            {
              "name": "pxValue",
              "type": {
                "text": "number"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getCssPropertyValue",
          "parameters": [
            {
              "name": "propertyName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "el",
              "default": "document.body",
              "type": {
                "text": "Element"
              }
            },
            {
              "name": "pseudoSelectorModifier",
              "default": "null",
              "type": {
                "text": "string | null"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isCssPropertyName",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "str",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasClassnames",
          "declaration": {
            "name": "hasClassnames",
            "module": "internal/utils/css.js"
          }
        },
        {
          "kind": "js",
          "name": "addClassnames",
          "declaration": {
            "name": "addClassnames",
            "module": "internal/utils/css.js"
          }
        },
        {
          "kind": "js",
          "name": "removeClassnames",
          "declaration": {
            "name": "removeClassnames",
            "module": "internal/utils/css.js"
          }
        },
        {
          "kind": "js",
          "name": "removeClassnamesUnless",
          "declaration": {
            "name": "removeClassnamesUnless",
            "module": "internal/utils/css.js"
          }
        },
        {
          "kind": "js",
          "name": "updateElementStyles",
          "declaration": {
            "name": "updateElementStyles",
            "module": "internal/utils/css.js"
          }
        },
        {
          "kind": "js",
          "name": "unsetElementStyles",
          "declaration": {
            "name": "unsetElementStyles",
            "module": "internal/utils/css.js"
          }
        },
        {
          "kind": "js",
          "name": "pxToRem",
          "declaration": {
            "name": "pxToRem",
            "module": "internal/utils/css.js"
          }
        },
        {
          "kind": "js",
          "name": "getCssPropertyValue",
          "declaration": {
            "name": "getCssPropertyValue",
            "module": "internal/utils/css.js"
          }
        },
        {
          "kind": "js",
          "name": "isCssPropertyName",
          "declaration": {
            "name": "isCssPropertyName",
            "module": "internal/utils/css.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/dom.js",
      "declarations": [
        {
          "kind": "function",
          "name": "isFocusable",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            }
          ],
          "description": "We are not going to be opinionated about the use of the disabled attribute here.\nBrowsers will manage that on their own. The focus of this is to determine whether\nor not a tabindex should be set on an element to make it programmatically\nfocusable."
        },
        {
          "kind": "function",
          "name": "getElementWidth",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "unit",
              "default": "'px'"
            }
          ]
        },
        {
          "kind": "function",
          "name": "getElementWidthUnless",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "unless",
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isHTMLElement",
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "hasAttributeAndIsNotEmpty",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement | null"
              }
            },
            {
              "name": "attribute",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "setOrRemoveAttribute",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "attrTuple",
              "type": {
                "text": "HTMLAttributeTuple"
              }
            },
            {
              "name": "test",
              "type": {
                "text": "() => boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "setAttributes",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "attributeTuples",
              "type": {
                "text": "HTMLAttributeTuple[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "removeAttributes",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "attrs",
              "type": {
                "text": "string[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "addAttributeValue",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "attr",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "removeAttributeValue",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "attr",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "assignSlotNames",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "slotTuples",
              "type": {
                "text": "[HTMLElement, string | boolean][]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "listenForAttributeChange",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "attrName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "fn",
              "type": {
                "text": "(attrValue: string | null) => void"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isVisible",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "spanWrapper",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "nodeList",
              "type": {
                "text": "NodeListOf<ChildNode>"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "queryChildFromLightOrShadowDom",
          "return": {
            "type": {
              "text": "Element | null"
            }
          },
          "parameters": [
            {
              "name": "hostEl",
              "type": {
                "text": "Element"
              }
            },
            {
              "name": "selector",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "coerceBooleanProperty",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ],
          "description": "Coerces attribute/property value to a boolean"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isFocusable",
          "declaration": {
            "name": "isFocusable",
            "module": "internal/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "getElementWidth",
          "declaration": {
            "name": "getElementWidth",
            "module": "internal/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "getElementWidthUnless",
          "declaration": {
            "name": "getElementWidthUnless",
            "module": "internal/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "isHTMLElement",
          "declaration": {
            "name": "isHTMLElement",
            "module": "internal/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "hasAttributeAndIsNotEmpty",
          "declaration": {
            "name": "hasAttributeAndIsNotEmpty",
            "module": "internal/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "setOrRemoveAttribute",
          "declaration": {
            "name": "setOrRemoveAttribute",
            "module": "internal/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "setAttributes",
          "declaration": {
            "name": "setAttributes",
            "module": "internal/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "removeAttributes",
          "declaration": {
            "name": "removeAttributes",
            "module": "internal/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "addAttributeValue",
          "declaration": {
            "name": "addAttributeValue",
            "module": "internal/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "removeAttributeValue",
          "declaration": {
            "name": "removeAttributeValue",
            "module": "internal/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "assignSlotNames",
          "declaration": {
            "name": "assignSlotNames",
            "module": "internal/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "listenForAttributeChange",
          "declaration": {
            "name": "listenForAttributeChange",
            "module": "internal/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "isVisible",
          "declaration": {
            "name": "isVisible",
            "module": "internal/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "spanWrapper",
          "declaration": {
            "name": "spanWrapper",
            "module": "internal/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "queryChildFromLightOrShadowDom",
          "declaration": {
            "name": "queryChildFromLightOrShadowDom",
            "module": "internal/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "coerceBooleanProperty",
          "declaration": {
            "name": "coerceBooleanProperty",
            "module": "internal/utils/dom.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/environment.js",
      "declarations": [
        {
          "kind": "function",
          "name": "isBrowser",
          "parameters": [
            {
              "name": "win",
              "default": "window"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isJestTest"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isBrowser",
          "declaration": {
            "name": "isBrowser",
            "module": "internal/utils/environment.js"
          }
        },
        {
          "kind": "js",
          "name": "isJestTest",
          "declaration": {
            "name": "isJestTest",
            "module": "internal/utils/environment.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/event-subject.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/events.js",
      "declarations": [
        {
          "kind": "function",
          "name": "stopEvent",
          "parameters": [
            {
              "name": "event",
              "type": {
                "text": "Event"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getElementUpdates",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "propertyKey",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "callback",
              "type": {
                "text": "(value: any) => void"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stopEvent",
          "declaration": {
            "name": "stopEvent",
            "module": "internal/utils/events.js"
          }
        },
        {
          "kind": "js",
          "name": "getElementUpdates",
          "declaration": {
            "name": "getElementUpdates",
            "module": "internal/utils/events.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/exists.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "existsIn"
        },
        {
          "kind": "function",
          "name": "elementExists",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "tagName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "registry",
              "optional": true,
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "existsInWindow"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "existsIn",
          "declaration": {
            "name": "existsIn",
            "module": "internal/utils/exists.js"
          }
        },
        {
          "kind": "js",
          "name": "elementExists",
          "declaration": {
            "name": "elementExists",
            "module": "internal/utils/exists.js"
          }
        },
        {
          "kind": "js",
          "name": "existsInWindow",
          "declaration": {
            "name": "existsInWindow",
            "module": "internal/utils/exists.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/focus-trap.js",
      "declarations": [
        {
          "kind": "function",
          "name": "refocusIfOutsideFocusTrapElement",
          "parameters": [
            {
              "name": "focusedElement",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "focusTrapElement",
              "type": {
                "text": "FocusTrapElement"
              }
            },
            {
              "name": "elementToRefocus",
              "optional": true,
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "elementIsOutsideFocusTrapElement",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "focusedElement",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "focusTrapElement",
              "type": {
                "text": "FocusTrapElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "createFocusTrapReboundElement"
        },
        {
          "kind": "function",
          "name": "addReboundElementsToFocusTrapElement",
          "parameters": [
            {
              "name": "focusTrapElement",
              "type": {
                "text": "FocusTrapElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "removeReboundElementsFromFocusTrapElement",
          "parameters": [
            {
              "name": "focusTrapElement",
              "type": {
                "text": "FocusTrapElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "castHtmlElementToFocusTrapElement",
          "return": {
            "type": {
              "text": "FocusTrapElement"
            }
          },
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "FocusTrap",
          "members": [
            {
              "kind": "field",
              "name": "focusTrapElement",
              "type": {
                "text": "FocusTrapElement"
              },
              "default": "hostElement"
            },
            {
              "kind": "field",
              "name": "previousFocus",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onFocusInEvent",
              "type": {
                "text": "any"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "firstFocusElement",
              "type": {
                "text": "HTMLElement | FocusTrapElement"
              }
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "enableFocusTrap"
            },
            {
              "kind": "method",
              "name": "removeFocusTrap"
            },
            {
              "kind": "method",
              "name": "onFocusIn",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "FocusEvent"
                  }
                }
              ]
            },
            {
              "kind": "field"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "refocusIfOutsideFocusTrapElement",
          "declaration": {
            "name": "refocusIfOutsideFocusTrapElement",
            "module": "internal/utils/focus-trap.js"
          }
        },
        {
          "kind": "js",
          "name": "elementIsOutsideFocusTrapElement",
          "declaration": {
            "name": "elementIsOutsideFocusTrapElement",
            "module": "internal/utils/focus-trap.js"
          }
        },
        {
          "kind": "js",
          "name": "createFocusTrapReboundElement",
          "declaration": {
            "name": "createFocusTrapReboundElement",
            "module": "internal/utils/focus-trap.js"
          }
        },
        {
          "kind": "js",
          "name": "addReboundElementsToFocusTrapElement",
          "declaration": {
            "name": "addReboundElementsToFocusTrapElement",
            "module": "internal/utils/focus-trap.js"
          }
        },
        {
          "kind": "js",
          "name": "removeReboundElementsFromFocusTrapElement",
          "declaration": {
            "name": "removeReboundElementsFromFocusTrapElement",
            "module": "internal/utils/focus-trap.js"
          }
        },
        {
          "kind": "js",
          "name": "castHtmlElementToFocusTrapElement",
          "declaration": {
            "name": "castHtmlElementToFocusTrapElement",
            "module": "internal/utils/focus-trap.js"
          }
        },
        {
          "kind": "js",
          "name": "FocusTrap",
          "declaration": {
            "name": "FocusTrap",
            "module": "internal/utils/focus-trap.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/framework.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getAngularVersion",
          "parameters": [
            {
              "name": "useCache",
              "default": "true"
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAngularJSVersion",
          "parameters": [
            {
              "name": "useCache",
              "default": "true"
            }
          ]
        },
        {
          "kind": "function",
          "name": "getReactVersion",
          "parameters": [
            {
              "name": "useCache",
              "default": "true"
            }
          ]
        },
        {
          "kind": "function",
          "name": "getVueVersion",
          "parameters": [
            {
              "name": "useCache",
              "default": "true"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isStorybook"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getAngularVersion",
          "declaration": {
            "name": "getAngularVersion",
            "module": "internal/utils/framework.js"
          }
        },
        {
          "kind": "js",
          "name": "getAngularJSVersion",
          "declaration": {
            "name": "getAngularJSVersion",
            "module": "internal/utils/framework.js"
          }
        },
        {
          "kind": "js",
          "name": "getReactVersion",
          "declaration": {
            "name": "getReactVersion",
            "module": "internal/utils/framework.js"
          }
        },
        {
          "kind": "js",
          "name": "getVueVersion",
          "declaration": {
            "name": "getVueVersion",
            "module": "internal/utils/framework.js"
          }
        },
        {
          "kind": "js",
          "name": "isStorybook",
          "declaration": {
            "name": "isStorybook",
            "module": "internal/utils/framework.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/global.js",
      "declarations": [
        {
          "kind": "function",
          "name": "setupCDSGlobal"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "setupCDSGlobal",
          "declaration": {
            "name": "setupCDSGlobal",
            "module": "internal/utils/global.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/identity.js",
      "declarations": [
        {
          "kind": "function",
          "name": "isNilOrEmpty",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isString",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isNumericString",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isStringOrNil",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isStringAndNotNilOrEmpty",
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isObject",
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isMap",
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isObjectAndNotNilOrEmpty",
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "hasPropertyChanged",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "oldVal",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "hasStringPropertyChanged",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "string | null | undefined"
              }
            },
            {
              "name": "oldVal",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "hasStringPropertyChangedAndNotNil",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "string | null | undefined"
              }
            },
            {
              "name": "oldVal",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getEnumValues",
          "parameters": [
            {
              "name": "enumeration",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "createId",
          "parameters": [
            {
              "name": "prefix",
              "default": "'_'"
            }
          ]
        },
        {
          "kind": "function",
          "name": "deepClone",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "convertStringPropValuePairsToTuple",
          "return": {
            "type": {
              "text": "ObjectPropertyNameAndValueTuples[]"
            }
          },
          "parameters": [
            {
              "name": "propValString",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "anyOrAllPropertiesPass",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "propValuePairs",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "anyOrAll",
              "type": {
                "text": "'any' | 'all'"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "allPropertiesPass",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "propValuePairs",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "anyPropertiesPass",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "propValuePairs",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getMillisecondsFromSeconds",
          "return": {
            "type": {
              "text": "number"
            }
          },
          "parameters": [
            {
              "name": "sec",
              "type": {
                "text": "number"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isNilOrEmpty",
          "declaration": {
            "name": "isNilOrEmpty",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "isString",
          "declaration": {
            "name": "isString",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "isNumericString",
          "declaration": {
            "name": "isNumericString",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "isStringOrNil",
          "declaration": {
            "name": "isStringOrNil",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "isStringAndNotNilOrEmpty",
          "declaration": {
            "name": "isStringAndNotNilOrEmpty",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "isObject",
          "declaration": {
            "name": "isObject",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "isMap",
          "declaration": {
            "name": "isMap",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "isObjectAndNotNilOrEmpty",
          "declaration": {
            "name": "isObjectAndNotNilOrEmpty",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "hasPropertyChanged",
          "declaration": {
            "name": "hasPropertyChanged",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "hasStringPropertyChanged",
          "declaration": {
            "name": "hasStringPropertyChanged",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "hasStringPropertyChangedAndNotNil",
          "declaration": {
            "name": "hasStringPropertyChangedAndNotNil",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "getEnumValues",
          "declaration": {
            "name": "getEnumValues",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "createId",
          "declaration": {
            "name": "createId",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "deepClone",
          "declaration": {
            "name": "deepClone",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "convertStringPropValuePairsToTuple",
          "declaration": {
            "name": "convertStringPropValuePairsToTuple",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "anyOrAllPropertiesPass",
          "declaration": {
            "name": "anyOrAllPropertiesPass",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "allPropertiesPass",
          "declaration": {
            "name": "allPropertiesPass",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "anyPropertiesPass",
          "declaration": {
            "name": "anyPropertiesPass",
            "module": "internal/utils/identity.js"
          }
        },
        {
          "kind": "js",
          "name": "getMillisecondsFromSeconds",
          "declaration": {
            "name": "getMillisecondsFromSeconds",
            "module": "internal/utils/identity.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/keycodes.js",
      "declarations": [
        {
          "kind": "function",
          "name": "keyWasEvented",
          "parameters": [
            {
              "name": "evt",
              "type": {
                "text": "KeyboardEvent"
              }
            },
            {
              "name": "whichKey",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "keyWasEvented() checks to see if a given key is part of any KeyboardEvent it is passed."
        },
        {
          "kind": "function",
          "name": "onKey",
          "parameters": [
            {
              "name": "whichKey",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "evt",
              "type": {
                "text": "KeyboardEvent"
              }
            },
            {
              "name": "handler",
              "type": {
                "text": "any"
              }
            }
          ],
          "description": "onKey() takes a single key and fires a handler if that key is part of\nthe KeyboardEvent it was passed."
        },
        {
          "kind": "function",
          "name": "onAnyKey",
          "parameters": [
            {
              "name": "whichKeys",
              "type": {
                "text": "string[]"
              }
            },
            {
              "name": "evt",
              "type": {
                "text": "KeyboardEvent"
              }
            },
            {
              "name": "handler",
              "type": {
                "text": "any"
              }
            }
          ],
          "description": "onAnyKey() takes an array of keys and fires a handler if any of the keys are part of\nthe KeyboardEvent it was passed."
        },
        {
          "kind": "function",
          "name": "onKeyCombo",
          "parameters": [
            {
              "name": "whichKeyCombo",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "evt",
              "type": {
                "text": "KeyboardEvent"
              }
            },
            {
              "name": "handler",
              "type": {
                "text": "any"
              }
            }
          ],
          "description": "onKeyCombo() takes a string representation of a combination of keys and modifier keys such as\n'ctrl+shift+a'.\n\nonKeyCombo() does not make accommodation for the '+' symbol in a key combo. Consider using 'ctrl+shift+='.\n\nonKeyCombo() accounts for 'cmd', 'win', and 'meta' keys inside keycombos. 'cmd+K', 'win+K', and 'meta+K'\nare all the same thing to onKeyCombo()."
        },
        {
          "kind": "function",
          "name": "getModifierKeysFromKeyCombo",
          "parameters": [
            {
              "name": "keyCombo",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "getModifierKeysFromKeyCombo() takes a keycombo string and returns an array with all of the\nspecial keys in the keycombo."
        },
        {
          "kind": "function",
          "name": "removeModifierKeysFromKeyCombo",
          "parameters": [
            {
              "name": "keyCombo",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "removeModifierKeysFromKeyCombo() takes a keycombo string and returns an array with all of the\nnon-special keys in the keycombo."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "keyWasEvented",
          "declaration": {
            "name": "keyWasEvented",
            "module": "internal/utils/keycodes.js"
          }
        },
        {
          "kind": "js",
          "name": "onKey",
          "declaration": {
            "name": "onKey",
            "module": "internal/utils/keycodes.js"
          }
        },
        {
          "kind": "js",
          "name": "onAnyKey",
          "declaration": {
            "name": "onAnyKey",
            "module": "internal/utils/keycodes.js"
          }
        },
        {
          "kind": "js",
          "name": "onKeyCombo",
          "declaration": {
            "name": "onKeyCombo",
            "module": "internal/utils/keycodes.js"
          }
        },
        {
          "kind": "js",
          "name": "getModifierKeysFromKeyCombo",
          "declaration": {
            "name": "getModifierKeysFromKeyCombo",
            "module": "internal/utils/keycodes.js"
          }
        },
        {
          "kind": "js",
          "name": "removeModifierKeysFromKeyCombo",
          "declaration": {
            "name": "removeModifierKeysFromKeyCombo",
            "module": "internal/utils/keycodes.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/lit.js",
      "declarations": [
        {
          "kind": "function",
          "name": "childrenUpdateComplete",
          "parameters": [
            {
              "name": "elements",
              "type": {
                "text": "LitElement[] | NodeListOf<LitElement>"
              }
            }
          ],
          "description": "Returns a promise when all components have completed rendering one cycle."
        },
        {
          "kind": "function",
          "name": "syncDefinedProps",
          "parameters": [
            {
              "name": "props",
              "type": {
                "text": "PropertyValues<any>"
              }
            },
            {
              "name": "source",
              "type": {
                "text": "{ [prop: string]: any }"
              }
            },
            {
              "name": "targets",
              "type": {
                "text": "{ [prop: string]: any }[]"
              }
            }
          ],
          "description": "Set all properties that are in common with a parent group and child components.\nThis is helpful when providing convenience group/wrapper components that set the state\nof child slotted elements (cds-form-group, cds-control-group). Typically call\nduring the `firstUpdated` or `updated` lifecycle."
        },
        {
          "kind": "function",
          "name": "syncProps",
          "parameters": [
            {
              "name": "target",
              "type": {
                "text": "{ [prop: string]: any }"
              }
            },
            {
              "name": "source",
              "type": {
                "text": "{ [prop: string]: any }"
              }
            },
            {
              "name": "conditions",
              "type": {
                "text": "{ [prop: string]: boolean }"
              }
            }
          ],
          "description": "Set all common properties between two instances with given conditions. This is\nhelpful for setting child component properties from the parent given certain\nconditions."
        },
        {
          "kind": "function",
          "name": "syncPropsForAllItems",
          "parameters": [
            {
              "name": "targets",
              "type": {
                "text": "{ [prop: string]: any }[]"
              }
            },
            {
              "name": "source",
              "type": {
                "text": "{ [prop: string]: any }"
              }
            },
            {
              "name": "conditions",
              "type": {
                "text": "{ [prop: string]: boolean }"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "childrenUpdateComplete",
          "declaration": {
            "name": "childrenUpdateComplete",
            "module": "internal/utils/lit.js"
          }
        },
        {
          "kind": "js",
          "name": "syncDefinedProps",
          "declaration": {
            "name": "syncDefinedProps",
            "module": "internal/utils/lit.js"
          }
        },
        {
          "kind": "js",
          "name": "syncProps",
          "declaration": {
            "name": "syncProps",
            "module": "internal/utils/lit.js"
          }
        },
        {
          "kind": "js",
          "name": "syncPropsForAllItems",
          "declaration": {
            "name": "syncPropsForAllItems",
            "module": "internal/utils/lit.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/metadata.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getElementStorybookArgTypes",
          "parameters": [
            {
              "name": "tagName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "customElementsMetadata",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getElementStorybookArgs",
          "parameters": [
            {
              "name": "args",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getElementStorybookArgTypes",
          "declaration": {
            "name": "getElementStorybookArgTypes",
            "module": "internal/utils/metadata.js"
          }
        },
        {
          "kind": "js",
          "name": "getElementStorybookArgs",
          "declaration": {
            "name": "getElementStorybookArgs",
            "module": "internal/utils/metadata.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/registration.js",
      "declarations": [
        {
          "kind": "function",
          "name": "registerElementSafely",
          "parameters": [
            {
              "name": "tagName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "elementClass",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "registerElementSafely",
          "declaration": {
            "name": "registerElementSafely",
            "module": "internal/utils/registration.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/responsive.js",
      "declarations": [
        {
          "kind": "function",
          "name": "elementResize",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "callbackFn",
              "type": {
                "text": "() => void"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "elementVisible",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "callbackFn",
              "type": {
                "text": "() => void"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "updateComponentLayout",
          "parameters": [
            {
              "name": "component",
              "type": {
                "text": "ResponsiveComponent"
              }
            },
            {
              "name": "layoutConfig",
              "type": {
                "text": "LayoutConfig"
              }
            },
            {
              "name": "fn",
              "type": {
                "text": "() => void"
              }
            }
          ],
          "description": "Given a ResponsiveComponent this function will loop through a list of layout\noptions and change the layout of the component until the components layout\ncondition is satisfied."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "elementResize",
          "declaration": {
            "name": "elementResize",
            "module": "internal/utils/responsive.js"
          }
        },
        {
          "kind": "js",
          "name": "elementVisible",
          "declaration": {
            "name": "elementVisible",
            "module": "internal/utils/responsive.js"
          }
        },
        {
          "kind": "js",
          "name": "updateComponentLayout",
          "declaration": {
            "name": "updateComponentLayout",
            "module": "internal/utils/responsive.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/size.js",
      "declarations": [
        {
          "kind": "function",
          "name": "isTshirtSize",
          "parameters": [
            {
              "name": "size",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "updateEquilateralSizeStyles",
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isTshirtSize",
          "declaration": {
            "name": "isTshirtSize",
            "module": "internal/utils/size.js"
          }
        },
        {
          "kind": "js",
          "name": "updateEquilateralSizeStyles",
          "declaration": {
            "name": "updateEquilateralSizeStyles",
            "module": "internal/utils/size.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/string.js",
      "declarations": [
        {
          "kind": "function",
          "name": "transformToString",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "delimiter",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "fns",
              "type": {
                "text": "any[]"
              }
            },
            {
              "name": "args",
              "type": {
                "text": "any[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "transformToSpacedString",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "fns",
              "type": {
                "text": "any[]"
              }
            },
            {
              "name": "args",
              "type": {
                "text": "any[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "transformToUnspacedString",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "fns",
              "type": {
                "text": "any[]"
              }
            },
            {
              "name": "args",
              "type": {
                "text": "any[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "camelCaseToKebabCase",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "kebabCaseToCamelCase",
          "parameters": [
            {
              "name": "str",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "kebabCaseToPascalCase",
          "parameters": [
            {
              "name": "string",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "setStyles",
          "parameters": [
            {
              "name": "styles",
              "type": {
                "text": "{ [key: string]: string }"
              }
            }
          ],
          "description": "Take a object map of css properties and if value concatenate string of all computed values\nUseful for dynamic style tags in lit templates"
        },
        {
          "kind": "function",
          "name": "setPropStyles",
          "parameters": [
            {
              "name": "styles",
              "type": {
                "text": "{ [key: string]: string }"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "capitalizeFirstLetter",
          "parameters": [
            {
              "name": "string",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "cssGroup",
          "type": {
            "text": "string"
          },
          "default": "'CSS Custom Properties'",
          "description": "Used for Storybook docs to define knob group for css properties"
        },
        {
          "kind": "variable",
          "name": "propertiesGroup",
          "type": {
            "text": "string"
          },
          "default": "'Default Properties'",
          "description": "Used for Storybook docs to define knob group for JavaScript properties"
        },
        {
          "kind": "function",
          "name": "getNumericValueFromCssSecondsStyleValue",
          "return": {
            "type": {
              "text": "number"
            }
          },
          "parameters": [
            {
              "name": "styleValueInSeconds",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isPrefixedOrSuffixedBy",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "str",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "stringFix",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "prefixOrSuffix",
              "default": "'prefix'"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isPrefixedBy",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "str",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "prefix",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isSuffixedBy",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "str",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "suffix",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "removePrefixOrSuffix",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "str",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "stringFix",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "prefixOrSuffix",
              "default": "'prefix'"
            }
          ]
        },
        {
          "kind": "function",
          "name": "removePrefix",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "str",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "prefix",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "removeSuffix",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "str",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "suffix",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "replaceWord",
          "parameters": [
            {
              "name": "str",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "wordToReplace",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "replaceWith",
              "default": "''"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "transformToString",
          "declaration": {
            "name": "transformToString",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "transformToSpacedString",
          "declaration": {
            "name": "transformToSpacedString",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "transformToUnspacedString",
          "declaration": {
            "name": "transformToUnspacedString",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "camelCaseToKebabCase",
          "declaration": {
            "name": "camelCaseToKebabCase",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "kebabCaseToCamelCase",
          "declaration": {
            "name": "kebabCaseToCamelCase",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "kebabCaseToPascalCase",
          "declaration": {
            "name": "kebabCaseToPascalCase",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "setStyles",
          "declaration": {
            "name": "setStyles",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "setPropStyles",
          "declaration": {
            "name": "setPropStyles",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "capitalizeFirstLetter",
          "declaration": {
            "name": "capitalizeFirstLetter",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "cssGroup",
          "declaration": {
            "name": "cssGroup",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "propertiesGroup",
          "declaration": {
            "name": "propertiesGroup",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "getNumericValueFromCssSecondsStyleValue",
          "declaration": {
            "name": "getNumericValueFromCssSecondsStyleValue",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "isPrefixedOrSuffixedBy",
          "declaration": {
            "name": "isPrefixedOrSuffixedBy",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "isPrefixedBy",
          "declaration": {
            "name": "isPrefixedBy",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "isSuffixedBy",
          "declaration": {
            "name": "isSuffixedBy",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "removePrefixOrSuffix",
          "declaration": {
            "name": "removePrefixOrSuffix",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "removePrefix",
          "declaration": {
            "name": "removePrefix",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "removeSuffix",
          "declaration": {
            "name": "removeSuffix",
            "module": "internal/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "replaceWord",
          "declaration": {
            "name": "replaceWord",
            "module": "internal/utils/string.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "internal/utils/supports.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "browserFeatures",
          "default": "new BrowserFeatures()"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "browserFeatures",
          "declaration": {
            "name": "browserFeatures",
            "module": "internal/utils/supports.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "modal/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./modal-header.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./modal-header-actions.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./modal-content.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./modal-actions.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./modal.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "modal/modal-actions.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Web component modal actions to be used inside modal.\n\n```typescript\nimport '@cds/core/modal/register.js';\n```\n\n```html\n<cds-modal>\n  <cds-modal-header>\n     <h3 cds-text=\"title\">My Modal</h3>\n  </cds-modal-header>\n  <cds-modal-content>\n    <p>Lorem Ipsum</p>\n  </cds-modal-content>\n  <cds-modal-actions>\n      <cds-button>Ok</cds-button>\n  </cds-modal-actions>\n</cds-modal>\n```",
          "name": "CdsModalActions",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-modal-actions",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsModalActions",
          "declaration": {
            "name": "CdsModalActions",
            "module": "modal/modal-actions.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "modal/modal-content.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Web component modal content to be used inside modal.\n\n```typescript\nimport '@cds/core/modal/register.js';\n```\n\n```html\n<cds-modal size='lg'>\n  <cds-modal-header>\n     <h3 cds-text=\"title\">My Modal</h3>\n  </cds-modal-header>\n  <cds-modal-content>\n     <p>Lorem Ipsum</p>\n  </cds-modal-content>\n  <cds-modal-actions>\n      <cds-button>Ok</cds-button>\n  </cds-modal-actions>\n</cds-modal>\n```",
          "name": "CdsModalContent",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "any"
              },
              "static": true,
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "tabIndexAttr",
              "type": {
                "text": "number"
              },
              "privacy": "protected",
              "default": "0"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-modal-content",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsModalContent",
          "declaration": {
            "name": "CdsModalContent",
            "module": "modal/modal-content.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "modal/modal-header-actions.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Web component modal header actions to be used inside modal.\n\n```typescript\nimport '@cds/core/modal/register.js';\n```\n\n```html\n<cds-modal>\n  <cds-modal-header>\n     <h3 cds-text=\"title\">My Modal</h3>\n  </cds-modal-header>\n  <cds-modal-content>\n    <p>Lorem Ipsum</p>\n  </cds-modal-content>\n  <cds-modal-actions>\n      <cds-button>Ok</cds-button>\n  </cds-modal-actions>\n</cds-modal>\n```",
          "name": "CdsModalHeaderActions",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-modal-header-actions",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsModalHeaderActions",
          "declaration": {
            "name": "CdsModalHeaderActions",
            "module": "modal/modal-header-actions.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "modal/modal-header.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Web component modal header to be used inside modal.\n\n```typescript\nimport '@cds/core/modal/register.js';\n```\n\n```html\n<cds-modal>\n  <cds-modal-header>\n     <h3 cds-text=\"title\">My Modal</h3>\n  </cds-modal-header>\n  <cds-modal-content>\n    <p>Lorem Ipsum</p>\n  </cds-modal-content>\n  <cds-modal-actions>\n      <cds-button>Ok</cds-button>\n  </cds-modal-actions>\n</cds-modal>\n```",
          "name": "CdsModalHeader",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-modal-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsModalHeader",
          "declaration": {
            "name": "CdsModalHeader",
            "module": "modal/modal-header.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "modal/modal.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Web component modal.\n\n```typescript\nimport '@cds/core/modal/register.js';\n```\n\n```html\n<cds-modal>\n  <cds-modal-header>\n     <h3 cds-text=\"title\">My Modal</h3>\n  </cds-modal-header>\n  <cds-modal-content>\n    <p>Lorem Ipsum</p>\n  </cds-modal-content>\n  <cds-modal-actions>\n      <cds-button>Ok</cds-button>\n  </cds-modal-actions>\n</cds-modal>\n```",
          "name": "CdsModal",
          "cssProperties": [
            {
              "description": "inherited from the internal overlay component",
              "name": "--backdrop-background"
            },
            {
              "description": "inherited from the internal overlay component",
              "name": "--layered-backdrop-background"
            },
            {
              "name": "--border-color"
            },
            {
              "name": "--border-width"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--background"
            },
            {
              "name": "--box-shadow"
            },
            {
              "name": "--width"
            },
            {
              "description": "set as { x, y }. take care when customizing because overflow settings can have unintended side effects.",
              "name": "--content-overflow"
            },
            {
              "description": "sets hard limit on height of modal",
              "name": "--max-height"
            },
            {
              "description": "sets hard limit on height of modal when on a tablet in landscape mode",
              "name": "--tablet-max-height"
            }
          ],
          "slots": [
            {},
            {
              "name": "cds-modal-content"
            },
            {
              "name": "cds-modal-header"
            },
            {
              "name": "cds-modal-actions"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "If false, the modal will not render the close button.",
              "attribute": "closable"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'default' | 'sm' | 'lg' | 'xl'"
              },
              "description": "Sets the overall height and width of the modal and icon based on value",
              "attribute": "size"
            },
            {
              "kind": "method",
              "name": "toggleCloseButton"
            },
            {
              "kind": "field",
              "name": "cdsMotion",
              "type": {
                "text": "string"
              },
              "default": "'on'",
              "attribute": "cdsMotion",
              "inheritedFrom": {
                "name": "CdsInternalOverlay",
                "module": "internal-components/overlay/overlay.element.js"
              }
            },
            {
              "kind": "field",
              "name": "cdsMotionChange",
              "type": {
                "text": "EventEmitter<string>"
              },
              "inheritedFrom": {
                "name": "CdsInternalOverlay",
                "module": "internal-components/overlay/overlay.element.js"
              }
            },
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "any"
              },
              "static": true,
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalOverlay",
                "module": "internal-components/overlay/overlay.element.js"
              }
            },
            {
              "kind": "field",
              "name": "overlayIdPrefix",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "'_overlay-'",
              "inheritedFrom": {
                "name": "CdsInternalOverlay",
                "module": "internal-components/overlay/overlay.element.js"
              }
            },
            {
              "kind": "field",
              "name": "closeChange",
              "type": {
                "text": "EventEmitter<CloseChangeSources>"
              },
              "inheritedFrom": {
                "name": "CdsInternalOverlay",
                "module": "internal-components/overlay/overlay.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isLayered",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsInternalOverlay",
                "module": "internal-components/overlay/overlay.element.js"
              }
            },
            {
              "kind": "field",
              "name": "backdrop",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalOverlay",
                "module": "internal-components/overlay/overlay.element.js"
              }
            },
            {
              "kind": "method",
              "name": "closeOverlay",
              "parameters": [
                {
                  "name": "trigger",
                  "default": "'custom'",
                  "type": {
                    "text": "CloseChangeSources"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsInternalOverlay",
                "module": "internal-components/overlay/overlay.element.js"
              }
            },
            {
              "kind": "field",
              "name": "backdropTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalOverlay",
                "module": "internal-components/overlay/overlay.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fireEventOnBackdropClick",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalOverlay",
                "module": "internal-components/overlay/overlay.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fireEventOnEscape",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalOverlay",
                "module": "internal-components/overlay/overlay.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focusTrapId",
              "type": {
                "text": "string"
              },
              "attribute": "focusTrapId",
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            },
            {
              "kind": "field",
              "name": "focusTrap",
              "type": {
                "text": "FocusTrap"
              },
              "default": "new FocusTrap(this)",
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            },
            {
              "kind": "field",
              "name": "topReboundElement",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            },
            {
              "kind": "field",
              "name": "bottomReboundElement",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            },
            {
              "kind": "field",
              "name": "hidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Its recommended to remove or add a focus trap element from the DOM\nsome SSR systems can have technical constraints where the item can\nonly be removed via CSS/hidden.",
              "attribute": "hidden",
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            },
            {
              "kind": "field",
              "name": "demoMode",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            },
            {
              "kind": "method",
              "name": "toggleFocusTrap",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            }
          ],
          "events": [
            {
              "description": "notify when the user has clicked the close button",
              "name": "closeChange",
              "inheritedFrom": {
                "name": "CdsInternalOverlay",
                "module": "internal-components/overlay/overlay.element.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "If false, the modal will not render the close button.",
              "fieldName": "closable"
            },
            {
              "name": "size",
              "type": {
                "text": "'default' | 'sm' | 'lg' | 'xl'"
              },
              "description": "Sets the overall height and width of the modal and icon based on value",
              "fieldName": "size"
            },
            {
              "name": "cdsMotion",
              "type": {
                "text": "string"
              },
              "default": "'on'",
              "fieldName": "cdsMotion",
              "inheritedFrom": {
                "name": "CdsInternalOverlay",
                "module": "internal-components/overlay/overlay.element.js"
              }
            },
            {
              "name": "hidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Its recommended to remove or add a focus trap element from the DOM\nsome SSR systems can have technical constraints where the item can\nonly be removed via CSS/hidden.",
              "fieldName": "hidden",
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            },
            {
              "name": "focusTrapId",
              "type": {
                "text": "string"
              },
              "fieldName": "focusTrapId",
              "inheritedFrom": {
                "name": "CdsBaseFocusTrap",
                "module": "internal/base/focus-trap.base.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsInternalOverlay",
            "package": "@cds/core/internal-components/overlay"
          },
          "tagName": "cds-modal",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsModal",
          "declaration": {
            "name": "CdsModal",
            "module": "modal/modal.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "modal/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "navigation/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./navigation.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./navigation-group.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./navigation-start.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./navigation-item.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "navigation/interfaces/navigation.interfaces.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "navigation/navigation-group.element.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "CdsNavigationGroupTagName",
          "type": {
            "text": "string"
          },
          "default": "'cds-navigation-group'"
        },
        {
          "kind": "class",
          "description": "\n```typescript\nimport '@cds/core/navigation/register.js';\n```\n\n```html\n<cds-navigation-group>\n  <cds-navigation-start></cds-navigation-start>\n   <cds-navigation-item><a href=\"/home\">Home</cds-navigation-item>\n   <cds-navigation-item><a href=\"/account\">Account</cds-navigation-item>\n</cds-navigation-group>\n```",
          "name": "CdsNavigationGroup",
          "cssProperties": [
            {
              "name": "--animation-duration"
            },
            {
              "name": "--animation-easing"
            },
            {
              "name": "--background"
            }
          ],
          "slots": [
            {}
          ],
          "members": [
            {
              "kind": "field",
              "name": "cdsMotion",
              "type": {
                "text": "string"
              },
              "default": "'on'",
              "attribute": "cdsMotion"
            },
            {
              "kind": "field",
              "name": "expandedChange",
              "type": {
                "text": "EventEmitter<boolean>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "cdsMotionChange",
              "type": {
                "text": "EventEmitter<string>"
              }
            },
            {
              "kind": "field",
              "name": "navigationGroupId",
              "type": {
                "text": "string"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "isGroupStart",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "attribute": "active"
            },
            {
              "kind": "field",
              "name": "expandedGroup",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "groupStart",
              "type": {
                "text": "CdsNavigationStart"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "groupItems",
              "type": {
                "text": "NodeListOf<CdsNavigationItem>"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "nestedGroups",
              "type": {
                "text": "NodeListOf<CdsNavigationItem>"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "toggle",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "notify when the user has clicked the navigation expand/collapse button",
              "name": "expandedChange"
            }
          ],
          "attributes": [
            {
              "name": "cdsMotion",
              "type": {
                "text": "string"
              },
              "default": "'on'",
              "fieldName": "cdsMotion"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expanded"
            },
            {
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "fieldName": "active"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-navigation-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsNavigationGroupTagName",
          "declaration": {
            "name": "CdsNavigationGroupTagName",
            "module": "navigation/navigation-group.element.js"
          }
        },
        {
          "kind": "js",
          "name": "CdsNavigationGroup",
          "declaration": {
            "name": "CdsNavigationGroup",
            "module": "navigation/navigation-group.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "navigation/navigation-item.element.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "CdsNavigationItemTagName",
          "type": {
            "text": "string"
          },
          "default": "'cds-navigation-item'"
        },
        {
          "kind": "class",
          "description": "```typescript\nimport '@cds/core/navigation/register.js';\n```\n\n```html\n <cds-navigation-item><a href=\"/home\">Home</cds-navigation-item>\n```",
          "name": "CdsNavigationItem",
          "cssProperties": [
            {
              "name": "--color"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--font-weight"
            },
            {
              "name": "--letter-spacing"
            },
            {
              "name": "--padding"
            }
          ],
          "slots": [
            {}
          ],
          "members": [
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "active",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "expandedGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "groupItem",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "NavigationFocusState"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "focusElement",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "itemIcon",
              "type": {
                "text": "CdsIcon"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "itemText",
              "type": {
                "text": "NodeListOf<HTMLSpanElement>"
              }
            },
            {
              "kind": "method",
              "name": "handleItemAnchorText",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "active"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-navigation-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsNavigationItemTagName",
          "declaration": {
            "name": "CdsNavigationItemTagName",
            "module": "navigation/navigation-item.element.js"
          }
        },
        {
          "kind": "js",
          "name": "CdsNavigationItem",
          "declaration": {
            "name": "CdsNavigationItem",
            "module": "navigation/navigation-item.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "navigation/navigation-start.element.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "CdsNavigationStartTagName",
          "type": {
            "text": "string"
          },
          "default": "'cds-navigation-start'"
        },
        {
          "kind": "class",
          "description": "Web component navigation.\n\n```typescript\nimport '@cds/core/navigation/register.js';\n```\n\n```html\n<cds-navigation-start>Start text</cds-navigation-start>\n```",
          "name": "CdsNavigationStart",
          "cssProperties": [
            {
              "description": "inherit",
              "name": "--color:"
            },
            {
              "description": "inherit",
              "name": "--line-height:"
            },
            {
              "description": "inherit",
              "name": "--font-size:"
            },
            {
              "description": "inherit",
              "name": "--font-weight:"
            }
          ],
          "slots": [
            {},
            {
              "description": "customize the default start toggle icon",
              "name": "cds-navigation-start-icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "expandedRoot",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expandedRoot"
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "NavigationFocusState"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "isGroupStart",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "isGroupStart",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "navigationGroupId",
              "type": {
                "text": "string"
              },
              "attribute": "navigationGroupId"
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "focusElement",
              "type": {
                "text": "HTMLButtonElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "startIcon",
              "type": {
                "text": "CdsIcon"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "itemText",
              "type": {
                "text": "NodeListOf<HTMLSpanElement>"
              }
            },
            {
              "kind": "method",
              "name": "handleStartButtonText",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderRootStart",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderGroupStart",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "toggleIconDirection",
              "type": {
                "text": "Directions"
              },
              "privacy": "private",
              "readonly": true
            }
          ],
          "attributes": [
            {
              "name": "expandedRoot",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expandedRoot"
            },
            {
              "name": "isGroupStart",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "isGroupStart"
            },
            {
              "name": "navigationGroupId",
              "type": {
                "text": "string"
              },
              "fieldName": "navigationGroupId"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-navigation-start",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsNavigationStartTagName",
          "declaration": {
            "name": "CdsNavigationStartTagName",
            "module": "navigation/navigation-start.element.js"
          }
        },
        {
          "kind": "js",
          "name": "CdsNavigationStart",
          "declaration": {
            "name": "CdsNavigationStart",
            "module": "navigation/navigation-start.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "navigation/navigation.element.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "CdsNavigationTagName",
          "type": {
            "text": "string"
          },
          "default": "'cds-navigation'"
        },
        {
          "kind": "class",
          "description": "```typescript\nimport '@cds/core/navigation/register.js';\n```\n\n```html\n <cds-navigation>\n   <cds-navigation-item><a href=\"/home\">Home</cds-navigation-item>\n   <cds-navigation-item><a href=\"/account\">Account</cds-navigation-item>\n </cds-navigation>\n```",
          "name": "CdsNavigation",
          "cssProperties": [
            {
              "name": "--animation-duration"
            },
            {
              "name": "--animation-easing"
            },
            {
              "name": "--background"
            },
            {
              "name": "--collapsed-width"
            },
            {
              "name": "--expanded-width"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--font-weight"
            },
            {
              "name": "--letter-spacing"
            },
            {
              "name": "--line-height"
            },
            {
              "name": "--nested-padding"
            },
            {
              "name": "--padding"
            }
          ],
          "slots": [
            {},
            {
              "description": "cds-navigation-substart - project content below the navigation toggle button",
              "name": ""
            },
            {
              "description": "cds-navigation-end - project content below the scrollable section",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "expandedRoot",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "cdsMotion",
              "type": {
                "text": "string"
              },
              "default": "'on'",
              "attribute": "cdsMotion"
            },
            {
              "kind": "field",
              "name": "expandedChange",
              "type": {
                "text": "EventEmitter<boolean>"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "cdsMotionChange",
              "type": {
                "text": "EventEmitter<string>"
              }
            },
            {
              "kind": "field",
              "name": "groupItem",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "description": "This is used to sync down the information to this.navigationGroupItems"
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "\nVertical navigation elements can be either wide or narrow. Expanded indicates it should be wide.\nWhen navigation is wide cds-navigation-start button elements and cds-navigation-item a elements display\ntext. When it is narrow they do not (consumer should provide an icon that stays visible).",
              "attribute": "expanded"
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "navigationEnd",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "description": "The end slot that items can be projected into with slot=\"cds-navigation-end\""
            },
            {
              "kind": "field",
              "name": "allNavigationElements",
              "type": {
                "text": "NodeListOf<FocusableElement>"
              },
              "privacy": "protected",
              "description": "This slot query is used to identify and manage all focusable elements needed for arrow key navigation\nTODO: How to add in forms selector attribute and other things that are not FocusableElements like I use here\ntbd - I don;'t have an answer yet."
            },
            {
              "kind": "field",
              "name": "navigationStartRefs",
              "type": {
                "text": "NodeListOf<CdsNavigationStart>"
              },
              "privacy": "protected",
              "description": "Get references to all of the start elements so they can be passed state when updates are made."
            },
            {
              "kind": "field",
              "name": "rootDividers",
              "type": {
                "text": "NodeListOf<CdsDivider>"
              },
              "privacy": "protected",
              "description": "make navigation-body default and eliminate extra assigns **?\n/**\nquery for cds-divider  and project into navigation-body slot."
            },
            {
              "kind": "field",
              "name": "rootNavigationGroups",
              "type": {
                "text": "NodeListOf<CdsNavigationGroup>"
              },
              "privacy": "protected",
              "description": "query for root level groups and project them into the navigation-body slot."
            },
            {
              "kind": "field",
              "name": "rootNavigationItems",
              "type": {
                "text": "NodeListOf<CdsNavigationItem>"
              },
              "privacy": "protected",
              "description": "query for root level items and project them into the navigation-body slot."
            },
            {
              "kind": "field",
              "name": "rootNavigationStart",
              "type": {
                "text": "CdsNavigationStart"
              },
              "privacy": "protected",
              "description": "query for the root level start items and project them into the navigation-start slot."
            },
            {
              "kind": "field",
              "name": "navigationGroupItems",
              "type": {
                "text": "NodeListOf<CdsNavigationGroup>"
              },
              "privacy": "protected",
              "description": "query for items inside a cds-navigation-group, used to pass state down"
            },
            {
              "kind": "field",
              "name": "navigationItemRefs",
              "type": {
                "text": "NodeListOf<CdsNavigationItem>"
              },
              "privacy": "protected",
              "description": "query for all cds-navigation elements, used to pass state down"
            },
            {
              "kind": "field",
              "name": "navigationGroupRefs",
              "type": {
                "text": "NodeListOf<CdsNavigationGroup>"
              },
              "privacy": "protected",
              "description": "query for all groups (including any nested groups), used ot pass state down"
            },
            {
              "kind": "method",
              "name": "toggle",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "currentActiveItem",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "endTemplate",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "startTemplate",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "visibleChildren",
              "type": {
                "text": "FocusableElement[]"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "addStartEventListener"
            },
            {
              "kind": "method",
              "name": "blurItemKeys",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "focusRootStart",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "blurRootStart",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "initItemKeys",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "focusableElements",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "handleItemKeys",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleRootStartKeys",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateChildrenProps"
            }
          ],
          "events": [
            {
              "description": "notify when the user has clicked the navigation expand/collapse button",
              "name": "expandedChange"
            }
          ],
          "attributes": [
            {
              "name": "cdsMotion",
              "type": {
                "text": "string"
              },
              "default": "'on'",
              "fieldName": "cdsMotion"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "\nVertical navigation elements can be either wide or narrow. Expanded indicates it should be wide.\nWhen navigation is wide cds-navigation-start button elements and cds-navigation-item a elements display\ntext. When it is narrow they do not (consumer should provide an icon that stays visible).",
              "fieldName": "expanded"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-navigation",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsNavigationTagName",
          "declaration": {
            "name": "CdsNavigationTagName",
            "module": "navigation/navigation.element.js"
          }
        },
        {
          "kind": "js",
          "name": "CdsNavigation",
          "declaration": {
            "name": "CdsNavigation",
            "module": "navigation/navigation.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "navigation/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "navigation/utils/index.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "NAVIGATION_TEXT_WRAPPER",
          "type": {
            "text": "string"
          },
          "default": "'cds-navigation-sr-text'"
        },
        {
          "kind": "variable",
          "name": "DEFAULT_NAVIGATION_LAYOUT",
          "type": {
            "text": "string"
          },
          "default": "'vertical'"
        },
        {
          "kind": "function",
          "name": "getNextFocusElement",
          "return": {
            "type": {
              "text": "FocusableElement"
            }
          },
          "parameters": [
            {
              "name": "current",
              "type": {
                "text": "FocusableElement"
              }
            },
            {
              "name": "elements",
              "type": {
                "text": "FocusableElement[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getPreviousFocusElement",
          "return": {
            "type": {
              "text": "FocusableElement"
            }
          },
          "parameters": [
            {
              "name": "current",
              "type": {
                "text": "FocusableElement"
              }
            },
            {
              "name": "elements",
              "type": {
                "text": "FocusableElement[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getToggleIconDirection",
          "return": {
            "type": {
              "text": "Directions"
            }
          },
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "CdsNavigationStart"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "manageScreenReaderElements",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "expandedRoot",
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "removeFocus",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "FocusableElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "setFocus",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "FocusableElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "visibleElement",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "FocusableElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NAVIGATION_TEXT_WRAPPER",
          "declaration": {
            "name": "NAVIGATION_TEXT_WRAPPER",
            "module": "navigation/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "DEFAULT_NAVIGATION_LAYOUT",
          "declaration": {
            "name": "DEFAULT_NAVIGATION_LAYOUT",
            "module": "navigation/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "getNextFocusElement",
          "declaration": {
            "name": "getNextFocusElement",
            "module": "navigation/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "getPreviousFocusElement",
          "declaration": {
            "name": "getPreviousFocusElement",
            "module": "navigation/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "getToggleIconDirection",
          "declaration": {
            "name": "getToggleIconDirection",
            "module": "navigation/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "manageScreenReaderElements",
          "declaration": {
            "name": "manageScreenReaderElements",
            "module": "navigation/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "removeFocus",
          "declaration": {
            "name": "removeFocus",
            "module": "navigation/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "setFocus",
          "declaration": {
            "name": "setFocus",
            "module": "navigation/utils/index.js"
          }
        },
        {
          "kind": "js",
          "name": "visibleElement",
          "declaration": {
            "name": "visibleElement",
            "module": "navigation/utils/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pagination/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./pagination.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./pagination-button.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pagination/pagination-button.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Web component pagination button to be used inside pagination.\n\n```typescript\nimport '@cds/core/pagination/register.js';\n```\n\n```html\n<cds-pagination>\n  <cds-pagination-button action=\"first\" disabled></cds-pagination-button>\n  <cds-pagination-button action=\"prev\" disabled></cds-pagination-button>\n  <span aria-label=\"current page\">1 / 3</span>\n  <cds-pagination-button action=\"next\"></cds-pagination-button>\n  <cds-pagination-button action=\"last\"></cds-pagination-button>\n</cds-pagination>\n```",
          "name": "CdsPaginationButton",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--border-color"
            },
            {
              "name": "--border-width"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--box-shadow"
            },
            {
              "name": "--min-height"
            },
            {
              "name": "--min-width"
            }
          ],
          "slots": [
            {},
            {
              "name": "cds-icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "'first' | 'prev' | 'next' | 'last'"
              },
              "description": "Sets the action from a predefined list of actions",
              "attribute": "action"
            },
            {
              "kind": "field",
              "name": "cdsIcon",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "cdsIconDefault",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "customContent",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "validateAriaLabel",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "readonly",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "attribute": "type",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "attribute": "name",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "attribute": "value",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "tabIndexAttr",
              "type": {
                "text": "number | null"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "isAnchor",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "badge",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "marker",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "explicitClick",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "markerSignificantProperties",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "['type', 'name', 'value', 'disabled']",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateActiveMouseDown",
              "privacy": "private",
              "description": "This mimics the mouse-click visual behavior for keyboard only users and screen readers.\nBrowsers do not apply the CSS psuedo-selector :active in those instances. So we need this\nfor our :active styles to show.\n\nMake sure to update a component's CSS to account for the presence of the [_active] attribute\nin all instance where :active is defined.",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateActiveMouseUp",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "setupNativeButtonBehavior",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "triggerNativeButtonBehavior",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "description": "We have to append a hidden button outside the web component in the light DOM\nThis allows us to trigger native submit events within a form element.",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "createMarker",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "markerAttached",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "hasMarkerSignificantProperty",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "props",
                  "type": {
                    "text": "PropertyValues<any>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateKeyBoardEventBehavior",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "updateButtonAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "addDefaultSubmitBehavior",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "action",
              "type": {
                "text": "'first' | 'prev' | 'next' | 'last'"
              },
              "description": "Sets the action from a predefined list of actions",
              "fieldName": "action"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "fieldName": "type",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "fieldName": "name",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "fieldName": "value",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsBaseButton",
            "package": "@cds/core/internal"
          },
          "tagName": "cds-pagination-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsPaginationButton",
          "declaration": {
            "name": "CdsPaginationButton",
            "module": "pagination/pagination-button.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pagination/pagination.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Web component pagination.\n\n```typescript\nimport '@cds/core/pagination/register.js';\n```\n\n```html\n<cds-pagination>\n  <cds-pagination-button action=\"first\" disabled></cds-pagination-button>\n  <cds-pagination-button action=\"prev\" disabled></cds-pagination-button>\n  <span aria-label=\"current page\">1 / 3</span>\n  <cds-pagination-button action=\"next\"></cds-pagination-button>\n  <cds-pagination-button action=\"last\"></cds-pagination-button>\n</cds-pagination>\n```",
          "name": "CdsPagination",
          "cssProperties": [
            {
              "name": "--color"
            },
            {
              "name": "--font-size"
            }
          ],
          "slots": [
            {},
            {
              "name": "cds-pagination-button"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "globalStyles",
              "privacy": "protected",
              "default": "css`\n    [cds-pagination-number] > cds-control-message {\n      --min-width: initial;\n    }\n  `"
            },
            {
              "kind": "field",
              "name": "numberInput",
              "type": {
                "text": "CdsInput"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setupNumberInput",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "validateAriaLabel",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-pagination",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsPagination",
          "declaration": {
            "name": "CdsPagination",
            "module": "pagination/pagination.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pagination/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "password/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./password.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "password/password.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Password\n\n```typescript\nimport '@cds/core/password/register.js';\n```\n\n```html\n<cds-password>\n  <label>Password</label>\n  <input type=\"password\" />\n  <cds-control-message>message text</cds-control-message>\n</cds-password>\n```",
          "name": "CdsPassword",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--background-size"
            },
            {
              "name": "--border"
            },
            {
              "name": "--border-bottom"
            },
            {
              "name": "--outline"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--color"
            },
            {
              "name": "--line-height"
            },
            {
              "name": "--transition"
            }
          ],
          "slots": [
            {
              "description": "For projecting password input and label",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "showPassword",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "togglePasswordVisibility"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              },
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsControl",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-password",
          "customElement": true,
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsPassword",
          "declaration": {
            "name": "CdsPassword",
            "module": "password/password.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "password/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "polyfills/aria-reflect.js",
      "declarations": [
        {
          "kind": "function",
          "name": "reflect",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement | Element"
              }
            },
            {
              "name": "attributeName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "propertyName",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "reflect",
          "declaration": {
            "name": "reflect",
            "module": "polyfills/aria-reflect.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "polyfills/index.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "progress-circle/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./progress-circle.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "progress-circle/progress-circle.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Circular progress indicators provide a method to track how close long-running tasks are to\ncompletion. Circular progress offer a compact way to track progress in a variety of situations.\n\n```typescript\nimport '@cds/core/progress-circle/register.js';\n```\n\n```html\n<cds-progress-circle status=\"info\" value=\"25\"></cds-progress-circle>\n```",
          "name": "CdsProgressCircle",
          "cssProperties": [
            {
              "name": "--ring-color"
            },
            {
              "name": "--ring-opacity"
            },
            {
              "name": "--fill-color"
            },
            {
              "name": "--fill-speed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "_size",
              "type": {
                "text": "string"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | info | success | warning | danger"
              },
              "default": "'neutral'",
              "description": "Sets the color of the badge",
              "attribute": "status"
            },
            {
              "kind": "field",
              "name": "inverse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Inverts color of circular progress bar if `true`.\nUseful for displaying icons on a dark background.",
              "attribute": "inverse"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              },
              "description": "Represents the percent completed from 0 to 100.\n\nIf undefined, the progress-circle will be represented as an indeterminate\nprogress indicator – a.k.a a \"spinner\".",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "line",
              "type": {
                "text": "number"
              },
              "default": "3",
              "description": "Represents the thickness of the stroke of the circular progress.\n\nIf undefined, it defaults to 3.",
              "attribute": "line"
            },
            {
              "kind": "field",
              "name": "radius",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "circumference",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "progress",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "progressOffset",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "size",
              "description": "Apply numerical width-height or a t-shirt-sized CSS classname",
              "type": {
                "text": "string | sm | md | lg | xl | xxl"
              },
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "_ariaLabel",
              "type": {
                "text": "string | undefined | null"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "ariaLabel",
              "description": "Changes the svg glyph displayed in the icon component. Defaults to the 'unknown' icon if\nthe specified icon cannot be found in the icon registry.",
              "attribute": "ariaLabel"
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "method",
              "name": "setAriaAttributes",
              "parameters": [
                {
                  "name": "oldValueForAriaLabelCheck",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "MutationObserver[]"
              },
              "privacy": "protected",
              "default": "[]"
            }
          ],
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | info | success | warning | danger"
              },
              "default": "'neutral'",
              "description": "Sets the color of the badge",
              "fieldName": "status"
            },
            {
              "name": "inverse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Inverts color of circular progress bar if `true`.\nUseful for displaying icons on a dark background.",
              "fieldName": "inverse"
            },
            {
              "name": "value",
              "type": {
                "text": "number"
              },
              "description": "Represents the percent completed from 0 to 100.\n\nIf undefined, the progress-circle will be represented as an indeterminate\nprogress indicator – a.k.a a \"spinner\".",
              "fieldName": "value"
            },
            {
              "name": "line",
              "type": {
                "text": "number"
              },
              "default": "3",
              "description": "Represents the thickness of the stroke of the circular progress.\n\nIf undefined, it defaults to 3.",
              "fieldName": "line"
            },
            {
              "name": "size",
              "description": "Apply numerical width-height or a t-shirt-sized CSS classname",
              "type": {
                "text": "string | sm | md | lg | xl | xxl"
              },
              "fieldName": "size"
            },
            {
              "name": "ariaLabel",
              "description": "Changes the svg glyph displayed in the icon component. Defaults to the 'unknown' icon if\nthe specified icon cannot be found in the icon registry.",
              "fieldName": "ariaLabel"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-progress-circle",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsProgressCircle",
          "declaration": {
            "name": "CdsProgressCircle",
            "module": "progress-circle/progress-circle.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "progress-circle/progress-circle.utils.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getProgressCircleRadius",
          "parameters": [
            {
              "name": "lineThickness",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "viewboxDimension",
              "default": "36"
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAriaLabelFromTemplate",
          "parameters": [
            {
              "name": "currentValue",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "loadingi18n",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "forceToValue",
              "optional": true,
              "type": {
                "text": "number"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getDefaultAriaLabel",
          "parameters": [
            {
              "name": "currentValue",
              "type": {
                "text": "number | undefined | null"
              }
            },
            {
              "name": "loadingi18n",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "loopingMsg",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getAriaLabelOrDefault",
          "parameters": [
            {
              "name": "existingAriaLabel",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "currentValue",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "loadingi18n",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "loopingMsg",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "previousValue",
              "optional": true,
              "type": {
                "text": "number"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getProgressCircleAriaAttributes",
          "return": {
            "type": {
              "text": "HTMLAttributeTuple[]"
            }
          },
          "parameters": [
            {
              "name": "currentValue",
              "type": {
                "text": "number | undefined | null"
              }
            },
            {
              "name": "ariaLabel",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getProgressCircleRadius",
          "declaration": {
            "name": "getProgressCircleRadius",
            "module": "progress-circle/progress-circle.utils.js"
          }
        },
        {
          "kind": "js",
          "name": "getAriaLabelFromTemplate",
          "declaration": {
            "name": "getAriaLabelFromTemplate",
            "module": "progress-circle/progress-circle.utils.js"
          }
        },
        {
          "kind": "js",
          "name": "getDefaultAriaLabel",
          "declaration": {
            "name": "getDefaultAriaLabel",
            "module": "progress-circle/progress-circle.utils.js"
          }
        },
        {
          "kind": "js",
          "name": "getAriaLabelOrDefault",
          "declaration": {
            "name": "getAriaLabelOrDefault",
            "module": "progress-circle/progress-circle.utils.js"
          }
        },
        {
          "kind": "js",
          "name": "getProgressCircleAriaAttributes",
          "declaration": {
            "name": "getProgressCircleAriaAttributes",
            "module": "progress-circle/progress-circle.utils.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "progress-circle/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "radio/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./radio.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./radio-group.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "radio/radio-group.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Radio Group\n\n```typescript\nimport '@cds/core/radio/register.js';\n```\n\n```html\n<cds-radio-group>\n  <label>radio group</label>\n  <cds-radio>\n    <label>item 1</label>\n    <input type=\"radio\" />\n  </cds-radio>\n\n  <cds-radio>\n    <label>item 2</label>\n    <input type=\"radio\" />\n  </cds-radio>\n</cds-radio-group>\n```",
          "name": "CdsRadioGroup",
          "slots": [
            {
              "description": "For projecting cds-radio controls",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "controls",
              "type": {
                "text": "NodeListOf<CdsControl | CdsInternalControlInline>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "radioName",
              "type": {
                "text": "string"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "associateRadioControls",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "syncRadioControls",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of control group validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "horizontal | horizontal"
              },
              "default": "defaultFormLayout",
              "description": "-inline | vertical | vertical-inline | compact}",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "attribute": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disable all controls within a control group or omit and disable controls individually",
              "attribute": "disabled",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "groupLabelId",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<FormLayout>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isInlineControlGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isControlGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlsTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inlineControlLayout",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelLayout",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlMessageLayout",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateLabelAndGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "method",
              "name": "updateControlMessages",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsInternalControlGroup",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-radio-group",
          "customElement": true,
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of control group validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "horizontal | horizontal"
              },
              "default": "defaultFormLayout",
              "description": "-inline | vertical | vertical-inline | compact}",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "fieldName": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disable all controls within a control group or omit and disable controls individually",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsRadioGroup",
          "declaration": {
            "name": "CdsRadioGroup",
            "module": "radio/radio-group.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "radio/radio.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Radio\n\n```typescript\nimport '@cds/core/radio/register.js';\n```\n\n```html\n<cds-radio>\n  <label>Test</label>\n  <input type=\"radio\" />\n</cds-radio>\n```",
          "name": "CdsRadio",
          "cssProperties": [
            {
              "name": "--width"
            },
            {
              "name": "--height"
            },
            {
              "name": "--border"
            },
            {
              "name": "--fill-box-shadow"
            }
          ],
          "slots": [
            {
              "description": "For projecting radio input",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "associateNonGroupRadios",
              "privacy": "private",
              "description": "Native radio inputs have no concept of an un-checked event. This means for\nour radios to update/rerender we need to listen for the other radios in the\ngroup when the are checked. If the Radio is within a cds-control-group or\ncds-radio-group then the group handles this. Radios can be used outside of\ngroups in cases of using aria-labelledby like a selectable grid row/cell."
            },
            {
              "kind": "field",
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "attribute": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isControlGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "checkedChange",
              "type": {
                "text": "EventEmitter<boolean>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "internalLabelTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "method",
              "name": "selectInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              },
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsInternalControlInline",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-radio",
          "customElement": true,
          "attributes": [
            {
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "fieldName": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsRadio",
          "declaration": {
            "name": "CdsRadio",
            "module": "radio/radio.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "radio/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "range/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./range.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "range/range.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Range\n\n```typescript\nimport '@cds/core/range/register.js';\n```\n\n```html\n<cds-range>\n  <label>range</label>\n  <input type=\"range\" />\n  <cds-control-message>message text</cds-control-message>\n</cds-range>\n```",
          "name": "CdsRange",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--track-background"
            },
            {
              "name": "--track-fill-background"
            },
            {
              "name": "--track-height"
            },
            {
              "name": "--thumb-background"
            },
            {
              "name": "--thumb-width"
            },
            {
              "name": "--thumb-height"
            }
          ],
          "slots": [
            {
              "description": "For projecting range input",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "globalStyles",
              "privacy": "protected",
              "default": "globalStyles"
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setTrackWidth",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              },
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsControl",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-range",
          "customElement": true,
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsRange",
          "declaration": {
            "name": "CdsRange",
            "module": "range/range.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "range/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "search/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./search.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "search/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "search/search.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Search\n\n```typescript\nimport '@cds/core/search/register.js';\n```\n\n```html\n<cds-search>\n  <label>Search</label>\n  <input type=\"search\" />\n  <cds-control-message>message text</cds-control-message>\n</cds-search>\n```",
          "name": "CdsSearch",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--background-size"
            },
            {
              "name": "--border"
            },
            {
              "name": "--border-bottom"
            },
            {
              "name": "--outline"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--color"
            },
            {
              "name": "--line-height"
            },
            {
              "name": "--transition"
            }
          ],
          "slots": [
            {
              "description": "For projecting search input and label",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "globalStyles",
              "privacy": "protected",
              "default": "globalStyles"
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              },
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsControl",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-search",
          "customElement": true,
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsSearch",
          "declaration": {
            "name": "CdsSearch",
            "module": "search/search.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "select/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./select.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "select/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "select/select.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Select\n\n```typescript\nimport '@cds/core/select';\n```\n\n```html\n<cds-select>\n  <label>Test</label>\n  <select>\n   <option>Option One</option>\n   <option>Option Two</option>\n   <option>Option Three</option>\n  </select>\n</cds-select>\n```",
          "name": "CdsSelect",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--background-size"
            },
            {
              "name": "--border"
            },
            {
              "name": "--border-bottom"
            },
            {
              "name": "--outline"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--color"
            },
            {
              "name": "--line-height"
            },
            {
              "name": "--transition"
            }
          ],
          "slots": [
            {
              "description": "For projecting select and label",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "globalStyles",
              "privacy": "protected",
              "default": "globalStyles"
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              },
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsControl",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-select",
          "customElement": true,
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsSelect",
          "declaration": {
            "name": "CdsSelect",
            "module": "select/select.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "selection-panels/checkbox/checkbox-panel.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Checkbox\n\n```typescript\nimport '@cds/core/checkbox/register.js';\n```\n\n```html\n<cds-checkbox>\n  <label>\n    <div cds-layout=\"vertical align:center\">\n      <span cds-text=\"section\">VM One</span>\n      <cds-icon shape=\"vm\" badge=\"info\"></cds-icon>\n      <p>Machines for orchestration and automation.</p>\n    </div>\n  </label>\n  <input type=\"checkbox\" />\n  <cds-control-message>message text</cds-control-message>\n</cds-checkbox>\n```",
          "name": "CdsCheckboxPanel",
          "cssProperties": [
            {
              "name": "--width"
            },
            {
              "name": "--height"
            },
            {
              "name": "--border"
            },
            {
              "name": "--box-shadow"
            }
          ],
          "slots": [
            {
              "description": "For projecting checkbox and it's complex label",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "SelectionPanelSizes"
              },
              "default": "'default'",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "internalLabelTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "attribute": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isControlGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "checkedChange",
              "type": {
                "text": "EventEmitter<boolean>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "selectInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              },
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "size",
              "type": {
                "text": "SelectionPanelSizes"
              },
              "default": "'default'",
              "fieldName": "size"
            },
            {
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "fieldName": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsCheckbox",
            "package": "@cds/core/checkbox"
          },
          "tagName": "cds-checkbox",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsCheckboxPanel",
          "declaration": {
            "name": "CdsCheckboxPanel",
            "module": "selection-panels/checkbox/checkbox-panel.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "selection-panels/checkbox/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./checkbox-panel.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "selection-panels/checkbox/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "selection-panels/radio/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./radio-panel.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "selection-panels/radio/radio-panel.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Checkbox\n\n```typescript\nimport '@cds/core/checkbox/register.js';\n```\n\n```html\n<cds-radio>\n  <label>\n    <div cds-layout=\"vertical align:center\">\n      <span cds-text=\"section\">VM One</span>\n      <cds-icon shape=\"vm\" badge=\"info\"></cds-icon>\n      <p>Machines for orchestration and automation.</p>\n    </div>\n  </label>\n  <input type=\"radio\" />\n  <cds-control-message>message text</cds-control-message>\n</cds-radio>\n```",
          "name": "CdsRadioPanel",
          "cssProperties": [
            {
              "name": "--width"
            },
            {
              "name": "--height"
            },
            {
              "name": "--border"
            },
            {
              "name": "--box-shadow"
            }
          ],
          "slots": [
            {
              "description": "For projecting checkbox and it's complex label",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "SelectionPanelSizes"
              },
              "default": "'default'",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "internalLabelTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateNonGroupRadios",
              "privacy": "private",
              "description": "Native radio inputs have no concept of an un-checked event. This means for\nour radios to update/rerender we need to listen for the other radios in the\ngroup when the are checked. If the Radio is within a cds-control-group or\ncds-radio-group then the group handles this. Radios can be used outside of\ngroups in cases of using aria-labelledby like a selectable grid row/cell.",
              "inheritedFrom": {
                "name": "CdsRadio",
                "module": "radio/radio.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "attribute": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isControlGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "checkedChange",
              "type": {
                "text": "EventEmitter<boolean>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "selectInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              },
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "size",
              "type": {
                "text": "SelectionPanelSizes"
              },
              "default": "'default'",
              "fieldName": "size"
            },
            {
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "fieldName": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsRadio",
            "package": "@cds/core/radio"
          },
          "tagName": "cds-radio",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsRadioPanel",
          "declaration": {
            "name": "CdsRadioPanel",
            "module": "selection-panels/radio/radio-panel.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "selection-panels/radio/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "selection-panels/shared/selection-panel.interfaces.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "tag/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./tag.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "tag/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "tag/tag.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Tags show concise metadata in a compact format.\nTags are visually styled to differentiate them from buttons.\n\n```typescript\nimport '@cds/core/tag/register.js';\n```\n\n```html\n<cds-tag status=\"info\">Info</cds-tag>\n```",
          "name": "CdsTag",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--border-color"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--border-width"
            },
            {
              "name": "--color"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--size"
            }
          ],
          "slots": [
            {
              "description": "Content slot for inside the tag",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | info | success | warning | danger"
              },
              "default": "'neutral'",
              "description": "Sets the color of the tag (and badge if present) from the following predefined list of statuses:",
              "attribute": "status"
            },
            {
              "kind": "field",
              "name": "color",
              "type": {
                "text": "'gray' | 'purple' | 'blue' | 'orange' | 'light-blue'"
              },
              "description": "Sets the color of the tag (and badge if present) from a predefined list of choices",
              "attribute": "color"
            },
            {
              "kind": "field",
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "If present, shows a close icon to one side of the tag.\nNote that applications must wire up the action to remove the tag on click and also\nthat you cannot have a clickable AND closable tag. The closable attribute-property\nshows the close icon. What happens when the tag is clicked is for application developers\nto decide.\nIf closable is present, the tag will be considered \"clickable\".",
              "attribute": "closable"
            },
            {
              "kind": "field",
              "name": "groupLabelId",
              "type": {
                "text": "string"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "readonly",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "attribute": "type",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "attribute": "name",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "attribute": "value",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "tabIndexAttr",
              "type": {
                "text": "number | null"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "isAnchor",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "badge",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "marker",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "explicitClick",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "markerSignificantProperties",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "['type', 'name', 'value', 'disabled']",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateActiveMouseDown",
              "privacy": "private",
              "description": "This mimics the mouse-click visual behavior for keyboard only users and screen readers.\nBrowsers do not apply the CSS psuedo-selector :active in those instances. So we need this\nfor our :active styles to show.\n\nMake sure to update a component's CSS to account for the presence of the [_active] attribute\nin all instance where :active is defined.",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateActiveMouseUp",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "setupNativeButtonBehavior",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "triggerNativeButtonBehavior",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "description": "We have to append a hidden button outside the web component in the light DOM\nThis allows us to trigger native submit events within a form element.",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "createMarker",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "field",
              "name": "markerAttached",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "hasMarkerSignificantProperty",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "props",
                  "type": {
                    "text": "PropertyValues<any>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "emulateKeyBoardEventBehavior",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "updateButtonAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "kind": "method",
              "name": "addDefaultSubmitBehavior",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | info | success | warning | danger"
              },
              "default": "'neutral'",
              "description": "Sets the color of the tag (and badge if present) from the following predefined list of statuses:",
              "fieldName": "status"
            },
            {
              "name": "color",
              "type": {
                "text": "'gray' | 'purple' | 'blue' | 'orange' | 'light-blue'"
              },
              "description": "Sets the color of the tag (and badge if present) from a predefined list of choices",
              "fieldName": "color"
            },
            {
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "If present, shows a close icon to one side of the tag.\nNote that applications must wire up the action to remove the tag on click and also\nthat you cannot have a clickable AND closable tag. The closable attribute-property\nshows the close icon. What happens when the tag is clicked is for application developers\nto decide.\nIf closable is present, the tag will be considered \"clickable\".",
              "fieldName": "closable"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "fieldName": "type",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "fieldName": "name",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "fieldName": "value",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "CdsBaseButton",
                "module": "internal/base/button.base.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsBaseButton",
            "package": "@cds/core/internal"
          },
          "tagName": "cds-tag",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsTag",
          "declaration": {
            "name": "CdsTag",
            "module": "tag/tag.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "test-dropdown/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-dropdown.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "test-dropdown/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "test-dropdown/test-dropdown.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Dropdown, example test component. Do not use in production.\n\n```typescript\nimport '@cds/core/test-dropdown';\n```\n\n```html\n<cds-test-dropdown title=\"click me!\">\n  Hello World\n</cds-test-dropdown>\n```",
          "name": "CdsTestDropdown",
          "cssProperties": [
            {
              "name": "--border-color"
            },
            {
              "name": "--background-color"
            },
            {
              "name": "--text-color"
            }
          ],
          "slots": [
            {
              "description": "Content slot for dropdown content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "openChange",
              "type": {
                "text": "EventEmitter<boolean>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Set open to open or close the dropdown",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "'dropdown'",
              "description": "Set the dropdown button text",
              "attribute": "title"
            },
            {
              "kind": "method",
              "name": "toggle",
              "description": "Toggle the current open state of the dropdown"
            }
          ],
          "events": [
            {
              "type": {
                "text": "boolean"
              },
              "description": "notify open state change of dropdown",
              "name": "openChange"
            }
          ],
          "attributes": [
            {
              "name": "open",
              "description": "Set open to open or close the dropdown",
              "fieldName": "open"
            },
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "'dropdown'",
              "description": "Set the dropdown button text",
              "fieldName": "title"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsTestDropdown",
          "declaration": {
            "name": "CdsTestDropdown",
            "module": "test-dropdown/test-dropdown.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "textarea/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./textarea.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "textarea/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "textarea/textarea.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Form\n\n```typescript\nimport '@cds/core/textarea/register.js';\n```\n\n```html\n<cds-textarea>\n  <label>textarea</label>\n  <textarea></textarea>\n  <cds-control-message>message text</cds-control-message>\n</cds-textarea>\n```",
          "name": "CdsTextarea",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--border"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--color"
            },
            {
              "name": "--border-radius"
            }
          ],
          "slots": [
            {
              "description": "For projecting cds-inputs",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              },
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsControl",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-textarea",
          "customElement": true,
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsTextarea",
          "declaration": {
            "name": "CdsTextarea",
            "module": "textarea/textarea.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "time/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./time.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "time/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "time/time.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Time Input\n\n```typescript\nimport '@cds/core/time/register.js';\n```\n\n```html\n<cds-time>\n  <label>time</label>\n  <input type=\"time\" />\n  <cds-control-message>message text</cds-control-message>\n</cds-time>\n```",
          "name": "CdsTime",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--background-size"
            },
            {
              "name": "--border"
            },
            {
              "name": "--border-bottom"
            },
            {
              "name": "--outline"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--color"
            },
            {
              "name": "--line-height"
            },
            {
              "name": "--transition"
            }
          ],
          "slots": [
            {
              "description": "For projecting time input and label",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "globalStyles",
              "privacy": "protected",
              "default": "globalStyles"
            },
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              },
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsControl",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-time",
          "customElement": true,
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsTime",
          "declaration": {
            "name": "CdsTime",
            "module": "time/time.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "toggle/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toggle.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toggle-group.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "toggle/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "toggle/toggle-group.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Toggle Group\n\n```typescript\nimport '@cds/core/toggle/register.js';\n```\n\n```html\n<cds-toggle-group>\n  <label>Select an item</label>\n  <cds-toggle>\n    <label>toggle</label>\n    <input type=\"checkbox\" />\n  </cds-toggle>\n\n  <cds-toggle>\n    <label>toggle</label>\n    <input type=\"checkbox\" />\n  </cds-toggle>\n</cds-toggle-group>\n```",
          "name": "CdsToggleGroup",
          "slots": [
            {
              "description": "For projecting toggle controls",
              "name": ""
            }
          ],
          "superclass": {
            "name": "CdsInternalControlGroup",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-toggle-group",
          "customElement": true,
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of control group validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "horizontal | horizontal"
              },
              "default": "defaultFormLayout",
              "description": "-inline | vertical | vertical-inline | compact}",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "fieldName": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disable all controls within a control group or omit and disable controls individually",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of control group validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "horizontal | horizontal"
              },
              "default": "defaultFormLayout",
              "description": "-inline | vertical | vertical-inline | compact}",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "attribute": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disable all controls within a control group or omit and disable controls individually",
              "attribute": "disabled",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controls",
              "type": {
                "text": "NodeListOf<CdsControl | CdsInternalControlInline>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "groupLabelId",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<FormLayout>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isInlineControlGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isControlGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "true",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlsTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inlineControlLayout",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelLayout",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlMessageLayout",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateLabelAndGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "method",
              "name": "updateControlMessages",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlGroup",
                "module": "forms/control-group/control-group.element.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsToggleGroup",
          "declaration": {
            "name": "CdsToggleGroup",
            "module": "toggle/toggle-group.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "toggle/toggle.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Toggle\n\n```typescript\nimport '@cds/core/toggle/register.js';\n```\n\n```html\n<cds-toggle>\n  <label>Toggle</label>\n  <input type=\"checkbox\" />\n</cds-toggle>\n```",
          "name": "CdsToggle",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--border"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--height"
            },
            {
              "name": "--width"
            },
            {
              "name": "--anchor-background"
            },
            {
              "name": "--anchor-border-radius"
            },
            {
              "name": "--anchor-width"
            },
            {
              "name": "--anchor-height"
            },
            {
              "name": "--toggle-speed"
            }
          ],
          "slots": [
            {
              "description": "For projecting checkbox",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "cdsMotion",
              "type": {
                "text": "string"
              },
              "default": "'on'",
              "attribute": "cdsMotion"
            },
            {
              "kind": "field",
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "attribute": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isControlGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "checkedChange",
              "type": {
                "text": "EventEmitter<boolean>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "supportsPrefixSuffixActions",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "internalLabelTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "method",
              "name": "selectInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "attribute": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "attribute": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "attribute": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "attribute": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "attribute": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "ControlLayout"
              },
              "privacy": "private",
              "default": "defaultFormLayout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "fixedControlWidth",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isRTL",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "labelLayout",
              "type": {
                "text": "ControlLabelLayout"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlLabel",
              "type": {
                "text": "CdsInternalControlLabel"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "datalistControl",
              "type": {
                "text": "HTMLDataListElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messages",
              "type": {
                "text": "NodeListOf<CdsControlMessage>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "controlActions",
              "type": {
                "text": "NodeListOf<CdsControlAction>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixAction",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messageSlot",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutChange",
              "type": {
                "text": "EventEmitter<ControlLayout>"
              },
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "observers",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasAriaLabelTypeAttr",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasStatusIcon",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "inputTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixDefaultTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "isGenericControl",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "hasControlActions",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "primaryLabelTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "messagesTemplate",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputAndLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "associateInputToDatalist",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupDescribedByUpdates",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHostAttributes",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupHTML5Validation",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setActionOffsetPadding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "field",
              "name": "layoutStable",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupResponsive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "setupLabelLayout",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "kind": "method",
              "name": "assignSlotIfInControlGroup",
              "privacy": "private",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "cdsMotion",
              "type": {
                "text": "string"
              },
              "default": "'on'",
              "fieldName": "cdsMotion"
            },
            {
              "name": "controlAlign",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'",
              "description": "Align the labels of controls within group left or right",
              "fieldName": "controlAlign",
              "inheritedFrom": {
                "name": "CdsInternalControlInline",
                "module": "forms/control-inline/control-inline.element.js"
              }
            },
            {
              "name": "status",
              "type": {
                "text": "neutral | error | success"
              },
              "default": "'neutral'",
              "description": "Set the status of form control validation",
              "fieldName": "status",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "controlWidth",
              "type": {
                "text": "stretch | shrink"
              },
              "default": "defaultControlWidth",
              "description": "Adjust the control from the default full width or the browser default width",
              "resolveInitializer": {
                "module": "/forms/utils/index.js"
              },
              "fieldName": "controlWidth",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "validate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set the validate attribute to sync with HTML5 native validation\nhttps://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation",
              "fieldName": "validate",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "By default forms will collapse to layout that prevents overflow.\nIf disabled control layout may break or overflow in unexpected ways.",
              "fieldName": "responsive",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            },
            {
              "name": "layout",
              "type": {
                "text": "vertical | horizontal | compact"
              },
              "description": "Set to adjust the default control layout. When `responsive` is true this will be the largest size to scale to.",
              "fieldName": "layout",
              "inheritedFrom": {
                "name": "CdsControl",
                "module": "forms/control/control.element.js"
              }
            }
          ],
          "superclass": {
            "name": "CdsInternalControlInline",
            "package": "@cds/core/forms"
          },
          "tagName": "cds-toggle",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsToggle",
          "declaration": {
            "name": "CdsToggle",
            "module": "toggle/toggle.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "tree-view/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./tree.element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./tree-item.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "tree-view/register.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "tree-view/tree-item.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Tree view is a hierarchical component that gives users access to a hierarchical set of objects displayed in a the parent-child relationship.\n\n```typescript\nimport '@cds/core/tree-view/register.js';\n```\n\n```html\n <cds-tree>\n   <cds-tree-item>1</cds-tree-item>\n   <cds-tree-item>2</cds-tree-item>\n   <cds-tree-item>3</cds-tree-item>\n </cds-tree>\n```",
          "name": "CdsTreeItem",
          "cssProperties": [
            {
              "name": "--animation-duration"
            },
            {
              "name": "--animation-easing"
            },
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--focus-width"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--font-weight"
            }
          ],
          "slots": [
            {
              "description": "Content slot for inside the tree item",
              "name": ""
            },
            {
              "name": "expand-collapse-icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "cdsMotion",
              "type": {
                "text": "string"
              },
              "default": "'on'",
              "attribute": "cdsMotion"
            },
            {
              "kind": "field",
              "name": "cdsMotionChange",
              "type": {
                "text": "EventEmitter<string>"
              }
            },
            {
              "kind": "field",
              "name": "multiSelect",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "multi-select",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expandable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "indeterminate",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "loading",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "selected",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "treeItemChildren",
              "type": {
                "text": "NodeListOf<CdsTreeItem>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "anchorLink",
              "type": {
                "text": "HTMLAnchorElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "expandedChange",
              "type": {
                "text": "EventEmitter<boolean>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "selectedChange",
              "type": {
                "text": "EventEmitter<boolean>"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "toggleExpanded"
            },
            {
              "kind": "method",
              "name": "toggleSelected"
            },
            {
              "kind": "method",
              "name": "onSlotChange",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "treeItemLeftHandSideTemplate",
              "description": "This container contains one of the following depending on the state of the tree item:\n  - caret if the tree item is expandable\n  - progress circle if the tree item is loading its children (via an async call, etc)\n  - nothing if the tree item is an end node\n\nThe container with a fixed width ensures the same alignment whether or not it contains\na child elemeent to render.",
              "privacy": "private",
              "readonly": true
            }
          ],
          "events": [
            {
              "description": "notify when the user has clicked the expand / collapse button",
              "name": "expandedChange"
            },
            {
              "description": "notify when the user has clicked the tree item",
              "name": "selectedChange"
            }
          ],
          "attributes": [
            {
              "name": "cdsMotion",
              "type": {
                "text": "string"
              },
              "default": "'on'",
              "fieldName": "cdsMotion"
            },
            {
              "name": "multi-select",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "multiSelect"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expanded"
            },
            {
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expandable"
            },
            {
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "indeterminate"
            },
            {
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "loading"
            },
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "selected"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-tree-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsTreeItem",
          "declaration": {
            "name": "CdsTreeItem",
            "module": "tree-view/tree-item.element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "tree-view/tree.element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Tree view is a hierarchical component that gives users access to a hierarchical set of objects displayed in a the parent-child relationship.\n\n```typescript\nimport '@cds/core/tree-view/register.js';\n```\n\n```html\n <cds-tree>\n   <cds-tree-item>1</cds-tree-item>\n   <cds-tree-item>2</cds-tree-item>\n   <cds-tree-item>3</cds-tree-item>\n </cds-tree>\n```",
          "name": "CdsTree",
          "slots": [
            {
              "description": "Content slot for inside the tree",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "multiSelect",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "multi-select"
            },
            {
              "kind": "field",
              "name": "firstChildItem",
              "type": {
                "text": "CdsTreeItem"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "childrenItems",
              "type": {
                "text": "NodeListOf<CdsTreeItem>"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "clickHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "currentActiveItem",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "initAriaActiveDescendant",
              "privacy": "private",
              "description": "The reason why we wait till onfocus to initialize aria-activedescendant is to\naccount for lazy loaded children."
            },
            {
              "kind": "method",
              "name": "setAriaActiveDescendant",
              "privacy": "private",
              "parameters": [
                {
                  "name": "activeItem",
                  "type": {
                    "text": "CdsTreeItem"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "visibleChildren",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "keyboardNavigationHandler",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "multi-select",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "multiSelect"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "cds-tree",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CdsTree",
          "declaration": {
            "name": "CdsTree",
            "module": "tree-view/tree.element.js"
          }
        }
      ]
    }
  ]
}
